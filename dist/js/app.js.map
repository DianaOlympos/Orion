{
  "version": 3,
  "sources": ["../../assets/node_modules/topbar/topbar.min.js", "../../assets/js/app.js", "../../assets/node_modules/uplot/dist/uPlot.esm.js", "../../assets/js/chart.js"],
  "sourcesContent": ["/**\n * @license MIT\n * topbar 2.0.0, 2023-02-04\n * http://buunguyen.github.io/topbar\n * Copyright (c) 2021 Buu Nguyen\n */\n(function(window,document){\"use strict\";function repaint(){canvas.width=window.innerWidth,canvas.height=5*options.barThickness;var ctx=canvas.getContext(\"2d\");ctx.shadowBlur=options.shadowBlur,ctx.shadowColor=options.shadowColor;var stop,lineGradient=ctx.createLinearGradient(0,0,canvas.width,0);for(stop in options.barColors)lineGradient.addColorStop(stop,options.barColors[stop]);ctx.lineWidth=options.barThickness,ctx.beginPath(),ctx.moveTo(0,options.barThickness/2),ctx.lineTo(Math.ceil(currentProgress*canvas.width),options.barThickness/2),ctx.strokeStyle=lineGradient,ctx.stroke()}var canvas,currentProgress,showing,progressTimerId=null,fadeTimerId=null,delayTimerId=null,options={autoRun:!0,barThickness:3,barColors:{0:\"rgba(26,  188, 156, .9)\",\".25\":\"rgba(52,  152, 219, .9)\",\".50\":\"rgba(241, 196, 15,  .9)\",\".75\":\"rgba(230, 126, 34,  .9)\",\"1.0\":\"rgba(211, 84,  0,   .9)\"},shadowBlur:10,shadowColor:\"rgba(0,   0,   0,   .6)\",className:null},topbar={config:function(opts){for(var key in opts)options.hasOwnProperty(key)&&(options[key]=opts[key])},show:function(handler){var type,elem;showing||(handler?delayTimerId=delayTimerId||setTimeout(()=>topbar.show(),handler):(showing=!0,null!==fadeTimerId&&window.cancelAnimationFrame(fadeTimerId),canvas||((elem=(canvas=document.createElement(\"canvas\")).style).position=\"fixed\",elem.top=elem.left=elem.right=elem.margin=elem.padding=0,elem.zIndex=100001,elem.display=\"none\",options.className&&canvas.classList.add(options.className),document.body.appendChild(canvas),type=\"resize\",handler=repaint,(elem=window).addEventListener?elem.addEventListener(type,handler,!1):elem.attachEvent?elem.attachEvent(\"on\"+type,handler):elem[\"on\"+type]=handler),canvas.style.opacity=1,canvas.style.display=\"block\",topbar.progress(0),options.autoRun&&function loop(){progressTimerId=window.requestAnimationFrame(loop),topbar.progress(\"+\"+.05*Math.pow(1-Math.sqrt(currentProgress),2))}()))},progress:function(to){return void 0===to||(\"string\"==typeof to&&(to=(0<=to.indexOf(\"+\")||0<=to.indexOf(\"-\")?currentProgress:0)+parseFloat(to)),currentProgress=1<to?1:to,repaint()),currentProgress},hide:function(){clearTimeout(delayTimerId),delayTimerId=null,showing&&(showing=!1,null!=progressTimerId&&(window.cancelAnimationFrame(progressTimerId),progressTimerId=null),function loop(){return 1<=topbar.progress(\"+.1\")&&(canvas.style.opacity-=.05,canvas.style.opacity<=.05)?(canvas.style.display=\"none\",void(fadeTimerId=null)):void(fadeTimerId=window.requestAnimationFrame(loop))}())}};\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=topbar:\"function\"==typeof define&&define.amd?define(function(){return topbar}):this.topbar=topbar}).call(this,window,document);", "import topbar from \"topbar\"\nimport { ChartData } from \"./chart.js\"\n\nlet socketPath = document.querySelector(\"html\").getAttribute(\"phx-socket\") || \"/live\"\nlet csrfToken = document.querySelector(\"meta[name='csrf-token']\").getAttribute(\"content\")\n\nlet Hooks = {\n  ChartData: ChartData\n}\n\nlet liveSocket = new LiveView.LiveSocket(socketPath, Phoenix.Socket, { hooks: Hooks, params: { _csrf_token: csrfToken } })\n\n// Show progress bar on live navigation and form submits\ntopbar.config({ barColors: { 0: \"#29d\" }, shadowColor: \"rgba(0, 0, 0, .3)\" })\nwindow.addEventListener(\"phx:page-loading-start\", info => topbar.show())\nwindow.addEventListener(\"phx:page-loading-stop\", info => topbar.hide())\n\n// connect if there are any LiveViews on the page\nliveSocket.connect()\n\n// expose liveSocket on window for web console debug logs and latency simulation:\n// >> liveSocket.enableDebug()\n// >> liveSocket.enableLatencySim(1000)  // enabled for duration of browser session\n// >> liveSocket.disableLatencySim()\nwindow.liveSocket = liveSocket\n\n", "/**\n* Copyright (c) 2023, Leon Sorokin\n* All rights reserved. (MIT Licensed)\n*\n* uPlot.js (\u03BCPlot)\n* A small, fast chart for time series, lines, areas, ohlc & bars\n* https://github.com/leeoniya/uPlot (v1.6.24)\n*/\n\nconst FEAT_TIME          = true;\n\nconst pre = \"u-\";\n\nconst UPLOT          =       \"uplot\";\nconst ORI_HZ         = pre + \"hz\";\nconst ORI_VT         = pre + \"vt\";\nconst TITLE          = pre + \"title\";\nconst WRAP           = pre + \"wrap\";\nconst UNDER          = pre + \"under\";\nconst OVER           = pre + \"over\";\nconst AXIS           = pre + \"axis\";\nconst OFF            = pre + \"off\";\nconst SELECT         = pre + \"select\";\nconst CURSOR_X       = pre + \"cursor-x\";\nconst CURSOR_Y       = pre + \"cursor-y\";\nconst CURSOR_PT      = pre + \"cursor-pt\";\nconst LEGEND         = pre + \"legend\";\nconst LEGEND_LIVE    = pre + \"live\";\nconst LEGEND_INLINE  = pre + \"inline\";\nconst LEGEND_THEAD   = pre + \"thead\";\nconst LEGEND_SERIES  = pre + \"series\";\nconst LEGEND_MARKER  = pre + \"marker\";\nconst LEGEND_LABEL   = pre + \"label\";\nconst LEGEND_VALUE   = pre + \"value\";\n\nconst WIDTH       = \"width\";\nconst HEIGHT      = \"height\";\nconst TOP         = \"top\";\nconst BOTTOM      = \"bottom\";\nconst LEFT        = \"left\";\nconst RIGHT       = \"right\";\nconst hexBlack    = \"#000\";\nconst transparent = hexBlack + \"0\";\n\nconst mousemove   = \"mousemove\";\nconst mousedown   = \"mousedown\";\nconst mouseup     = \"mouseup\";\nconst mouseenter  = \"mouseenter\";\nconst mouseleave  = \"mouseleave\";\nconst dblclick    = \"dblclick\";\nconst resize      = \"resize\";\nconst scroll      = \"scroll\";\n\nconst change      = \"change\";\nconst dppxchange  = \"dppxchange\";\n\nconst LEGEND_DISP = \"--\";\n\nconst domEnv = typeof window != 'undefined';\n\nconst doc = domEnv ? document  : null;\nconst win = domEnv ? window    : null;\nconst nav = domEnv ? navigator : null;\n\nlet pxRatio;\n\n//export const canHover = domEnv && !win.matchMedia('(hover: none)').matches;\n\nlet query;\n\nfunction setPxRatio() {\n\tlet _pxRatio = devicePixelRatio;\n\n\t// during print preview, Chrome fires off these dppx queries even without changes\n\tif (pxRatio != _pxRatio) {\n\t\tpxRatio = _pxRatio;\n\n\t\tquery && off(change, query, setPxRatio);\n\t\tquery = matchMedia(`(min-resolution: ${pxRatio - 0.001}dppx) and (max-resolution: ${pxRatio + 0.001}dppx)`);\n\t\ton(change, query, setPxRatio);\n\n\t\twin.dispatchEvent(new CustomEvent(dppxchange));\n\t}\n}\n\nfunction addClass(el, c) {\n\tif (c != null) {\n\t\tlet cl = el.classList;\n\t\t!cl.contains(c) && cl.add(c);\n\t}\n}\n\nfunction remClass(el, c) {\n\tlet cl = el.classList;\n\tcl.contains(c) && cl.remove(c);\n}\n\nfunction setStylePx(el, name, value) {\n\tel.style[name] = value + \"px\";\n}\n\nfunction placeTag(tag, cls, targ, refEl) {\n\tlet el = doc.createElement(tag);\n\n\tif (cls != null)\n\t\taddClass(el, cls);\n\n\tif (targ != null)\n\t\ttarg.insertBefore(el, refEl);\n\n\treturn el;\n}\n\nfunction placeDiv(cls, targ) {\n\treturn placeTag(\"div\", cls, targ);\n}\n\nconst xformCache = new WeakMap();\n\nfunction elTrans(el, xPos, yPos, xMax, yMax) {\n\tlet xform = \"translate(\" + xPos + \"px,\" + yPos + \"px)\";\n\tlet xformOld = xformCache.get(el);\n\n\tif (xform != xformOld) {\n\t\tel.style.transform = xform;\n\t\txformCache.set(el, xform);\n\n\t\tif (xPos < 0 || yPos < 0 || xPos > xMax || yPos > yMax)\n\t\t\taddClass(el, OFF);\n\t\telse\n\t\t\tremClass(el, OFF);\n\t}\n}\n\nconst colorCache = new WeakMap();\n\nfunction elColor(el, background, borderColor) {\n\tlet newColor = background + borderColor;\n\tlet oldColor = colorCache.get(el);\n\n\tif (newColor != oldColor) {\n\t\tcolorCache.set(el, newColor);\n\t\tel.style.background = background;\n\t\tel.style.borderColor = borderColor;\n\t}\n}\n\nconst sizeCache = new WeakMap();\n\nfunction elSize(el, newWid, newHgt, centered) {\n\tlet newSize = newWid + \"\" + newHgt;\n\tlet oldSize = sizeCache.get(el);\n\n\tif (newSize != oldSize) {\n\t\tsizeCache.set(el, newSize);\n\t\tel.style.height = newHgt + \"px\";\n\t\tel.style.width = newWid + \"px\";\n\t\tel.style.marginLeft = centered ? -newWid/2 + \"px\" : 0;\n\t\tel.style.marginTop = centered ? -newHgt/2 + \"px\" : 0;\n\t}\n}\n\nconst evOpts = {passive: true};\nconst evOpts2 = {...evOpts, capture: true};\n\nfunction on(ev, el, cb, capt) {\n\tel.addEventListener(ev, cb, capt ? evOpts2 : evOpts);\n}\n\nfunction off(ev, el, cb, capt) {\n\tel.removeEventListener(ev, cb, capt ? evOpts2 : evOpts);\n}\n\ndomEnv && setPxRatio();\n\n// binary search for index of closest value\nfunction closestIdx(num, arr, lo, hi) {\n\tlet mid;\n\tlo = lo || 0;\n\thi = hi || arr.length - 1;\n\tlet bitwise = hi <= 2147483647;\n\n\twhile (hi - lo > 1) {\n\t\tmid = bitwise ? (lo + hi) >> 1 : floor((lo + hi) / 2);\n\n\t\tif (arr[mid] < num)\n\t\t\tlo = mid;\n\t\telse\n\t\t\thi = mid;\n\t}\n\n\tif (num - arr[lo] <= arr[hi] - num)\n\t\treturn lo;\n\n\treturn hi;\n}\n\nfunction nonNullIdx(data, _i0, _i1, dir) {\n\tfor (let i = dir == 1 ? _i0 : _i1; i >= _i0 && i <= _i1; i += dir) {\n\t\tif (data[i] != null)\n\t\t\treturn i;\n\t}\n\n\treturn -1;\n}\n\nfunction getMinMax(data, _i0, _i1, sorted) {\n//\tconsole.log(\"getMinMax()\");\n\n\tlet _min = inf;\n\tlet _max = -inf;\n\n\tif (sorted == 1) {\n\t\t_min = data[_i0];\n\t\t_max = data[_i1];\n\t}\n\telse if (sorted == -1) {\n\t\t_min = data[_i1];\n\t\t_max = data[_i0];\n\t}\n\telse {\n\t\tfor (let i = _i0; i <= _i1; i++) {\n\t\t\tif (data[i] != null) {\n\t\t\t\t_min = min(_min, data[i]);\n\t\t\t\t_max = max(_max, data[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [_min, _max];\n}\n\nfunction getMinMaxLog(data, _i0, _i1) {\n//\tconsole.log(\"getMinMax()\");\n\n\tlet _min = inf;\n\tlet _max = -inf;\n\n\tfor (let i = _i0; i <= _i1; i++) {\n\t\tif (data[i] > 0) {\n\t\t\t_min = min(_min, data[i]);\n\t\t\t_max = max(_max, data[i]);\n\t\t}\n\t}\n\n\treturn [\n\t\t_min ==  inf ?  1 : _min,\n\t\t_max == -inf ? 10 : _max,\n\t];\n}\n\nfunction rangeLog(min, max, base, fullMags) {\n\tlet minSign = sign(min);\n\tlet maxSign = sign(max);\n\n\tlet logFn = base == 10 ? log10 : log2;\n\n\tif (min == max) {\n\t\tif (minSign == -1) {\n\t\t\tmin *= base;\n\t\t\tmax /= base;\n\t\t}\n\t\telse {\n\t\t\tmin /= base;\n\t\t\tmax *= base;\n\t\t}\n\t}\n\n\tlet growMinAbs = minSign == 1 ? floor : ceil;\n\tlet growMaxAbs = maxSign == 1 ? ceil : floor;\n\n\tlet minExp = growMinAbs(logFn(abs(min)));\n\tlet maxExp = growMaxAbs(logFn(abs(max)));\n\n\tlet minIncr = pow(base, minExp);\n\tlet maxIncr = pow(base, maxExp);\n\n\t// fix values like Math.pow(10, -5) === 0.000009999999999999999\n\tif (base == 10) {\n\t\tif (minExp < 0)\n\t\t\tminIncr = roundDec(minIncr, -minExp);\n\t\tif (maxExp < 0)\n\t\t\tmaxIncr = roundDec(maxIncr, -maxExp);\n\t}\n\n\tif (fullMags || base == 2) {\n\t\tmin = minIncr * minSign;\n\t\tmax = maxIncr * maxSign;\n\t}\n\telse {\n\t\tmin = incrRoundDn(min, minIncr);\n\t\tmax = incrRoundUp(max, maxIncr);\n\t}\n\n\treturn [min, max];\n}\n\nfunction rangeAsinh(min, max, base, fullMags) {\n\tlet minMax = rangeLog(min, max, base, fullMags);\n\n\tif (min == 0)\n\t\tminMax[0] = 0;\n\n\tif (max == 0)\n\t\tminMax[1] = 0;\n\n\treturn minMax;\n}\n\nconst rangePad = 0.1;\n\nconst autoRangePart = {\n\tmode: 3,\n\tpad: rangePad,\n};\n\nconst _eqRangePart = {\n\tpad:  0,\n\tsoft: null,\n\tmode: 0,\n};\n\nconst _eqRange = {\n\tmin: _eqRangePart,\n\tmax: _eqRangePart,\n};\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction rangeNum(_min, _max, mult, extra) {\n\tif (isObj(mult))\n\t\treturn _rangeNum(_min, _max, mult);\n\n\t_eqRangePart.pad  = mult;\n\t_eqRangePart.soft = extra ? 0 : null;\n\t_eqRangePart.mode = extra ? 3 : 0;\n\n\treturn _rangeNum(_min, _max, _eqRange);\n}\n\n// nullish coalesce\nfunction ifNull(lh, rh) {\n\treturn lh == null ? rh : lh;\n}\n\n// checks if given index range in an array contains a non-null value\n// aka a range-bounded Array.some()\nfunction hasData(data, idx0, idx1) {\n\tidx0 = ifNull(idx0, 0);\n\tidx1 = ifNull(idx1, data.length - 1);\n\n\twhile (idx0 <= idx1) {\n\t\tif (data[idx0] != null)\n\t\t\treturn true;\n\t\tidx0++;\n\t}\n\n\treturn false;\n}\n\nfunction _rangeNum(_min, _max, cfg) {\n\tlet cmin = cfg.min;\n\tlet cmax = cfg.max;\n\n\tlet padMin = ifNull(cmin.pad, 0);\n\tlet padMax = ifNull(cmax.pad, 0);\n\n\tlet hardMin = ifNull(cmin.hard, -inf);\n\tlet hardMax = ifNull(cmax.hard,  inf);\n\n\tlet softMin = ifNull(cmin.soft,  inf);\n\tlet softMax = ifNull(cmax.soft, -inf);\n\n\tlet softMinMode = ifNull(cmin.mode, 0);\n\tlet softMaxMode = ifNull(cmax.mode, 0);\n\n\tlet delta = _max - _min;\n\tlet deltaMag = log10(delta);\n\n\tlet scalarMax = max(abs(_min), abs(_max));\n\tlet scalarMag = log10(scalarMax);\n\n\tlet scalarMagDelta = abs(scalarMag - deltaMag);\n\n\t// this handles situations like 89.7, 89.69999999999999\n\t// by assuming 0.001x deltas are precision errors\n//\tif (delta > 0 && delta < abs(_max) / 1e3)\n//\t\tdelta = 0;\n\n\t// treat data as flat if delta is less than 1 billionth\n\t// or range is 11+ orders of magnitude below raw values, e.g. 99999999.99999996 - 100000000.00000004\n\tif (delta < 1e-9 || scalarMagDelta > 10) {\n\t\tdelta = 0;\n\n\t\t// if soft mode is 2 and all vals are flat at 0, avoid the 0.1 * 1e3 fallback\n\t\t// this prevents 0,0,0 from ranging to -100,100 when softMin/softMax are -1,1\n\t\tif (_min == 0 || _max == 0) {\n\t\t\tdelta = 1e-9;\n\n\t\t\tif (softMinMode == 2 && softMin != inf)\n\t\t\t\tpadMin = 0;\n\n\t\t\tif (softMaxMode == 2 && softMax != -inf)\n\t\t\t\tpadMax = 0;\n\t\t}\n\t}\n\n\tlet nonZeroDelta = delta || scalarMax || 1e3;\n\tlet mag          = log10(nonZeroDelta);\n\tlet base         = pow(10, floor(mag));\n\n\tlet _padMin  = nonZeroDelta * (delta == 0 ? (_min == 0 ? .1 : 1) : padMin);\n\tlet _newMin  = roundDec(incrRoundDn(_min - _padMin, base/10), 9);\n\tlet _softMin = _min >= softMin && (softMinMode == 1 || softMinMode == 3 && _newMin <= softMin || softMinMode == 2 && _newMin >= softMin) ? softMin : inf;\n\tlet minLim   = max(hardMin, _newMin < _softMin && _min >= _softMin ? _softMin : min(_softMin, _newMin));\n\n\tlet _padMax  = nonZeroDelta * (delta == 0 ? (_max == 0 ? .1 : 1) : padMax);\n\tlet _newMax  = roundDec(incrRoundUp(_max + _padMax, base/10), 9);\n\tlet _softMax = _max <= softMax && (softMaxMode == 1 || softMaxMode == 3 && _newMax >= softMax || softMaxMode == 2 && _newMax <= softMax) ? softMax : -inf;\n\tlet maxLim   = min(hardMax, _newMax > _softMax && _max <= _softMax ? _softMax : max(_softMax, _newMax));\n\n\tif (minLim == maxLim && minLim == 0)\n\t\tmaxLim = 100;\n\n\treturn [minLim, maxLim];\n}\n\n// alternative: https://stackoverflow.com/a/2254896\nconst numFormatter = new Intl.NumberFormat(domEnv ? nav.language : 'en-US');\nconst fmtNum = val => numFormatter.format(val);\n\nconst M = Math;\n\nconst PI = M.PI;\nconst abs = M.abs;\nconst floor = M.floor;\nconst round = M.round;\nconst ceil = M.ceil;\nconst min = M.min;\nconst max = M.max;\nconst pow = M.pow;\nconst sign = M.sign;\nconst log10 = M.log10;\nconst log2 = M.log2;\n// TODO: seems like this needs to match asinh impl if the passed v is tweaked?\nconst sinh =  (v, linthresh = 1) => M.sinh(v) * linthresh;\nconst asinh = (v, linthresh = 1) => M.asinh(v / linthresh);\n\nconst inf = Infinity;\n\nfunction numIntDigits(x) {\n\treturn (log10((x ^ (x >> 31)) - (x >> 31)) | 0) + 1;\n}\n\nfunction clamp(num, _min, _max) {\n\treturn min(max(num, _min), _max);\n}\n\nfunction fnOrSelf(v) {\n\treturn typeof v == \"function\" ? v : () => v;\n}\n\nconst noop = () => {};\n\nconst retArg0 = _0 => _0;\n\nconst retArg1 = (_0, _1) => _1;\n\nconst retNull = _ => null;\n\nconst retTrue = _ => true;\n\nconst retEq = (a, b) => a == b;\n\n// this will probably prevent tick incrs > 14 decimal places\n// (we generate up to 17 dec, see fixedDec const)\nconst fixFloat = v => roundDec(v, 14);\n\nfunction incrRound(num, incr) {\n\treturn fixFloat(roundDec(fixFloat(num/incr))*incr);\n}\n\nfunction incrRoundUp(num, incr) {\n\treturn fixFloat(ceil(fixFloat(num/incr))*incr);\n}\n\nfunction incrRoundDn(num, incr) {\n\treturn fixFloat(floor(fixFloat(num/incr))*incr);\n}\n\n// https://stackoverflow.com/a/48764436\n// rounds half away from zero\nfunction roundDec(val, dec = 0) {\n\tif (isInt(val))\n\t\treturn val;\n//\telse if (dec == 0)\n//\t\treturn round(val);\n\n\tlet p = 10 ** dec;\n\tlet n = (val * p) * (1 + Number.EPSILON);\n\treturn round(n) / p;\n}\n\nconst fixedDec = new Map();\n\nfunction guessDec(num) {\n\treturn ((\"\"+num).split(\".\")[1] || \"\").length;\n}\n\nfunction genIncrs(base, minExp, maxExp, mults) {\n\tlet incrs = [];\n\n\tlet multDec = mults.map(guessDec);\n\n\tfor (let exp = minExp; exp < maxExp; exp++) {\n\t\tlet expa = abs(exp);\n\t\tlet mag = roundDec(pow(base, exp), expa);\n\n\t\tfor (let i = 0; i < mults.length; i++) {\n\t\t\tlet _incr = mults[i] * mag;\n\t\t\tlet dec = (_incr >= 0 && exp >= 0 ? 0 : expa) + (exp >= multDec[i] ? 0 : multDec[i]);\n\t\t\tlet incr = roundDec(_incr, dec);\n\t\t\tincrs.push(incr);\n\t\t\tfixedDec.set(incr, dec);\n\t\t}\n\t}\n\n\treturn incrs;\n}\n\n//export const assign = Object.assign;\n\nconst EMPTY_OBJ = {};\nconst EMPTY_ARR = [];\n\nconst nullNullTuple = [null, null];\n\nconst isArr = Array.isArray;\nconst isInt = Number.isInteger;\nconst isUndef = v => v === void 0;\n\nfunction isStr(v) {\n\treturn typeof v == 'string';\n}\n\nfunction isObj(v) {\n\tlet is = false;\n\n\tif (v != null) {\n\t\tlet c = v.constructor;\n\t\tis = c == null || c == Object;\n\t}\n\n\treturn is;\n}\n\nfunction fastIsObj(v) {\n\treturn v != null && typeof v == 'object';\n}\n\nconst TypedArray = Object.getPrototypeOf(Uint8Array);\n\nfunction copy(o, _isObj = isObj) {\n\tlet out;\n\n\tif (isArr(o)) {\n\t\tlet val = o.find(v => v != null);\n\n\t\tif (isArr(val) || _isObj(val)) {\n\t\t\tout = Array(o.length);\n\t\t\tfor (let i = 0; i < o.length; i++)\n\t\t\t\tout[i] = copy(o[i], _isObj);\n\t\t}\n\t\telse\n\t\t\tout = o.slice();\n\t}\n\telse if (o instanceof TypedArray) // also (ArrayBuffer.isView(o) && !(o instanceof DataView))\n\t\tout = o.slice();\n\telse if (_isObj(o)) {\n\t\tout = {};\n\t\tfor (let k in o)\n\t\t\tout[k] = copy(o[k], _isObj);\n\t}\n\telse\n\t\tout = o;\n\n\treturn out;\n}\n\nfunction assign(targ) {\n\tlet args = arguments;\n\n\tfor (let i = 1; i < args.length; i++) {\n\t\tlet src = args[i];\n\n\t\tfor (let key in src) {\n\t\t\tif (isObj(targ[key]))\n\t\t\t\tassign(targ[key], copy(src[key]));\n\t\t\telse\n\t\t\t\ttarg[key] = copy(src[key]);\n\t\t}\n\t}\n\n\treturn targ;\n}\n\n// nullModes\nconst NULL_REMOVE = 0;  // nulls are converted to undefined (e.g. for spanGaps: true)\nconst NULL_RETAIN = 1;  // nulls are retained, with alignment artifacts set to undefined (default)\nconst NULL_EXPAND = 2;  // nulls are expanded to include any adjacent alignment artifacts\n\n// sets undefined values to nulls when adjacent to existing nulls (minesweeper)\nfunction nullExpand(yVals, nullIdxs, alignedLen) {\n\tfor (let i = 0, xi, lastNullIdx = -1; i < nullIdxs.length; i++) {\n\t\tlet nullIdx = nullIdxs[i];\n\n\t\tif (nullIdx > lastNullIdx) {\n\t\t\txi = nullIdx - 1;\n\t\t\twhile (xi >= 0 && yVals[xi] == null)\n\t\t\t\tyVals[xi--] = null;\n\n\t\t\txi = nullIdx + 1;\n\t\t\twhile (xi < alignedLen && yVals[xi] == null)\n\t\t\t\tyVals[lastNullIdx = xi++] = null;\n\t\t}\n\t}\n}\n\n// nullModes is a tables-matched array indicating how to treat nulls in each series\n// output is sorted ASC on the joined field (table[0]) and duplicate join values are collapsed\nfunction join(tables, nullModes) {\n\tlet xVals = new Set();\n\n\tfor (let ti = 0; ti < tables.length; ti++) {\n\t\tlet t = tables[ti];\n\t\tlet xs = t[0];\n\t\tlet len = xs.length;\n\n\t\tfor (let i = 0; i < len; i++)\n\t\t\txVals.add(xs[i]);\n\t}\n\n\tlet data = [Array.from(xVals).sort((a, b) => a - b)];\n\n\tlet alignedLen = data[0].length;\n\n\tlet xIdxs = new Map();\n\n\tfor (let i = 0; i < alignedLen; i++)\n\t\txIdxs.set(data[0][i], i);\n\n\tfor (let ti = 0; ti < tables.length; ti++) {\n\t\tlet t = tables[ti];\n\t\tlet xs = t[0];\n\n\t\tfor (let si = 1; si < t.length; si++) {\n\t\t\tlet ys = t[si];\n\n\t\t\tlet yVals = Array(alignedLen).fill(undefined);\n\n\t\t\tlet nullMode = nullModes ? nullModes[ti][si] : NULL_RETAIN;\n\n\t\t\tlet nullIdxs = [];\n\n\t\t\tfor (let i = 0; i < ys.length; i++) {\n\t\t\t\tlet yVal = ys[i];\n\t\t\t\tlet alignedIdx = xIdxs.get(xs[i]);\n\n\t\t\t\tif (yVal === null) {\n\t\t\t\t\tif (nullMode != NULL_REMOVE) {\n\t\t\t\t\t\tyVals[alignedIdx] = yVal;\n\n\t\t\t\t\t\tif (nullMode == NULL_EXPAND)\n\t\t\t\t\t\t\tnullIdxs.push(alignedIdx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tyVals[alignedIdx] = yVal;\n\t\t\t}\n\n\t\t\tnullExpand(yVals, nullIdxs, alignedLen);\n\n\t\t\tdata.push(yVals);\n\t\t}\n\t}\n\n\treturn data;\n}\n\nconst microTask = typeof queueMicrotask == \"undefined\" ? fn => Promise.resolve().then(fn) : queueMicrotask;\n\nconst months = [\n\t\"January\",\n\t\"February\",\n\t\"March\",\n\t\"April\",\n\t\"May\",\n\t\"June\",\n\t\"July\",\n\t\"August\",\n\t\"September\",\n\t\"October\",\n\t\"November\",\n\t\"December\",\n];\n\nconst days = [\n\t\"Sunday\",\n\t\"Monday\",\n\t\"Tuesday\",\n\t\"Wednesday\",\n\t\"Thursday\",\n\t\"Friday\",\n\t\"Saturday\",\n];\n\nfunction slice3(str) {\n\treturn str.slice(0, 3);\n}\n\nconst days3 = days.map(slice3);\n\nconst months3 = months.map(slice3);\n\nconst engNames = {\n\tMMMM: months,\n\tMMM:  months3,\n\tWWWW: days,\n\tWWW:  days3,\n};\n\nfunction zeroPad2(int) {\n\treturn (int < 10 ? '0' : '') + int;\n}\n\nfunction zeroPad3(int) {\n\treturn (int < 10 ? '00' : int < 100 ? '0' : '') + int;\n}\n\n/*\nfunction suffix(int) {\n\tlet mod10 = int % 10;\n\n\treturn int + (\n\t\tmod10 == 1 && int != 11 ? \"st\" :\n\t\tmod10 == 2 && int != 12 ? \"nd\" :\n\t\tmod10 == 3 && int != 13 ? \"rd\" : \"th\"\n\t);\n}\n*/\n\nconst subs = {\n\t// 2019\n\tYYYY:\td => d.getFullYear(),\n\t// 19\n\tYY:\t\td => (d.getFullYear()+'').slice(2),\n\t// July\n\tMMMM:\t(d, names) => names.MMMM[d.getMonth()],\n\t// Jul\n\tMMM:\t(d, names) => names.MMM[d.getMonth()],\n\t// 07\n\tMM:\t\td => zeroPad2(d.getMonth()+1),\n\t// 7\n\tM:\t\td => d.getMonth()+1,\n\t// 09\n\tDD:\t\td => zeroPad2(d.getDate()),\n\t// 9\n\tD:\t\td => d.getDate(),\n\t// Monday\n\tWWWW:\t(d, names) => names.WWWW[d.getDay()],\n\t// Mon\n\tWWW:\t(d, names) => names.WWW[d.getDay()],\n\t// 03\n\tHH:\t\td => zeroPad2(d.getHours()),\n\t// 3\n\tH:\t\td => d.getHours(),\n\t// 9 (12hr, unpadded)\n\th:\t\td => {let h = d.getHours(); return h == 0 ? 12 : h > 12 ? h - 12 : h;},\n\t// AM\n\tAA:\t\td => d.getHours() >= 12 ? 'PM' : 'AM',\n\t// am\n\taa:\t\td => d.getHours() >= 12 ? 'pm' : 'am',\n\t// a\n\ta:\t\td => d.getHours() >= 12 ? 'p' : 'a',\n\t// 09\n\tmm:\t\td => zeroPad2(d.getMinutes()),\n\t// 9\n\tm:\t\td => d.getMinutes(),\n\t// 09\n\tss:\t\td => zeroPad2(d.getSeconds()),\n\t// 9\n\ts:\t\td => d.getSeconds(),\n\t// 374\n\tfff:\td => zeroPad3(d.getMilliseconds()),\n};\n\nfunction fmtDate(tpl, names) {\n\tnames = names || engNames;\n\tlet parts = [];\n\n\tlet R = /\\{([a-z]+)\\}|[^{]+/gi, m;\n\n\twhile (m = R.exec(tpl))\n\t\tparts.push(m[0][0] == '{' ? subs[m[1]] : m[0]);\n\n\treturn d => {\n\t\tlet out = '';\n\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t\tout += typeof parts[i] == \"string\" ? parts[i] : parts[i](d, names);\n\n\t\treturn out;\n\t}\n}\n\nconst localTz = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n// https://stackoverflow.com/questions/15141762/how-to-initialize-a-javascript-date-to-a-particular-time-zone/53652131#53652131\nfunction tzDate(date, tz) {\n\tlet date2;\n\n\t// perf optimization\n\tif (tz == 'UTC' || tz == 'Etc/UTC')\n\t\tdate2 = new Date(+date + date.getTimezoneOffset() * 6e4);\n\telse if (tz == localTz)\n\t\tdate2 = date;\n\telse {\n\t\tdate2 = new Date(date.toLocaleString('en-US', {timeZone: tz}));\n\t\tdate2.setMilliseconds(date.getMilliseconds());\n\t}\n\n\treturn date2;\n}\n\n//export const series = [];\n\n// default formatters:\n\nconst onlyWhole = v => v % 1 == 0;\n\nconst allMults = [1,2,2.5,5];\n\n// ...0.01, 0.02, 0.025, 0.05, 0.1, 0.2, 0.25, 0.5\nconst decIncrs = genIncrs(10, -16, 0, allMults);\n\n// 1, 2, 2.5, 5, 10, 20, 25, 50...\nconst oneIncrs = genIncrs(10, 0, 16, allMults);\n\n// 1, 2,      5, 10, 20, 25, 50...\nconst wholeIncrs = oneIncrs.filter(onlyWhole);\n\nconst numIncrs = decIncrs.concat(oneIncrs);\n\nconst NL = \"\\n\";\n\nconst yyyy    = \"{YYYY}\";\nconst NLyyyy  = NL + yyyy;\nconst md      = \"{M}/{D}\";\nconst NLmd    = NL + md;\nconst NLmdyy  = NLmd + \"/{YY}\";\n\nconst aa      = \"{aa}\";\nconst hmm     = \"{h}:{mm}\";\nconst hmmaa   = hmm + aa;\nconst NLhmmaa = NL + hmmaa;\nconst ss      = \":{ss}\";\n\nconst _ = null;\n\nfunction genTimeStuffs(ms) {\n\tlet\ts  = ms * 1e3,\n\t\tm  = s  * 60,\n\t\th  = m  * 60,\n\t\td  = h  * 24,\n\t\tmo = d  * 30,\n\t\ty  = d  * 365;\n\n\t// min of 1e-3 prevents setting a temporal x ticks too small since Date objects cannot advance ticks smaller than 1ms\n\tlet subSecIncrs = ms == 1 ? genIncrs(10, 0, 3, allMults).filter(onlyWhole) : genIncrs(10, -3, 0, allMults);\n\n\tlet timeIncrs = subSecIncrs.concat([\n\t\t// minute divisors (# of secs)\n\t\ts,\n\t\ts * 5,\n\t\ts * 10,\n\t\ts * 15,\n\t\ts * 30,\n\t\t// hour divisors (# of mins)\n\t\tm,\n\t\tm * 5,\n\t\tm * 10,\n\t\tm * 15,\n\t\tm * 30,\n\t\t// day divisors (# of hrs)\n\t\th,\n\t\th * 2,\n\t\th * 3,\n\t\th * 4,\n\t\th * 6,\n\t\th * 8,\n\t\th * 12,\n\t\t// month divisors TODO: need more?\n\t\td,\n\t\td * 2,\n\t\td * 3,\n\t\td * 4,\n\t\td * 5,\n\t\td * 6,\n\t\td * 7,\n\t\td * 8,\n\t\td * 9,\n\t\td * 10,\n\t\td * 15,\n\t\t// year divisors (# months, approx)\n\t\tmo,\n\t\tmo * 2,\n\t\tmo * 3,\n\t\tmo * 4,\n\t\tmo * 6,\n\t\t// century divisors\n\t\ty,\n\t\ty * 2,\n\t\ty * 5,\n\t\ty * 10,\n\t\ty * 25,\n\t\ty * 50,\n\t\ty * 100,\n\t]);\n\n\t// [0]:   minimum num secs in the tick incr\n\t// [1]:   default tick format\n\t// [2-7]: rollover tick formats\n\t// [8]:   mode: 0: replace [1] -> [2-7], 1: concat [1] + [2-7]\n\tconst _timeAxisStamps = [\n\t//   tick incr    default          year                    month   day                   hour    min       sec   mode\n\t\t[y,           yyyy,            _,                      _,      _,                    _,      _,        _,       1],\n\t\t[d * 28,      \"{MMM}\",         NLyyyy,                 _,      _,                    _,      _,        _,       1],\n\t\t[d,           md,              NLyyyy,                 _,      _,                    _,      _,        _,       1],\n\t\t[h,           \"{h}\" + aa,      NLmdyy,                 _,      NLmd,                 _,      _,        _,       1],\n\t\t[m,           hmmaa,           NLmdyy,                 _,      NLmd,                 _,      _,        _,       1],\n\t\t[s,           ss,              NLmdyy + \" \" + hmmaa,   _,      NLmd + \" \" + hmmaa,   _,      NLhmmaa,  _,       1],\n\t\t[ms,          ss + \".{fff}\",   NLmdyy + \" \" + hmmaa,   _,      NLmd + \" \" + hmmaa,   _,      NLhmmaa,  _,       1],\n\t];\n\n\t// the ensures that axis ticks, values & grid are aligned to logical temporal breakpoints and not an arbitrary timestamp\n\t// https://www.timeanddate.com/time/dst/\n\t// https://www.timeanddate.com/time/dst/2019.html\n\t// https://www.epochconverter.com/timezones\n\tfunction timeAxisSplits(tzDate) {\n\t\treturn (self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace) => {\n\t\t\tlet splits = [];\n\t\t\tlet isYr = foundIncr >= y;\n\t\t\tlet isMo = foundIncr >= mo && foundIncr < y;\n\n\t\t\t// get the timezone-adjusted date\n\t\t\tlet minDate = tzDate(scaleMin);\n\t\t\tlet minDateTs = roundDec(minDate * ms, 3);\n\n\t\t\t// get ts of 12am (this lands us at or before the original scaleMin)\n\t\t\tlet minMin = mkDate(minDate.getFullYear(), isYr ? 0 : minDate.getMonth(), isMo || isYr ? 1 : minDate.getDate());\n\t\t\tlet minMinTs = roundDec(minMin * ms, 3);\n\n\t\t\tif (isMo || isYr) {\n\t\t\t\tlet moIncr = isMo ? foundIncr / mo : 0;\n\t\t\t\tlet yrIncr = isYr ? foundIncr / y  : 0;\n\t\t\t//\tlet tzOffset = scaleMin - minDateTs;\t\t// needed?\n\t\t\t\tlet split = minDateTs == minMinTs ? minDateTs : roundDec(mkDate(minMin.getFullYear() + yrIncr, minMin.getMonth() + moIncr, 1) * ms, 3);\n\t\t\t\tlet splitDate = new Date(round(split / ms));\n\t\t\t\tlet baseYear = splitDate.getFullYear();\n\t\t\t\tlet baseMonth = splitDate.getMonth();\n\n\t\t\t\tfor (let i = 0; split <= scaleMax; i++) {\n\t\t\t\t\tlet next = mkDate(baseYear + yrIncr * i, baseMonth + moIncr * i, 1);\n\t\t\t\t\tlet offs = next - tzDate(roundDec(next * ms, 3));\n\n\t\t\t\t\tsplit = roundDec((+next + offs) * ms, 3);\n\n\t\t\t\t\tif (split <= scaleMax)\n\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet incr0 = foundIncr >= d ? d : foundIncr;\n\t\t\t\tlet tzOffset = floor(scaleMin) - floor(minDateTs);\n\t\t\t\tlet split = minMinTs + tzOffset + incrRoundUp(minDateTs - minMinTs, incr0);\n\t\t\t\tsplits.push(split);\n\n\t\t\t\tlet date0 = tzDate(split);\n\n\t\t\t\tlet prevHour = date0.getHours() + (date0.getMinutes() / m) + (date0.getSeconds() / h);\n\t\t\t\tlet incrHours = foundIncr / h;\n\n\t\t\t\tlet minSpace = self.axes[axisIdx]._space;\n\t\t\t\tlet pctSpace = foundSpace / minSpace;\n\n\t\t\t\twhile (1) {\n\t\t\t\t\tsplit = roundDec(split + foundIncr, ms == 1 ? 0 : 3);\n\n\t\t\t\t\tif (split > scaleMax)\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tif (incrHours > 1) {\n\t\t\t\t\t\tlet expectedHour = floor(roundDec(prevHour + incrHours, 6)) % 24;\n\t\t\t\t\t\tlet splitDate = tzDate(split);\n\t\t\t\t\t\tlet actualHour = splitDate.getHours();\n\n\t\t\t\t\t\tlet dstShift = actualHour - expectedHour;\n\n\t\t\t\t\t\tif (dstShift > 1)\n\t\t\t\t\t\t\tdstShift = -1;\n\n\t\t\t\t\t\tsplit -= dstShift * h;\n\n\t\t\t\t\t\tprevHour = (prevHour + incrHours) % 24;\n\n\t\t\t\t\t\t// add a tick only if it's further than 70% of the min allowed label spacing\n\t\t\t\t\t\tlet prevSplit = splits[splits.length - 1];\n\t\t\t\t\t\tlet pctIncr = roundDec((split - prevSplit) / foundIncr, 3);\n\n\t\t\t\t\t\tif (pctIncr * pctSpace >= .7)\n\t\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn splits;\n\t\t}\n\t}\n\n\treturn [\n\t\ttimeIncrs,\n\t\t_timeAxisStamps,\n\t\ttimeAxisSplits,\n\t];\n}\n\nconst [ timeIncrsMs, _timeAxisStampsMs, timeAxisSplitsMs ] = genTimeStuffs(1);\nconst [ timeIncrsS,  _timeAxisStampsS,  timeAxisSplitsS  ] = genTimeStuffs(1e-3);\n\n// base 2\ngenIncrs(2, -53, 53, [1]);\n\n/*\nconsole.log({\n\tdecIncrs,\n\toneIncrs,\n\twholeIncrs,\n\tnumIncrs,\n\ttimeIncrs,\n\tfixedDec,\n});\n*/\n\nfunction timeAxisStamps(stampCfg, fmtDate) {\n\treturn stampCfg.map(s => s.map((v, i) =>\n\t\ti == 0 || i == 8 || v == null ? v : fmtDate(i == 1 || s[8] == 0 ? v : s[1] + v)\n\t));\n}\n\n// TODO: will need to accept spaces[] and pull incr into the loop when grid will be non-uniform, eg for log scales.\n// currently we ignore this for months since they're *nearly* uniform and the added complexity is not worth it\nfunction timeAxisVals(tzDate, stamps) {\n\treturn (self, splits, axisIdx, foundSpace, foundIncr) => {\n\t\tlet s = stamps.find(s => foundIncr >= s[0]) || stamps[stamps.length - 1];\n\n\t\t// these track boundaries when a full label is needed again\n\t\tlet prevYear;\n\t\tlet prevMnth;\n\t\tlet prevDate;\n\t\tlet prevHour;\n\t\tlet prevMins;\n\t\tlet prevSecs;\n\n\t\treturn splits.map(split => {\n\t\t\tlet date = tzDate(split);\n\n\t\t\tlet newYear = date.getFullYear();\n\t\t\tlet newMnth = date.getMonth();\n\t\t\tlet newDate = date.getDate();\n\t\t\tlet newHour = date.getHours();\n\t\t\tlet newMins = date.getMinutes();\n\t\t\tlet newSecs = date.getSeconds();\n\n\t\t\tlet stamp = (\n\t\t\t\tnewYear != prevYear && s[2] ||\n\t\t\t\tnewMnth != prevMnth && s[3] ||\n\t\t\t\tnewDate != prevDate && s[4] ||\n\t\t\t\tnewHour != prevHour && s[5] ||\n\t\t\t\tnewMins != prevMins && s[6] ||\n\t\t\t\tnewSecs != prevSecs && s[7] ||\n\t\t\t\t                       s[1]\n\t\t\t);\n\n\t\t\tprevYear = newYear;\n\t\t\tprevMnth = newMnth;\n\t\t\tprevDate = newDate;\n\t\t\tprevHour = newHour;\n\t\t\tprevMins = newMins;\n\t\t\tprevSecs = newSecs;\n\n\t\t\treturn stamp(date);\n\t\t});\n\t}\n}\n\n// for when axis.values is defined as a static fmtDate template string\nfunction timeAxisVal(tzDate, dateTpl) {\n\tlet stamp = fmtDate(dateTpl);\n\treturn (self, splits, axisIdx, foundSpace, foundIncr) => splits.map(split => stamp(tzDate(split)));\n}\n\nfunction mkDate(y, m, d) {\n\treturn new Date(y, m, d);\n}\n\nfunction timeSeriesStamp(stampCfg, fmtDate) {\n\treturn fmtDate(stampCfg);\n}\nconst _timeSeriesStamp = '{YYYY}-{MM}-{DD} {h}:{mm}{aa}';\n\nfunction timeSeriesVal(tzDate, stamp) {\n\treturn (self, val, seriesIdx, dataIdx) => dataIdx == null ? LEGEND_DISP : stamp(tzDate(val));\n}\n\nfunction legendStroke(self, seriesIdx) {\n\tlet s = self.series[seriesIdx];\n\treturn s.width ? s.stroke(self, seriesIdx) : s.points.width ? s.points.stroke(self, seriesIdx) : null;\n}\n\nfunction legendFill(self, seriesIdx) {\n\treturn self.series[seriesIdx].fill(self, seriesIdx);\n}\n\nconst legendOpts = {\n\tshow: true,\n\tlive: true,\n\tisolate: false,\n\tmount: noop,\n\tmarkers: {\n\t\tshow: true,\n\t\twidth: 2,\n\t\tstroke: legendStroke,\n\t\tfill: legendFill,\n\t\tdash: \"solid\",\n\t},\n\tidx: null,\n\tidxs: null,\n\tvalues: [],\n};\n\nfunction cursorPointShow(self, si) {\n\tlet o = self.cursor.points;\n\n\tlet pt = placeDiv();\n\n\tlet size = o.size(self, si);\n\tsetStylePx(pt, WIDTH, size);\n\tsetStylePx(pt, HEIGHT, size);\n\n\tlet mar = size / -2;\n\tsetStylePx(pt, \"marginLeft\", mar);\n\tsetStylePx(pt, \"marginTop\", mar);\n\n\tlet width = o.width(self, si, size);\n\twidth && setStylePx(pt, \"borderWidth\", width);\n\n\treturn pt;\n}\n\nfunction cursorPointFill(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp._fill || sp._stroke;\n}\n\nfunction cursorPointStroke(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp._stroke || sp._fill;\n}\n\nfunction cursorPointSize(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp.size;\n}\n\nfunction dataIdx(self, seriesIdx, cursorIdx) {\n\treturn cursorIdx;\n}\n\nconst moveTuple = [0,0];\n\nfunction cursorMove(self, mouseLeft1, mouseTop1) {\n\tmoveTuple[0] = mouseLeft1;\n\tmoveTuple[1] = mouseTop1;\n\treturn moveTuple;\n}\n\nfunction filtBtn0(self, targ, handle) {\n\treturn e => {\n\t\te.button == 0 && handle(e);\n\t};\n}\n\nfunction passThru(self, targ, handle) {\n\treturn handle;\n}\n\nconst cursorOpts = {\n\tshow: true,\n\tx: true,\n\ty: true,\n\tlock: false,\n\tmove: cursorMove,\n\tpoints: {\n\t\tshow:   cursorPointShow,\n\t\tsize:   cursorPointSize,\n\t\twidth:  0,\n\t\tstroke: cursorPointStroke,\n\t\tfill:   cursorPointFill,\n\t},\n\n\tbind: {\n\t\tmousedown:   filtBtn0,\n\t\tmouseup:     filtBtn0,\n\t\tclick:       filtBtn0,\n\t\tdblclick:    filtBtn0,\n\n\t\tmousemove:   passThru,\n\t\tmouseleave:  passThru,\n\t\tmouseenter:  passThru,\n\t},\n\n\tdrag: {\n\t\tsetScale: true,\n\t\tx: true,\n\t\ty: false,\n\t\tdist: 0,\n\t\tuni: null,\n\t\tclick: (self, e) => {\n\t\t//\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.stopImmediatePropagation();\n\t\t},\n\t\t_x: false,\n\t\t_y: false,\n\t},\n\n\tfocus: {\n\t\tprox: -1,\n\t\tbias: 0,\n\t},\n\n\tleft: -10,\n\ttop: -10,\n\tidx: null,\n\tdataIdx,\n\tidxs: null,\n};\n\nconst axisLines = {\n\tshow: true,\n\tstroke: \"rgba(0,0,0,0.07)\",\n\twidth: 2,\n//\tdash: [],\n};\n\nconst grid = assign({}, axisLines, {\n\tfilter: retArg1,\n});\n\nconst ticks = assign({}, grid, {\n\tsize: 10,\n});\n\nconst border = assign({}, axisLines, {\n\tshow: false,\n});\n\nconst font      = '12px system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"';\nconst labelFont = \"bold \" + font;\nconst lineMult = 1.5;\t\t// font-size multiplier\n\nconst xAxisOpts = {\n\tshow: true,\n\tscale: \"x\",\n\tstroke: hexBlack,\n\tspace: 50,\n\tgap: 5,\n\tsize: 50,\n\tlabelGap: 0,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 2,\n//\tclass: \"x-vals\",\n//\tincrs: timeIncrs,\n//\tvalues: timeVals,\n//\tfilter: retArg1,\n\tgrid,\n\tticks,\n\tborder,\n\tfont,\n\trotate: 0,\n};\n\nconst numSeriesLabel = \"Value\";\nconst timeSeriesLabel = \"Time\";\n\nconst xSeriesOpts = {\n\tshow: true,\n\tscale: \"x\",\n\tauto: false,\n\tsorted: 1,\n//\tlabel: \"Time\",\n//\tvalue: v => stamp(new Date(v * 1e3)),\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n};\n\nfunction numAxisVals(self, splits, axisIdx, foundSpace, foundIncr) {\n\treturn splits.map(v => v == null ? \"\" : fmtNum(v));\n}\n\nfunction numAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tlet splits = [];\n\n\tlet numDec = fixedDec.get(foundIncr) || 0;\n\n\tscaleMin = forceMin ? scaleMin : roundDec(incrRoundUp(scaleMin, foundIncr), numDec);\n\n\tfor (let val = scaleMin; val <= scaleMax; val = roundDec(val + foundIncr, numDec))\n\t\tsplits.push(Object.is(val, -0) ? 0 : val);\t\t// coalesces -0\n\n\treturn splits;\n}\n\n// this doesnt work for sin, which needs to come off from 0 independently in pos and neg dirs\nfunction logAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tconst splits = [];\n\n\tconst logBase = self.scales[self.axes[axisIdx].scale].log;\n\n\tconst logFn = logBase == 10 ? log10 : log2;\n\n\tconst exp = floor(logFn(scaleMin));\n\n\tfoundIncr = pow(logBase, exp);\n\n\tif (logBase == 10 && exp < 0)\n\t\tfoundIncr = roundDec(foundIncr, -exp);\n\n\tlet split = scaleMin;\n\n\tdo {\n\t\tsplits.push(split);\n\t\tsplit = split + foundIncr;\n\n\t\tif (logBase == 10)\n\t\t\tsplit = roundDec(split, fixedDec.get(foundIncr));\n\n\t\tif (split >= foundIncr * logBase)\n\t\t\tfoundIncr = split;\n\n\t} while (split <= scaleMax);\n\n\treturn splits;\n}\n\nfunction asinhAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tlet sc = self.scales[self.axes[axisIdx].scale];\n\n\tlet linthresh = sc.asinh;\n\n\tlet posSplits = scaleMax > linthresh ? logAxisSplits(self, axisIdx, max(linthresh, scaleMin), scaleMax, foundIncr) : [linthresh];\n\tlet zero = scaleMax >= 0 && scaleMin <= 0 ? [0] : [];\n\tlet negSplits = scaleMin < -linthresh ? logAxisSplits(self, axisIdx, max(linthresh, -scaleMax), -scaleMin, foundIncr): [linthresh];\n\n\treturn negSplits.reverse().map(v => -v).concat(zero, posSplits);\n}\n\nconst RE_ALL   = /./;\nconst RE_12357 = /[12357]/;\nconst RE_125   = /[125]/;\nconst RE_1     = /1/;\n\nfunction log10AxisValsFilt(self, splits, axisIdx, foundSpace, foundIncr) {\n\tlet axis = self.axes[axisIdx];\n\tlet scaleKey = axis.scale;\n\tlet sc = self.scales[scaleKey];\n\n\tif (sc.distr == 3 && sc.log == 2)\n\t\treturn splits;\n\n\tlet valToPos = self.valToPos;\n\n\tlet minSpace = axis._space;\n\n\tlet _10 = valToPos(10, scaleKey);\n\n\tlet re = (\n\t\tvalToPos(9, scaleKey) - _10 >= minSpace ? RE_ALL :\n\t\tvalToPos(7, scaleKey) - _10 >= minSpace ? RE_12357 :\n\t\tvalToPos(5, scaleKey) - _10 >= minSpace ? RE_125 :\n\t\tRE_1\n\t);\n\n\treturn splits.map(v => ((sc.distr == 4 && v == 0) || re.test(v)) ? v : null);\n}\n\nfunction numSeriesVal(self, val, seriesIdx, dataIdx) {\n\treturn dataIdx == null ? LEGEND_DISP : val == null ? \"\" : fmtNum(val);\n}\n\nconst yAxisOpts = {\n\tshow: true,\n\tscale: \"y\",\n\tstroke: hexBlack,\n\tspace: 30,\n\tgap: 5,\n\tsize: 50,\n\tlabelGap: 0,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 3,\n//\tclass: \"y-vals\",\n//\tincrs: numIncrs,\n//\tvalues: (vals, space) => vals,\n//\tfilter: retArg1,\n\tgrid,\n\tticks,\n\tborder,\n\tfont,\n\trotate: 0,\n};\n\n// takes stroke width\nfunction ptDia(width, mult) {\n\tlet dia = 3 + (width || 1) * 2;\n\treturn roundDec(dia * mult, 3);\n}\n\nfunction seriesPointsShow(self, si) {\n\tlet { scale, idxs } = self.series[0];\n\tlet xData = self._data[0];\n\tlet p0 = self.valToPos(xData[idxs[0]], scale, true);\n\tlet p1 = self.valToPos(xData[idxs[1]], scale, true);\n\tlet dim = abs(p1 - p0);\n\n\tlet s = self.series[si];\n//\tconst dia = ptDia(s.width, pxRatio);\n\tlet maxPts = dim / (s.points.space * pxRatio);\n\treturn idxs[1] - idxs[0] <= maxPts;\n}\n\nconst facet = {\n\tscale: null,\n\tauto: true,\n\tsorted: 0,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n};\n\nconst gaps = (self, seriesIdx, idx0, idx1, nullGaps) => nullGaps;\n\nconst xySeriesOpts = {\n\tshow: true,\n\tauto: true,\n\tsorted: 0,\n\tgaps,\n\talpha: 1,\n\tfacets: [\n\t\tassign({}, facet, {scale: 'x'}),\n\t\tassign({}, facet, {scale: 'y'}),\n\t],\n};\n\nconst ySeriesOpts = {\n\tscale: \"y\",\n\tauto: true,\n\tsorted: 0,\n\tshow: true,\n\tspanGaps: false,\n\tgaps,\n\talpha: 1,\n\tpoints: {\n\t\tshow: seriesPointsShow,\n\t\tfilter: null,\n\t//  paths:\n\t//\tstroke: \"#000\",\n\t//\tfill: \"#fff\",\n\t//\twidth: 1,\n\t//\tsize: 10,\n\t},\n//\tlabel: \"Value\",\n//\tvalue: v => v,\n\tvalues: null,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n\n\tpath: null,\n\tclip: null,\n};\n\nfunction clampScale(self, val, scaleMin, scaleMax, scaleKey) {\n/*\n\tif (val < 0) {\n\t\tlet cssHgt = self.bbox.height / pxRatio;\n\t\tlet absPos = self.valToPos(abs(val), scaleKey);\n\t\tlet fromBtm = cssHgt - absPos;\n\t\treturn self.posToVal(cssHgt + fromBtm, scaleKey);\n\t}\n*/\n\treturn scaleMin / 10;\n}\n\nconst xScaleOpts = {\n\ttime: FEAT_TIME,\n\tauto: true,\n\tdistr: 1,\n\tlog: 10,\n\tasinh: 1,\n\tmin: null,\n\tmax: null,\n\tdir: 1,\n\tori: 0,\n};\n\nconst yScaleOpts = assign({}, xScaleOpts, {\n\ttime: false,\n\tori: 1,\n});\n\nconst syncs = {};\n\nfunction _sync(key, opts) {\n\tlet s = syncs[key];\n\n\tif (!s) {\n\t\ts = {\n\t\t\tkey,\n\t\t\tplots: [],\n\t\t\tsub(plot) {\n\t\t\t\ts.plots.push(plot);\n\t\t\t},\n\t\t\tunsub(plot) {\n\t\t\t\ts.plots = s.plots.filter(c => c != plot);\n\t\t\t},\n\t\t\tpub(type, self, x, y, w, h, i) {\n\t\t\t\tfor (let j = 0; j < s.plots.length; j++)\n\t\t\t\t\ts.plots[j] != self && s.plots[j].pub(type, self, x, y, w, h, i);\n\t\t\t},\n\t\t};\n\n\t\tif (key != null)\n\t\t\tsyncs[key] = s;\n\t}\n\n\treturn s;\n}\n\nconst BAND_CLIP_FILL   = 1 << 0;\nconst BAND_CLIP_STROKE = 1 << 1;\n\nfunction orient(u, seriesIdx, cb) {\n\tconst mode = u.mode;\n\tconst series = u.series[seriesIdx];\n\tconst data = mode == 2 ? u._data[seriesIdx] : u._data;\n\tconst scales = u.scales;\n\tconst bbox   = u.bbox;\n\n\tlet dx = data[0],\n\t\tdy = mode == 2 ? data[1] : data[seriesIdx],\n\t\tsx = mode == 2 ? scales[series.facets[0].scale] : scales[u.series[0].scale],\n\t\tsy = mode == 2 ? scales[series.facets[1].scale] : scales[series.scale],\n\t\tl = bbox.left,\n\t\tt = bbox.top,\n\t\tw = bbox.width,\n\t\th = bbox.height,\n\t\tH = u.valToPosH,\n\t\tV = u.valToPosV;\n\n\treturn (sx.ori == 0\n\t\t? cb(\n\t\t\tseries,\n\t\t\tdx,\n\t\t\tdy,\n\t\t\tsx,\n\t\t\tsy,\n\t\t\tH,\n\t\t\tV,\n\t\t\tl,\n\t\t\tt,\n\t\t\tw,\n\t\t\th,\n\t\t\tmoveToH,\n\t\t\tlineToH,\n\t\t\trectH,\n\t\t\tarcH,\n\t\t\tbezierCurveToH,\n\t\t)\n\t\t: cb(\n\t\t\tseries,\n\t\t\tdx,\n\t\t\tdy,\n\t\t\tsx,\n\t\t\tsy,\n\t\t\tV,\n\t\t\tH,\n\t\t\tt,\n\t\t\tl,\n\t\t\th,\n\t\t\tw,\n\t\t\tmoveToV,\n\t\t\tlineToV,\n\t\t\trectV,\n\t\t\tarcV,\n\t\t\tbezierCurveToV,\n\t\t)\n\t);\n}\n\nfunction bandFillClipDirs(self, seriesIdx) {\n\tlet fillDir = 0;\n\n\t// 2 bits, -1 | 1\n\tlet clipDirs = 0;\n\n\tlet bands = ifNull(self.bands, EMPTY_ARR);\n\n\tfor (let i = 0; i < bands.length; i++) {\n\t\tlet b = bands[i];\n\n\t\t// is a \"from\" band edge\n\t\tif (b.series[0] == seriesIdx)\n\t\t\tfillDir = b.dir;\n\t\t// is a \"to\" band edge\n\t\telse if (b.series[1] == seriesIdx) {\n\t\t\tif (b.dir == 1)\n\t\t\t\tclipDirs |= 1;\n\t\t\telse\n\t\t\t\tclipDirs |= 2;\n\t\t}\n\t}\n\n\treturn [\n\t\tfillDir,\n\t\t(\n\t\t\tclipDirs == 1 ? -1 : // neg only\n\t\t\tclipDirs == 2 ?  1 : // pos only\n\t\t\tclipDirs == 3 ?  2 : // both\n\t\t\t                 0   // neither\n\t\t)\n\t];\n}\n\nfunction seriesFillTo(self, seriesIdx, dataMin, dataMax, bandFillDir) {\n\tlet mode = self.mode;\n\tlet series = self.series[seriesIdx];\n\tlet scaleKey = mode == 2 ? series.facets[1].scale : series.scale;\n\tlet scale = self.scales[scaleKey];\n\n\treturn (\n\t\tbandFillDir == -1 ? scale.min :\n\t\tbandFillDir ==  1 ? scale.max :\n\t\tscale.distr ==  3 ? (\n\t\t\tscale.dir == 1 ? scale.min :\n\t\t\tscale.max\n\t\t) : 0\n\t);\n}\n\n// creates inverted band clip path (from stroke path -> yMax || yMin)\n// clipDir is always inverse of fillDir\n// default clip dir is upwards (1), since default band fill is downwards/fillBelowTo (-1) (highIdx -> lowIdx)\nfunction clipBandLine(self, seriesIdx, idx0, idx1, strokePath, clipDir) {\n\treturn orient(self, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\tlet pxRound = series.pxRound;\n\n\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\t\tconst lineTo = scaleX.ori == 0 ? lineToH : lineToV;\n\n\t\tlet frIdx, toIdx;\n\n\t\tif (dir == 1) {\n\t\t\tfrIdx = idx0;\n\t\t\ttoIdx = idx1;\n\t\t}\n\t\telse {\n\t\t\tfrIdx = idx1;\n\t\t\ttoIdx = idx0;\n\t\t}\n\n\t\t// path start\n\t\tlet x0 = pxRound(valToPosX(dataX[frIdx], scaleX, xDim, xOff));\n\t\tlet y0 = pxRound(valToPosY(dataY[frIdx], scaleY, yDim, yOff));\n\t\t// path end x\n\t\tlet x1 = pxRound(valToPosX(dataX[toIdx], scaleX, xDim, xOff));\n\t\t// upper or lower y limit\n\t\tlet yLimit = pxRound(valToPosY(clipDir == 1 ? scaleY.max : scaleY.min, scaleY, yDim, yOff));\n\n\t\tlet clip = new Path2D(strokePath);\n\n\t\tlineTo(clip, x1, yLimit);\n\t\tlineTo(clip, x0, yLimit);\n\t\tlineTo(clip, x0, y0);\n\n\t\treturn clip;\n\t});\n}\n\nfunction clipGaps(gaps, ori, plotLft, plotTop, plotWid, plotHgt) {\n\tlet clip = null;\n\n\t// create clip path (invert gaps and non-gaps)\n\tif (gaps.length > 0) {\n\t\tclip = new Path2D();\n\n\t\tconst rect = ori == 0 ? rectH : rectV;\n\n\t\tlet prevGapEnd = plotLft;\n\n\t\tfor (let i = 0; i < gaps.length; i++) {\n\t\t\tlet g = gaps[i];\n\n\t\t\tif (g[1] > g[0]) {\n\t\t\t\tlet w = g[0] - prevGapEnd;\n\n\t\t\t\tw > 0 && rect(clip, prevGapEnd, plotTop, w, plotTop + plotHgt);\n\n\t\t\t\tprevGapEnd = g[1];\n\t\t\t}\n\t\t}\n\n\t\tlet w = plotLft + plotWid - prevGapEnd;\n\n\t\tw > 0 && rect(clip, prevGapEnd, plotTop, w, plotTop + plotHgt);\n\t}\n\n\treturn clip;\n}\n\nfunction addGap(gaps, fromX, toX) {\n\tlet prevGap = gaps[gaps.length - 1];\n\n\tif (prevGap && prevGap[0] == fromX)\t\t\t// TODO: gaps must be encoded at stroke widths?\n\t\tprevGap[1] = toX;\n\telse\n\t\tgaps.push([fromX, toX]);\n}\n\nfunction findGaps(xs, ys, idx0, idx1, dir, pixelForX, align) {\n\tlet gaps = [];\n\tlet len = xs.length;\n\n\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\tlet yVal = ys[i];\n\n\t\tif (yVal === null) {\n\t\t\tlet fr = i, to = i;\n\n\t\t\tif (dir == 1) {\n\t\t\t\twhile (++i <= idx1 && ys[i] === null)\n\t\t\t\t\tto = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\twhile (--i >= idx0 && ys[i] === null)\n\t\t\t\t\tto = i;\n\t\t\t}\n\n\t\t\tlet frPx = pixelForX(xs[fr]);\n\t\t\tlet toPx = to == fr ? frPx : pixelForX(xs[to]);\n\n\t\t\t// if value adjacent to edge null is same pixel, then it's partially\n\t\t\t// filled and gap should start at next pixel\n\t\t\tlet fri2 = fr - dir;\n\t\t\tlet frPx2 = align <= 0 && fri2 >= 0 && fri2 < len ? pixelForX(xs[fri2]) : frPx;\n\t\t//\tif (frPx2 == frPx)\n\t\t//\t\tfrPx++;\n\t\t//\telse\n\t\t\t\tfrPx = frPx2;\n\n\t\t\tlet toi2 = to + dir;\n\t\t\tlet toPx2 = align >= 0 && toi2 >= 0 && toi2 < len ? pixelForX(xs[toi2]) : toPx;\n\t\t//\tif (toPx2 == toPx)\n\t\t//\t\ttoPx--;\n\t\t//\telse\n\t\t\t\ttoPx = toPx2;\n\n\t\t\tif (toPx >= frPx)\n\t\t\t\tgaps.push([frPx, toPx]); // addGap\n\t\t}\n\t}\n\n\treturn gaps;\n}\n\nfunction pxRoundGen(pxAlign) {\n\treturn pxAlign == 0 ? retArg0 : pxAlign == 1 ? round : v => incrRound(v, pxAlign);\n}\n\nfunction rect(ori) {\n\tlet moveTo = ori == 0 ?\n\t\tmoveToH :\n\t\tmoveToV;\n\n\tlet arcTo = ori == 0 ?\n\t\t(p, x1, y1, x2, y2, r) => { p.arcTo(x1, y1, x2, y2, r); } :\n\t\t(p, y1, x1, y2, x2, r) => { p.arcTo(x1, y1, x2, y2, r); };\n\n\tlet rect = ori == 0 ?\n\t\t(p, x, y, w, h) => { p.rect(x, y, w, h); } :\n\t\t(p, y, x, h, w) => { p.rect(x, y, w, h); };\n\n\t// TODO (pending better browser support): https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/roundRect\n\treturn (p, x, y, w, h, endRad = 0, baseRad = 0) => {\n\t\tif (endRad == 0 && baseRad == 0)\n\t\t\trect(p, x, y, w, h);\n\t\telse {\n\t\t\tendRad  = min(endRad,  w / 2, h / 2);\n\t\t\tbaseRad = min(baseRad, w / 2, h / 2);\n\n\t\t\t// adapted from https://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-using-html-canvas/7838871#7838871\n\t\t\tmoveTo(p, x + endRad, y);\n\t\t\tarcTo(p, x + w, y, x + w, y + h, endRad);\n\t\t\tarcTo(p, x + w, y + h, x, y + h, baseRad);\n\t\t\tarcTo(p, x, y + h, x, y, baseRad);\n\t\t\tarcTo(p, x, y, x + w, y, endRad);\n\t\t\tp.closePath();\n\t\t}\n\t};\n}\n\n// orientation-inverting canvas functions\nconst moveToH = (p, x, y) => { p.moveTo(x, y); };\nconst moveToV = (p, y, x) => { p.moveTo(x, y); };\nconst lineToH = (p, x, y) => { p.lineTo(x, y); };\nconst lineToV = (p, y, x) => { p.lineTo(x, y); };\nconst rectH = rect(0);\nconst rectV = rect(1);\nconst arcH = (p, x, y, r, startAngle, endAngle) => { p.arc(x, y, r, startAngle, endAngle); };\nconst arcV = (p, y, x, r, startAngle, endAngle) => { p.arc(x, y, r, startAngle, endAngle); };\nconst bezierCurveToH = (p, bp1x, bp1y, bp2x, bp2y, p2x, p2y) => { p.bezierCurveTo(bp1x, bp1y, bp2x, bp2y, p2x, p2y); };\nconst bezierCurveToV = (p, bp1y, bp1x, bp2y, bp2x, p2y, p2x) => { p.bezierCurveTo(bp1x, bp1y, bp2x, bp2y, p2x, p2y); };\n\n// TODO: drawWrap(seriesIdx, drawPoints) (save, restore, translate, clip)\nfunction points(opts) {\n\treturn (u, seriesIdx, idx0, idx1, filtIdxs) => {\n\t//\tlog(\"drawPoints()\", arguments);\n\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet { pxRound, points } = series;\n\n\t\t\tlet moveTo, arc;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tmoveTo = moveToH;\n\t\t\t\tarc = arcH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmoveTo = moveToV;\n\t\t\t\tarc = arcV;\n\t\t\t}\n\n\t\t\tconst width = roundDec(points.width * pxRatio, 3);\n\n\t\t\tlet rad = (points.size - points.width) / 2 * pxRatio;\n\t\t\tlet dia = roundDec(rad * 2, 3);\n\n\t\t\tlet fill = new Path2D();\n\t\t\tlet clip = new Path2D();\n\n\t\t\tlet { left: lft, top: top, width: wid, height: hgt } = u.bbox;\n\n\t\t\trectH(clip,\n\t\t\t\tlft - dia,\n\t\t\t\ttop - dia,\n\t\t\t\twid + dia * 2,\n\t\t\t\thgt + dia * 2,\n\t\t\t);\n\n\t\t\tconst drawPoint = pi => {\n\t\t\t\tif (dataY[pi] != null) {\n\t\t\t\t\tlet x = pxRound(valToPosX(dataX[pi], scaleX, xDim, xOff));\n\t\t\t\t\tlet y = pxRound(valToPosY(dataY[pi], scaleY, yDim, yOff));\n\n\t\t\t\t\tmoveTo(fill, x + rad, y);\n\t\t\t\t\tarc(fill, x, y, rad, 0, PI * 2);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (filtIdxs)\n\t\t\t\tfiltIdxs.forEach(drawPoint);\n\t\t\telse {\n\t\t\t\tfor (let pi = idx0; pi <= idx1; pi++)\n\t\t\t\t\tdrawPoint(pi);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tstroke: width > 0 ? fill : null,\n\t\t\t\tfill,\n\t\t\t\tclip,\n\t\t\t\tflags: BAND_CLIP_FILL | BAND_CLIP_STROKE,\n\t\t\t};\n\t\t});\n\t};\n}\n\nfunction _drawAcc(lineTo) {\n\treturn (stroke, accX, minY, maxY, inY, outY) => {\n\t\tif (minY != maxY) {\n\t\t\tif (inY != minY && outY != minY)\n\t\t\t\tlineTo(stroke, accX, minY);\n\t\t\tif (inY != maxY && outY != maxY)\n\t\t\t\tlineTo(stroke, accX, maxY);\n\n\t\t\tlineTo(stroke, accX, outY);\n\t\t}\n\t};\n}\n\nconst drawAccH = _drawAcc(lineToH);\nconst drawAccV = _drawAcc(lineToV);\n\nfunction linear(opts) {\n\tconst alignGaps = ifNull(opts?.alignGaps, 0);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet lineTo, drawAcc;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tlineTo = lineToH;\n\t\t\t\tdrawAcc = drawAccH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlineTo = lineToV;\n\t\t\t\tdrawAcc = drawAccV;\n\t\t\t}\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tconst _paths = {stroke: new Path2D(), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tlet minY = inf,\n\t\t\t\tmaxY = -inf,\n\t\t\t\tinY, outY, drawnAtX;\n\n\t\t\tlet accX = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\n\t\t\t// data edges\n\t\t\tlet lftIdx = nonNullIdx(dataY, idx0, idx1,  1 * dir);\n\t\t\tlet rgtIdx = nonNullIdx(dataY, idx0, idx1, -1 * dir);\n\t\t\tlet lftX   =  pixelForX(dataX[lftIdx]);\n\t\t\tlet rgtX   =  pixelForX(dataX[rgtIdx]);\n\n\t\t\tlet hasGap = false;\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet x = pixelForX(dataX[i]);\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\tif (x == accX) {\n\t\t\t\t\tif (yVal != null) {\n\t\t\t\t\t\toutY = pixelForY(yVal);\n\n\t\t\t\t\t\tif (minY == inf) {\n\t\t\t\t\t\t\tlineTo(stroke, x, outY);\n\t\t\t\t\t\t\tinY = outY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tminY = min(outY, minY);\n\t\t\t\t\t\tmaxY = max(outY, maxY);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (yVal === null)\n\t\t\t\t\t\t\thasGap = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (minY != inf) {\n\t\t\t\t\t\tdrawAcc(stroke, accX, minY, maxY, inY, outY);\n\t\t\t\t\t\tdrawnAtX = accX;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yVal != null) {\n\t\t\t\t\t\toutY = pixelForY(yVal);\n\t\t\t\t\t\tlineTo(stroke, x, outY);\n\t\t\t\t\t\tminY = maxY = inY = outY;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tminY = inf;\n\t\t\t\t\t\tmaxY = -inf;\n\n\t\t\t\t\t\tif (yVal === null)\n\t\t\t\t\t\t\thasGap = true;\n\t\t\t\t\t}\n\n\t\t\t\t\taccX = x;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (minY != inf && minY != maxY && drawnAtX != accX)\n\t\t\t\tdrawAcc(stroke, accX, minY, maxY, inY, outY);\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillToVal = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillToVal);\n\n\t\t\t\tlineTo(fill, rgtX, fillToY);\n\t\t\t\tlineTo(fill, lftX, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\thasGap && gaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}\n\n// BUG: align: -1 behaves like align: 1 when scale.dir: -1\nfunction stepped(opts) {\n\tconst align = ifNull(opts.align, 1);\n\t// whether to draw ascenders/descenders at null/gap bondaries\n\tconst ascDesc = ifNull(opts.ascDesc, false);\n\tconst alignGaps = ifNull(opts.alignGaps, 0);\n\tconst extend = ifNull(opts.extend, false);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet { left, width } = u.bbox;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet lineTo = scaleX.ori == 0 ? lineToH : lineToV;\n\n\t\t\tconst _paths = {stroke: new Path2D(), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tidx0 = nonNullIdx(dataY, idx0, idx1,  1);\n\t\t\tidx1 = nonNullIdx(dataY, idx0, idx1, -1);\n\n\t\t\tlet prevYPos  = pixelForY(dataY[dir == 1 ? idx0 : idx1]);\n\t\t\tlet firstXPos = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\t\t\tlet prevXPos = firstXPos;\n\n\t\t\tlet firstXPosExt = firstXPos;\n\n\t\t\tif (extend && align == -1) {\n\t\t\t\tfirstXPosExt = left;\n\t\t\t\tlineTo(stroke, firstXPosExt, prevYPos);\n\t\t\t}\n\n\t\t\tlineTo(stroke, firstXPos, prevYPos);\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet yVal1 = dataY[i];\n\n\t\t\t\tif (yVal1 == null)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet x1 = pixelForX(dataX[i]);\n\t\t\t\tlet y1 = pixelForY(yVal1);\n\n\t\t\t\tif (align == 1)\n\t\t\t\t\tlineTo(stroke, x1, prevYPos);\n\t\t\t\telse\n\t\t\t\t\tlineTo(stroke, prevXPos, y1);\n\n\t\t\t\tlineTo(stroke, x1, y1);\n\n\t\t\t\tprevYPos = y1;\n\t\t\t\tprevXPos = x1;\n\t\t\t}\n\n\t\t\tlet prevXPosExt = prevXPos;\n\n\t\t\tif (extend && align == 1) {\n\t\t\t\tprevXPosExt = left + width;\n\t\t\t\tlineTo(stroke, prevXPosExt, prevYPos);\n\t\t\t}\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillTo = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillTo);\n\n\t\t\t\tlineTo(fill, prevXPosExt, fillToY);\n\t\t\t\tlineTo(fill, firstXPosExt, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\tgaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t// expand/contract clips for ascenders/descenders\n\t\t\t\tlet halfStroke = (series.width * pxRatio) / 2;\n\t\t\t\tlet startsOffset = (ascDesc || align ==  1) ?  halfStroke : -halfStroke;\n\t\t\t\tlet endsOffset   = (ascDesc || align == -1) ? -halfStroke :  halfStroke;\n\n\t\t\t\tgaps.forEach(g => {\n\t\t\t\t\tg[0] += startsOffset;\n\t\t\t\t\tg[1] += endsOffset;\n\t\t\t\t});\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}\n\nfunction bars(opts) {\n\topts = opts || EMPTY_OBJ;\n\tconst size = ifNull(opts.size, [0.6, inf, 1]);\n\tconst align = opts.align || 0;\n\tconst extraGap = (opts.gap || 0) * pxRatio;\n\n\tlet ro = opts.radius;\n\n\tro =\n\t\t// [valueRadius, baselineRadius]\n\t\tro == null ? [0, 0] :\n\t\ttypeof ro == 'number' ? [ro, 0] : ro;\n\n\tconst radiusFn = fnOrSelf(ro);\n\n\tconst gapFactor = 1 - size[0];\n\tconst maxWidth  = ifNull(size[1], inf) * pxRatio;\n\tconst minWidth  = ifNull(size[2], 1) * pxRatio;\n\n\tconst disp = ifNull(opts.disp, EMPTY_OBJ);\n\tconst _each = ifNull(opts.each, _ => {});\n\n\tconst { fill: dispFills, stroke: dispStrokes } = disp;\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet valRadius, baseRadius;\n\n\t\t\tif (scaleX.ori == 0)\n\t\t\t\t[valRadius, baseRadius] = radiusFn(u, seriesIdx);\n\t\t\telse\n\t\t\t\t[baseRadius, valRadius] = radiusFn(u, seriesIdx);\n\n\t\t\tconst _dirX = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\t\t\tconst _dirY = scaleY.dir * (scaleY.ori == 1 ? 1 : -1);\n\n\t\t\tlet rect = scaleX.ori == 0 ? rectH : rectV;\n\n\t\t\tlet each = scaleX.ori == 0 ? _each : (u, seriesIdx, i, top, lft, hgt, wid) => {\n\t\t\t\t_each(u, seriesIdx, i, lft, top, wid, hgt);\n\t\t\t};\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t//\tlet fillToY = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\tlet fillToY = scaleY.distr == 3 ? (bandFillDir == 1 ? scaleY.max : scaleY.min) : 0;\n\n\t\t\tlet y0Pos = valToPosY(fillToY, scaleY, yDim, yOff);\n\n\t\t\t// barWid is to center of stroke\n\t\t\tlet xShift, barWid;\n\n\t\t\tlet strokeWidth = pxRound(series.width * pxRatio);\n\n\t\t\tlet multiPath = false;\n\n\t\t\tlet fillColors = null;\n\t\t\tlet fillPaths = null;\n\t\t\tlet strokeColors = null;\n\t\t\tlet strokePaths = null;\n\n\t\t\tif (dispFills != null && (strokeWidth == 0 || dispStrokes != null)) {\n\t\t\t\tmultiPath = true;\n\n\t\t\t\tfillColors = dispFills.values(u, seriesIdx, idx0, idx1);\n\t\t\t\tfillPaths = new Map();\n\t\t\t\t(new Set(fillColors)).forEach(color => {\n\t\t\t\t\tif (color != null)\n\t\t\t\t\t\tfillPaths.set(color, new Path2D());\n\t\t\t\t});\n\n\t\t\t\tif (strokeWidth > 0) {\n\t\t\t\t\tstrokeColors = dispStrokes.values(u, seriesIdx, idx0, idx1);\n\t\t\t\t\tstrokePaths = new Map();\n\t\t\t\t\t(new Set(strokeColors)).forEach(color => {\n\t\t\t\t\t\tif (color != null)\n\t\t\t\t\t\t\tstrokePaths.set(color, new Path2D());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet { x0, size } = disp;\n\n\t\t\tif (x0 != null && size != null) {\n\t\t\t\tdataX = x0.values(u, seriesIdx, idx0, idx1);\n\n\t\t\t\tif (x0.unit == 2)\n\t\t\t\t\tdataX = dataX.map(pct => u.posToVal(xOff + pct * xDim, scaleX.key, true));\n\n\t\t\t\t// assumes uniform sizes, for now\n\t\t\t\tlet sizes = size.values(u, seriesIdx, idx0, idx1);\n\n\t\t\t\tif (size.unit == 2)\n\t\t\t\t\tbarWid = sizes[0] * xDim;\n\t\t\t\telse\n\t\t\t\t\tbarWid = valToPosX(sizes[0], scaleX, xDim, xOff) - valToPosX(0, scaleX, xDim, xOff); // assumes linear scale (delta from 0)\n\n\t\t\t\tbarWid = pxRound(barWid - strokeWidth);\n\n\t\t\t\txShift = (_dirX == 1 ? -strokeWidth / 2 : barWid + strokeWidth / 2);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet colWid = xDim;\n\n\t\t\t\tif (dataX.length > 1) {\n\t\t\t\t\t// prior index with non-undefined y data\n\t\t\t\t\tlet prevIdx = null;\n\n\t\t\t\t\t// scan full dataset for smallest adjacent delta\n\t\t\t\t\t// will not work properly for non-linear x scales, since does not do expensive valToPosX calcs till end\n\t\t\t\t\tfor (let i = 0, minDelta = Infinity; i < dataX.length; i++) {\n\t\t\t\t\t\tif (dataY[i] !== undefined) {\n\t\t\t\t\t\t\tif (prevIdx != null) {\n\t\t\t\t\t\t\t\tlet delta = abs(dataX[i] - dataX[prevIdx]);\n\n\t\t\t\t\t\t\t\tif (delta < minDelta) {\n\t\t\t\t\t\t\t\t\tminDelta = delta;\n\t\t\t\t\t\t\t\t\tcolWid = abs(valToPosX(dataX[i], scaleX, xDim, xOff) - valToPosX(dataX[prevIdx], scaleX, xDim, xOff));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprevIdx = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet gapWid = colWid * gapFactor;\n\n\t\t\t\tbarWid = pxRound(min(maxWidth, max(minWidth, colWid - gapWid)) - strokeWidth - extraGap);\n\n\t\t\t\txShift = (align == 0 ? barWid / 2 : align == _dirX ? 0 : barWid) - align * _dirX * extraGap / 2;\n\t\t\t}\n\n\t\t\tconst _paths = {stroke: null, fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL | BAND_CLIP_STROKE};  // disp, geom\n\n\t\t\tlet yLimit;\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = new Path2D();\n\t\t\t\tyLimit = pxRound(valToPosY(bandClipDir == 1 ? scaleY.max : scaleY.min, scaleY, yDim, yOff));\n\t\t\t}\n\n\t\t\tconst stroke = multiPath ? null : new Path2D();\n\t\t\tconst band = _paths.band;\n\n\t\t\tlet { y0, y1 } = disp;\n\n\t\t\tlet dataY0 = null;\n\n\t\t\tif (y0 != null && y1 != null) {\n\t\t\t\tdataY = y1.values(u, seriesIdx, idx0, idx1);\n\t\t\t\tdataY0 = y0.values(u, seriesIdx, idx0, idx1);\n\t\t\t}\n\n\t\t\tlet radVal = valRadius * barWid;\n\t\t\tlet radBase = baseRadius * barWid;\n\n\t\t\tfor (let i = _dirX == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += _dirX) {\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\t// we can skip both, drawing and band clipping for alignment artifacts\n\t\t\t\tif (yVal === undefined)\n\t\t\t\t\tcontinue;\n\n\t\t\t/*\n\t\t\t\t// interpolate upwards band clips\n\t\t\t\tif (yVal == null) {\n\t\t\t\t//\tif (hasBands)\n\t\t\t\t//\t\tyVal = costlyLerp(i, idx0, idx1, _dirX, dataY);\n\t\t\t\t//\telse\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t*/\n\n\t\t\t\tlet xVal = scaleX.distr != 2 || disp != null ? dataX[i] : i;\n\n\t\t\t\t// TODO: all xPos can be pre-computed once for all series in aligned set\n\t\t\t\tlet xPos = valToPosX(xVal, scaleX, xDim, xOff);\n\t\t\t\tlet yPos = valToPosY(ifNull(yVal, fillToY), scaleY, yDim, yOff);\n\n\t\t\t\tif (dataY0 != null && yVal != null)\n\t\t\t\t\ty0Pos = valToPosY(dataY0[i], scaleY, yDim, yOff);\n\n\t\t\t\tlet lft = pxRound(xPos - xShift);\n\t\t\t\tlet btm = pxRound(max(yPos, y0Pos));\n\t\t\t\tlet top = pxRound(min(yPos, y0Pos));\n\t\t\t\t// this includes the stroke\n\t\t\t\tlet barHgt = btm - top;\n\n\t\t\t\tif (yVal != null) {  // && yVal != fillToY (0 height bar)\n\t\t\t\t\tlet rv = yVal < 0 ? radBase : radVal;\n\t\t\t\t\tlet rb = yVal < 0 ? radVal : radBase;\n\n\t\t\t\t\tif (multiPath) {\n\t\t\t\t\t\tif (strokeWidth > 0 && strokeColors[i] != null)\n\t\t\t\t\t\t\trect(strokePaths.get(strokeColors[i]), lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\n\t\t\t\t\t\tif (fillColors[i] != null)\n\t\t\t\t\t\t\trect(fillPaths.get(fillColors[i]), lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trect(stroke, lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\n\t\t\t\t\teach(u, seriesIdx, i,\n\t\t\t\t\t\tlft    - strokeWidth / 2,\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbarWid + strokeWidth,\n\t\t\t\t\t\tbarHgt,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (bandClipDir != 0) {\n\t\t\t\t\tif (_dirY * bandClipDir == 1) {\n\t\t\t\t\t\tbtm = top;\n\t\t\t\t\t\ttop = yLimit;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttop = btm;\n\t\t\t\t\t\tbtm = yLimit;\n\t\t\t\t\t}\n\n\t\t\t\t\tbarHgt = btm - top;\n\n\t\t\t\t\trect(band, lft - strokeWidth / 2, top, barWid + strokeWidth, max(0, barHgt), 0, 0);  // radius here?\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (strokeWidth > 0)\n\t\t\t\t_paths.stroke = multiPath ? strokePaths : stroke;\n\n\t\t\t_paths.fill = multiPath ? fillPaths : stroke;\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}\n\nfunction splineInterp(interp, opts) {\n\tconst alignGaps = ifNull(opts?.alignGaps, 0);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet moveTo, bezierCurveTo, lineTo;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tmoveTo = moveToH;\n\t\t\t\tlineTo = lineToH;\n\t\t\t\tbezierCurveTo = bezierCurveToH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmoveTo = moveToV;\n\t\t\t\tlineTo = lineToV;\n\t\t\t\tbezierCurveTo = bezierCurveToV;\n\t\t\t}\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tidx0 = nonNullIdx(dataY, idx0, idx1,  1);\n\t\t\tidx1 = nonNullIdx(dataY, idx0, idx1, -1);\n\n\t\t\tlet firstXPos = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\t\t\tlet prevXPos = firstXPos;\n\n\t\t\tlet xCoords = [];\n\t\t\tlet yCoords = [];\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\tif (yVal != null) {\n\t\t\t\t\tlet xVal = dataX[i];\n\t\t\t\t\tlet xPos = pixelForX(xVal);\n\n\t\t\t\t\txCoords.push(prevXPos = xPos);\n\t\t\t\t\tyCoords.push(pixelForY(dataY[i]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst _paths = {stroke: interp(xCoords, yCoords, moveTo, lineTo, bezierCurveTo, pxRound), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillTo = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillTo);\n\n\t\t\t\tlineTo(fill, prevXPos, fillToY);\n\t\t\t\tlineTo(fill, firstXPos, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\tgaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\n\t\t\t//  if FEAT_PATHS: false in rollup.config.js\n\t\t\t//\tu.ctx.save();\n\t\t\t//\tu.ctx.beginPath();\n\t\t\t//\tu.ctx.rect(u.bbox.left, u.bbox.top, u.bbox.width, u.bbox.height);\n\t\t\t//\tu.ctx.clip();\n\t\t\t//\tu.ctx.strokeStyle = u.series[sidx].stroke;\n\t\t\t//\tu.ctx.stroke(stroke);\n\t\t\t//\tu.ctx.fillStyle = u.series[sidx].fill;\n\t\t\t//\tu.ctx.fill(fill);\n\t\t\t//\tu.ctx.restore();\n\t\t\t//\treturn null;\n\t\t});\n\t};\n}\n\nfunction monotoneCubic(opts) {\n\treturn splineInterp(_monotoneCubic, opts);\n}\n\n// Monotone Cubic Spline interpolation, adapted from the Chartist.js implementation:\n// https://github.com/gionkunz/chartist-js/blob/e7e78201bffe9609915e5e53cfafa29a5d6c49f9/src/scripts/interpolation.js#L240-L369\nfunction _monotoneCubic(xs, ys, moveTo, lineTo, bezierCurveTo, pxRound) {\n\tconst n = xs.length;\n\n\tif (n < 2)\n\t\treturn null;\n\n\tconst path = new Path2D();\n\n\tmoveTo(path, xs[0], ys[0]);\n\n\tif (n == 2)\n\t\tlineTo(path, xs[1], ys[1]);\n\telse {\n\t\tlet ms  = Array(n),\n\t\t\tds  = Array(n - 1),\n\t\t\tdys = Array(n - 1),\n\t\t\tdxs = Array(n - 1);\n\n\t\t// calc deltas and derivative\n\t\tfor (let i = 0; i < n - 1; i++) {\n\t\t\tdys[i] = ys[i + 1] - ys[i];\n\t\t\tdxs[i] = xs[i + 1] - xs[i];\n\t\t\tds[i]  = dys[i] / dxs[i];\n\t\t}\n\n\t\t// determine desired slope (m) at each point using Fritsch-Carlson method\n\t\t// http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\t\tms[0] = ds[0];\n\n\t\tfor (let i = 1; i < n - 1; i++) {\n\t\t\tif (ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0))\n\t\t\t\tms[i] = 0;\n\t\t\telse {\n\t\t\t\tms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n\t\t\t\t\t(2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n\t\t\t\t\t(dxs[i] + 2 * dxs[i - 1]) / ds[i]\n\t\t\t\t);\n\n\t\t\t\tif (!isFinite(ms[i]))\n\t\t\t\t\tms[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tms[n - 1] = ds[n - 2];\n\n\t\tfor (let i = 0; i < n - 1; i++) {\n\t\t\tbezierCurveTo(\n\t\t\t\tpath,\n\t\t\t\txs[i] + dxs[i] / 3,\n\t\t\t\tys[i] + ms[i] * dxs[i] / 3,\n\t\t\t\txs[i + 1] - dxs[i] / 3,\n\t\t\t\tys[i + 1] - ms[i + 1] * dxs[i] / 3,\n\t\t\t\txs[i + 1],\n\t\t\t\tys[i + 1],\n\t\t\t);\n\t\t}\n\t}\n\n\treturn path;\n}\n\nconst cursorPlots = new Set();\n\nfunction invalidateRects() {\n\tfor (let u of cursorPlots)\n\t\tu.syncRect(true);\n}\n\nif (domEnv) {\n\ton(resize, win, invalidateRects);\n\ton(scroll, win, invalidateRects, true);\n\ton(dppxchange, win, () => { uPlot.pxRatio = pxRatio; });\n}\n\nconst linearPath = linear() ;\nconst pointsPath = points() ;\n\nfunction setDefaults(d, xo, yo, initY) {\n\tlet d2 = initY ? [d[0], d[1]].concat(d.slice(2)) : [d[0]].concat(d.slice(1));\n\treturn d2.map((o, i) => setDefault(o, i, xo, yo));\n}\n\nfunction setDefaults2(d, xyo) {\n\treturn d.map((o, i) => i == 0 ? null : assign({}, xyo, o));  // todo: assign() will not merge facet arrays\n}\n\nfunction setDefault(o, i, xo, yo) {\n\treturn assign({}, (i == 0 ? xo : yo), o);\n}\n\nfunction snapNumX(self, dataMin, dataMax) {\n\treturn dataMin == null ? nullNullTuple : [dataMin, dataMax];\n}\n\nconst snapTimeX = snapNumX;\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction snapNumY(self, dataMin, dataMax) {\n\treturn dataMin == null ? nullNullTuple : rangeNum(dataMin, dataMax, rangePad, true);\n}\n\nfunction snapLogY(self, dataMin, dataMax, scale) {\n\treturn dataMin == null ? nullNullTuple : rangeLog(dataMin, dataMax, self.scales[scale].log, false);\n}\n\nconst snapLogX = snapLogY;\n\nfunction snapAsinhY(self, dataMin, dataMax, scale) {\n\treturn dataMin == null ? nullNullTuple : rangeAsinh(dataMin, dataMax, self.scales[scale].log, false);\n}\n\nconst snapAsinhX = snapAsinhY;\n\n// dim is logical (getClientBoundingRect) pixels, not canvas pixels\nfunction findIncr(minVal, maxVal, incrs, dim, minSpace) {\n\tlet intDigits = max(numIntDigits(minVal), numIntDigits(maxVal));\n\n\tlet delta = maxVal - minVal;\n\n\tlet incrIdx = closestIdx((minSpace / dim) * delta, incrs);\n\n\tdo {\n\t\tlet foundIncr = incrs[incrIdx];\n\t\tlet foundSpace = dim * foundIncr / delta;\n\n\t\tif (foundSpace >= minSpace && intDigits + (foundIncr < 5 ? fixedDec.get(foundIncr) : 0) <= 17)\n\t\t\treturn [foundIncr, foundSpace];\n\t} while (++incrIdx < incrs.length);\n\n\treturn [0, 0];\n}\n\nfunction pxRatioFont(font) {\n\tlet fontSize, fontSizeCss;\n\tfont = font.replace(/(\\d+)px/, (m, p1) => (fontSize = round((fontSizeCss = +p1) * pxRatio)) + 'px');\n\treturn [font, fontSize, fontSizeCss];\n}\n\nfunction syncFontSize(axis) {\n\tif (axis.show) {\n\t\t[axis.font, axis.labelFont].forEach(f => {\n\t\t\tlet size = roundDec(f[2] * pxRatio, 1);\n\t\t\tf[0] = f[0].replace(/[0-9.]+px/, size + 'px');\n\t\t\tf[1] = size;\n\t\t});\n\t}\n}\n\nfunction uPlot(opts, data, then) {\n\tconst self = {\n\t\tmode: ifNull(opts.mode, 1),\n\t};\n\n\tconst mode = self.mode;\n\n\t// TODO: cache denoms & mins scale.cache = {r, min, }\n\tfunction getValPct(val, scale) {\n\t\tlet _val = (\n\t\t\tscale.distr == 3 ? log10(val > 0 ? val : scale.clamp(self, val, scale.min, scale.max, scale.key)) :\n\t\t\tscale.distr == 4 ? asinh(val, scale.asinh) :\n\t\t\tval\n\t\t);\n\n\t\treturn (_val - scale._min) / (scale._max - scale._min);\n\t}\n\n\tfunction getHPos(val, scale, dim, off) {\n\t\tlet pct = getValPct(val, scale);\n\t\treturn off + dim * (scale.dir == -1 ? (1 - pct) : pct);\n\t}\n\n\tfunction getVPos(val, scale, dim, off) {\n\t\tlet pct = getValPct(val, scale);\n\t\treturn off + dim * (scale.dir == -1 ? pct : (1 - pct));\n\t}\n\n\tfunction getPos(val, scale, dim, off) {\n\t\treturn scale.ori == 0 ? getHPos(val, scale, dim, off) : getVPos(val, scale, dim, off);\n\t}\n\n\tself.valToPosH = getHPos;\n\tself.valToPosV = getVPos;\n\n\tlet ready = false;\n\tself.status = 0;\n\n\tconst root = self.root = placeDiv(UPLOT);\n\n\tif (opts.id != null)\n\t\troot.id = opts.id;\n\n\taddClass(root, opts.class);\n\n\tif (opts.title) {\n\t\tlet title = placeDiv(TITLE, root);\n\t\ttitle.textContent = opts.title;\n\t}\n\n\tconst can = placeTag(\"canvas\");\n\tconst ctx = self.ctx = can.getContext(\"2d\");\n\n\tconst wrap = placeDiv(WRAP, root);\n\n\ton(\"click\", wrap, e => {\n\t\tlet didDrag = mouseLeft1 != mouseLeft0 || mouseTop1 != mouseTop0;\n\t\tdidDrag && drag.click(self, e);\n\t}, true);\n\n\tconst under = self.under = placeDiv(UNDER, wrap);\n\twrap.appendChild(can);\n\tconst over = self.over = placeDiv(OVER, wrap);\n\n\topts = copy(opts);\n\n\tconst pxAlign = +ifNull(opts.pxAlign, 1);\n\n\tconst pxRound = pxRoundGen(pxAlign);\n\n\t(opts.plugins || []).forEach(p => {\n\t\tif (p.opts)\n\t\t\topts = p.opts(self, opts) || opts;\n\t});\n\n\tconst ms = opts.ms || 1e-3;\n\n\tconst series  = self.series = mode == 1 ?\n\t\tsetDefaults(opts.series || [], xSeriesOpts, ySeriesOpts, false) :\n\t\tsetDefaults2(opts.series || [null], xySeriesOpts);\n\tconst axes    = self.axes   = setDefaults(opts.axes   || [], xAxisOpts,   yAxisOpts,    true);\n\tconst scales  = self.scales = {};\n\tconst bands   = self.bands  = opts.bands || [];\n\n\tbands.forEach(b => {\n\t\tb.fill = fnOrSelf(b.fill || null);\n\t\tb.dir = ifNull(b.dir, -1);\n\t});\n\n\tconst xScaleKey = mode == 2 ? series[1].facets[0].scale : series[0].scale;\n\n\tconst drawOrderMap = {\n\t\taxes: drawAxesGrid,\n\t\tseries: drawSeries,\n\t};\n\n\tconst drawOrder = (opts.drawOrder || [\"axes\", \"series\"]).map(key => drawOrderMap[key]);\n\n\tfunction initScale(scaleKey) {\n\t\tlet sc = scales[scaleKey];\n\n\t\tif (sc == null) {\n\t\t\tlet scaleOpts = (opts.scales || EMPTY_OBJ)[scaleKey] || EMPTY_OBJ;\n\n\t\t\tif (scaleOpts.from != null) {\n\t\t\t\t// ensure parent is initialized\n\t\t\t\tinitScale(scaleOpts.from);\n\t\t\t\t// dependent scales inherit\n\t\t\t\tscales[scaleKey] = assign({}, scales[scaleOpts.from], scaleOpts, {key: scaleKey});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsc = scales[scaleKey] = assign({}, (scaleKey == xScaleKey ? xScaleOpts : yScaleOpts), scaleOpts);\n\n\t\t\t\tsc.key = scaleKey;\n\n\t\t\t\tlet isTime = sc.time;\n\n\t\t\t\tlet rn = sc.range;\n\n\t\t\t\tlet rangeIsArr = isArr(rn);\n\n\t\t\t\tif (scaleKey != xScaleKey || (mode == 2 && !isTime)) {\n\t\t\t\t\t// if range array has null limits, it should be auto\n\t\t\t\t\tif (rangeIsArr && (rn[0] == null || rn[1] == null)) {\n\t\t\t\t\t\trn = {\n\t\t\t\t\t\t\tmin: rn[0] == null ? autoRangePart : {\n\t\t\t\t\t\t\t\tmode: 1,\n\t\t\t\t\t\t\t\thard: rn[0],\n\t\t\t\t\t\t\t\tsoft: rn[0],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmax: rn[1] == null ? autoRangePart : {\n\t\t\t\t\t\t\t\tmode: 1,\n\t\t\t\t\t\t\t\thard: rn[1],\n\t\t\t\t\t\t\t\tsoft: rn[1],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\trangeIsArr = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!rangeIsArr && isObj(rn)) {\n\t\t\t\t\t\tlet cfg = rn;\n\t\t\t\t\t\t// this is similar to snapNumY\n\t\t\t\t\t\trn = (self, dataMin, dataMax) => dataMin == null ? nullNullTuple : rangeNum(dataMin, dataMax, cfg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsc.range = fnOrSelf(rn || (isTime ? snapTimeX : scaleKey == xScaleKey ?\n\t\t\t\t\t(sc.distr == 3 ? snapLogX : sc.distr == 4 ? snapAsinhX : snapNumX) :\n\t\t\t\t\t(sc.distr == 3 ? snapLogY : sc.distr == 4 ? snapAsinhY : snapNumY)\n\t\t\t\t));\n\n\t\t\t\tsc.auto = fnOrSelf(rangeIsArr ? false : sc.auto);\n\n\t\t\t\tsc.clamp = fnOrSelf(sc.clamp || clampScale);\n\n\t\t\t\t// caches for expensive ops like asinh() & log()\n\t\t\t\tsc._min = sc._max = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tinitScale(\"x\");\n\tinitScale(\"y\");\n\n\t// TODO: init scales from facets in mode: 2\n\tif (mode == 1) {\n\t\tseries.forEach(s => {\n\t\t\tinitScale(s.scale);\n\t\t});\n\t}\n\n\taxes.forEach(a => {\n\t\tinitScale(a.scale);\n\t});\n\n\tfor (let k in opts.scales)\n\t\tinitScale(k);\n\n\tconst scaleX = scales[xScaleKey];\n\n\tconst xScaleDistr = scaleX.distr;\n\n\tlet valToPosX, valToPosY;\n\n\tif (scaleX.ori == 0) {\n\t\taddClass(root, ORI_HZ);\n\t\tvalToPosX = getHPos;\n\t\tvalToPosY = getVPos;\n\t\t/*\n\t\tupdOriDims = () => {\n\t\t\txDimCan = plotWid;\n\t\t\txOffCan = plotLft;\n\t\t\tyDimCan = plotHgt;\n\t\t\tyOffCan = plotTop;\n\n\t\t\txDimCss = plotWidCss;\n\t\t\txOffCss = plotLftCss;\n\t\t\tyDimCss = plotHgtCss;\n\t\t\tyOffCss = plotTopCss;\n\t\t};\n\t\t*/\n\t}\n\telse {\n\t\taddClass(root, ORI_VT);\n\t\tvalToPosX = getVPos;\n\t\tvalToPosY = getHPos;\n\t\t/*\n\t\tupdOriDims = () => {\n\t\t\txDimCan = plotHgt;\n\t\t\txOffCan = plotTop;\n\t\t\tyDimCan = plotWid;\n\t\t\tyOffCan = plotLft;\n\n\t\t\txDimCss = plotHgtCss;\n\t\t\txOffCss = plotTopCss;\n\t\t\tyDimCss = plotWidCss;\n\t\t\tyOffCss = plotLftCss;\n\t\t};\n\t\t*/\n\t}\n\n\tconst pendScales = {};\n\n\t// explicitly-set initial scales\n\tfor (let k in scales) {\n\t\tlet sc = scales[k];\n\n\t\tif (sc.min != null || sc.max != null) {\n\t\t\tpendScales[k] = {min: sc.min, max: sc.max};\n\t\t\tsc.min = sc.max = null;\n\t\t}\n\t}\n\n//\tself.tz = opts.tz || Intl.DateTimeFormat().resolvedOptions().timeZone;\n\tconst _tzDate  = (opts.tzDate || (ts => new Date(round(ts / ms))));\n\tconst _fmtDate = (opts.fmtDate || fmtDate);\n\n\tconst _timeAxisSplits = (ms == 1 ? timeAxisSplitsMs(_tzDate) : timeAxisSplitsS(_tzDate));\n\tconst _timeAxisVals   = timeAxisVals(_tzDate, timeAxisStamps((ms == 1 ? _timeAxisStampsMs : _timeAxisStampsS), _fmtDate));\n\tconst _timeSeriesVal  = timeSeriesVal(_tzDate, timeSeriesStamp(_timeSeriesStamp, _fmtDate));\n\n\tconst activeIdxs = [];\n\n\tconst legend     = (self.legend = assign({}, legendOpts, opts.legend));\n\tconst showLegend = legend.show;\n\tconst markers    = legend.markers;\n\n\t{\n\t\tlegend.idxs = activeIdxs;\n\n\t\tmarkers.width  = fnOrSelf(markers.width);\n\t\tmarkers.dash   = fnOrSelf(markers.dash);\n\t\tmarkers.stroke = fnOrSelf(markers.stroke);\n\t\tmarkers.fill   = fnOrSelf(markers.fill);\n\t}\n\n\tlet legendEl;\n\tlet legendRows = [];\n\tlet legendCells = [];\n\tlet legendCols;\n\tlet multiValLegend = false;\n\tlet NULL_LEGEND_VALUES = {};\n\n\tif (legend.live) {\n\t\tconst getMultiVals = series[1] ? series[1].values : null;\n\t\tmultiValLegend = getMultiVals != null;\n\t\tlegendCols = multiValLegend ? getMultiVals(self, 1, 0) : {_: 0};\n\n\t\tfor (let k in legendCols)\n\t\t\tNULL_LEGEND_VALUES[k] = LEGEND_DISP;\n\t}\n\n\tif (showLegend) {\n\t\tlegendEl = placeTag(\"table\", LEGEND, root);\n\n\t\tlegend.mount(self, legendEl);\n\n\t\tif (multiValLegend) {\n\t\t\tlet head = placeTag(\"tr\", LEGEND_THEAD, legendEl);\n\t\t\tplaceTag(\"th\", null, head);\n\n\t\t\tfor (var key in legendCols)\n\t\t\t\tplaceTag(\"th\", LEGEND_LABEL, head).textContent = key;\n\t\t}\n\t\telse {\n\t\t\taddClass(legendEl, LEGEND_INLINE);\n\t\t\tlegend.live && addClass(legendEl, LEGEND_LIVE);\n\t\t}\n\t}\n\n\tconst son  = {show: true};\n\tconst soff = {show: false};\n\n\tfunction initLegendRow(s, i) {\n\t\tif (i == 0 && (multiValLegend || !legend.live || mode == 2))\n\t\t\treturn nullNullTuple;\n\n\t\tlet cells = [];\n\n\t\tlet row = placeTag(\"tr\", LEGEND_SERIES, legendEl, legendEl.childNodes[i]);\n\n\t\taddClass(row, s.class);\n\n\t\tif (!s.show)\n\t\t\taddClass(row, OFF);\n\n\t\tlet label = placeTag(\"th\", null, row);\n\n\t\tif (markers.show) {\n\t\t\tlet indic = placeDiv(LEGEND_MARKER, label);\n\n\t\t\tif (i > 0) {\n\t\t\t\tlet width  = markers.width(self, i);\n\n\t\t\t\tif (width)\n\t\t\t\t\tindic.style.border = width + \"px \" + markers.dash(self, i) + \" \" + markers.stroke(self, i);\n\n\t\t\t\tindic.style.background = markers.fill(self, i);\n\t\t\t}\n\t\t}\n\n\t\tlet text = placeDiv(LEGEND_LABEL, label);\n\t\ttext.textContent = s.label;\n\n\t\tif (i > 0) {\n\t\t\tif (!markers.show)\n\t\t\t\ttext.style.color = s.width > 0 ? markers.stroke(self, i) : markers.fill(self, i);\n\n\t\t\tonMouse(\"click\", label, e => {\n\t\t\t\tif (cursor._lock)\n\t\t\t\t\treturn;\n\n\t\t\t\tlet seriesIdx = series.indexOf(s);\n\n\t\t\t\tif ((e.ctrlKey || e.metaKey) != legend.isolate) {\n\t\t\t\t\t// if any other series is shown, isolate this one. else show all\n\t\t\t\t\tlet isolate = series.some((s, i) => i > 0 && i != seriesIdx && s.show);\n\n\t\t\t\t\tseries.forEach((s, i) => {\n\t\t\t\t\t\ti > 0 && setSeries(i, isolate ? (i == seriesIdx ? son : soff) : son, true, syncOpts.setSeries);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsetSeries(seriesIdx, {show: !s.show}, true, syncOpts.setSeries);\n\t\t\t});\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tonMouse(mouseenter, label, e => {\n\t\t\t\t\tif (cursor._lock)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tsetSeries(series.indexOf(s), FOCUS_TRUE, true, syncOpts.setSeries);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in legendCols) {\n\t\t\tlet v = placeTag(\"td\", LEGEND_VALUE, row);\n\t\t\tv.textContent = \"--\";\n\t\t\tcells.push(v);\n\t\t}\n\n\t\treturn [row, cells];\n\t}\n\n\tconst mouseListeners = new Map();\n\n\tfunction onMouse(ev, targ, fn) {\n\t\tconst targListeners = mouseListeners.get(targ) || {};\n\t\tconst listener = cursor.bind[ev](self, targ, fn);\n\n\t\tif (listener) {\n\t\t\ton(ev, targ, targListeners[ev] = listener);\n\t\t\tmouseListeners.set(targ, targListeners);\n\t\t}\n\t}\n\n\tfunction offMouse(ev, targ, fn) {\n\t\tconst targListeners = mouseListeners.get(targ) || {};\n\n\t\tfor (let k in targListeners) {\n\t\t\tif (ev == null || k == ev) {\n\t\t\t\toff(k, targ, targListeners[k]);\n\t\t\t\tdelete targListeners[k];\n\t\t\t}\n\t\t}\n\n\t\tif (ev == null)\n\t\t\tmouseListeners.delete(targ);\n\t}\n\n\tlet fullWidCss = 0;\n\tlet fullHgtCss = 0;\n\n\tlet plotWidCss = 0;\n\tlet plotHgtCss = 0;\n\n\t// plot margins to account for axes\n\tlet plotLftCss = 0;\n\tlet plotTopCss = 0;\n\n\tlet plotLft = 0;\n\tlet plotTop = 0;\n\tlet plotWid = 0;\n\tlet plotHgt = 0;\n\n\tself.bbox = {};\n\n\tlet shouldSetScales = false;\n\tlet shouldSetSize = false;\n\tlet shouldConvergeSize = false;\n\tlet shouldSetCursor = false;\n\tlet shouldSetSelect = false;\n\tlet shouldSetLegend = false;\n\n\tfunction _setSize(width, height, force) {\n\t\tif (force || (width != self.width || height != self.height))\n\t\t\tcalcSize(width, height);\n\n\t\tresetYSeries(false);\n\n\t\tshouldConvergeSize = true;\n\t\tshouldSetSize = true;\n\n\t\tif (cursor.left >= 0)\n\t\t\tshouldSetCursor = shouldSetLegend = true;\n\n\t\tcommit();\n\t}\n\n\tfunction calcSize(width, height) {\n\t//\tlog(\"calcSize()\", arguments);\n\n\t\tself.width  = fullWidCss = plotWidCss = width;\n\t\tself.height = fullHgtCss = plotHgtCss = height;\n\t\tplotLftCss  = plotTopCss = 0;\n\n\t\tcalcPlotRect();\n\t\tcalcAxesRects();\n\n\t\tlet bb = self.bbox;\n\n\t\tplotLft = bb.left   = incrRound(plotLftCss * pxRatio, 0.5);\n\t\tplotTop = bb.top    = incrRound(plotTopCss * pxRatio, 0.5);\n\t\tplotWid = bb.width  = incrRound(plotWidCss * pxRatio, 0.5);\n\t\tplotHgt = bb.height = incrRound(plotHgtCss * pxRatio, 0.5);\n\n\t//\tupdOriDims();\n\t}\n\n\t// ensures size calc convergence\n\tconst CYCLE_LIMIT = 3;\n\n\tfunction convergeSize() {\n\t\tlet converged = false;\n\n\t\tlet cycleNum = 0;\n\n\t\twhile (!converged) {\n\t\t\tcycleNum++;\n\n\t\t\tlet axesConverged = axesCalc(cycleNum);\n\t\t\tlet paddingConverged = paddingCalc(cycleNum);\n\n\t\t\tconverged = cycleNum == CYCLE_LIMIT || (axesConverged && paddingConverged);\n\n\t\t\tif (!converged) {\n\t\t\t\tcalcSize(self.width, self.height);\n\t\t\t\tshouldSetSize = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setSize({width, height}) {\n\t\t_setSize(width, height);\n\t}\n\n\tself.setSize = setSize;\n\n\t// accumulate axis offsets, reduce canvas width\n\tfunction calcPlotRect() {\n\t\t// easements for edge labels\n\t\tlet hasTopAxis = false;\n\t\tlet hasBtmAxis = false;\n\t\tlet hasRgtAxis = false;\n\t\tlet hasLftAxis = false;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show && axis._show) {\n\t\t\t\tlet {side, _size} = axis;\n\t\t\t\tlet isVt = side % 2;\n\t\t\t\tlet labelSize = axis.label != null ? axis.labelSize : 0;\n\n\t\t\t\tlet fullSize = _size + labelSize;\n\n\t\t\t\tif (fullSize > 0) {\n\t\t\t\t\tif (isVt) {\n\t\t\t\t\t\tplotWidCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 3) {\n\t\t\t\t\t\t\tplotLftCss += fullSize;\n\t\t\t\t\t\t\thasLftAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasRgtAxis = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplotHgtCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 0) {\n\t\t\t\t\t\t\tplotTopCss += fullSize;\n\t\t\t\t\t\t\thasTopAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasBtmAxis = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsidesWithAxes[0] = hasTopAxis;\n\t\tsidesWithAxes[1] = hasRgtAxis;\n\t\tsidesWithAxes[2] = hasBtmAxis;\n\t\tsidesWithAxes[3] = hasLftAxis;\n\n\t\t// hz padding\n\t\tplotWidCss -= _padding[1] + _padding[3];\n\t\tplotLftCss += _padding[3];\n\n\t\t// vt padding\n\t\tplotHgtCss -= _padding[2] + _padding[0];\n\t\tplotTopCss += _padding[0];\n\t}\n\n\tfunction calcAxesRects() {\n\t\t// will accum +\n\t\tlet off1 = plotLftCss + plotWidCss;\n\t\tlet off2 = plotTopCss + plotHgtCss;\n\t\t// will accum -\n\t\tlet off3 = plotLftCss;\n\t\tlet off0 = plotTopCss;\n\n\t\tfunction incrOffset(side, size) {\n\t\t\tswitch (side) {\n\t\t\t\tcase 1: off1 += size; return off1 - size;\n\t\t\t\tcase 2: off2 += size; return off2 - size;\n\t\t\t\tcase 3: off3 -= size; return off3 + size;\n\t\t\t\tcase 0: off0 -= size; return off0 + size;\n\t\t\t}\n\t\t}\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show && axis._show) {\n\t\t\t\tlet side = axis.side;\n\n\t\t\t\taxis._pos = incrOffset(side, axis._size);\n\n\t\t\t\tif (axis.label != null)\n\t\t\t\t\taxis._lpos = incrOffset(side, axis.labelSize);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst cursor = (self.cursor = assign({}, cursorOpts, {drag: {y: mode == 2}}, opts.cursor));\n\n\t{\n\t\tcursor.idxs = activeIdxs;\n\n\t\tcursor._lock = false;\n\n\t\tlet points = cursor.points;\n\n\t\tpoints.show   = fnOrSelf(points.show);\n\t\tpoints.size   = fnOrSelf(points.size);\n\t\tpoints.stroke = fnOrSelf(points.stroke);\n\t\tpoints.width  = fnOrSelf(points.width);\n\t\tpoints.fill   = fnOrSelf(points.fill);\n\t}\n\n\tconst focus = self.focus = assign({}, opts.focus || {alpha: 0.3}, cursor.focus);\n\n\tif (focus.bias != 0)\n\t\tfocus.prox = 1e5; // big, but < Infinity\n\n\tconst cursorFocus = focus.prox >= 0;\n\n\t// series-intersection markers\n\tlet cursorPts = [null];\n\n\tfunction initCursorPt(s, si) {\n\t\tif (si > 0) {\n\t\t\tlet pt = cursor.points.show(self, si);\n\n\t\t\tif (pt) {\n\t\t\t\taddClass(pt, CURSOR_PT);\n\t\t\t\taddClass(pt, s.class);\n\t\t\t\telTrans(pt, -10, -10, plotWidCss, plotHgtCss);\n\t\t\t\tover.insertBefore(pt, cursorPts[si]);\n\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initSeries(s, i) {\n\t\tif (mode == 1 || i > 0) {\n\t\t\tlet isTime = mode == 1 && scales[s.scale].time;\n\n\t\t\tlet sv = s.value;\n\t\t\ts.value = isTime ? (isStr(sv) ? timeSeriesVal(_tzDate, timeSeriesStamp(sv, _fmtDate)) : sv || _timeSeriesVal) : sv || numSeriesVal;\n\t\t\ts.label = s.label || (isTime ? timeSeriesLabel : numSeriesLabel);\n\t\t}\n\n\t\tif (i > 0) {\n\t\t\ts.width  = s.width == null ? 1 : s.width;\n\t\t\ts.paths  = s.paths || linearPath || retNull;\n\t\t\ts.fillTo = fnOrSelf(s.fillTo || seriesFillTo);\n\t\t\ts.pxAlign = +ifNull(s.pxAlign, pxAlign);\n\t\t\ts.pxRound = pxRoundGen(s.pxAlign);\n\n\t\t\ts.stroke = fnOrSelf(s.stroke || null);\n\t\t\ts.fill   = fnOrSelf(s.fill || null);\n\t\t\ts._stroke = s._fill = s._paths = s._focus = null;\n\n\t\t\tlet _ptDia = ptDia(max(1, s.width), 1);\n\t\t\tlet points = s.points = assign({}, {\n\t\t\t\tsize: _ptDia,\n\t\t\t\twidth: max(1, _ptDia * .2),\n\t\t\t\tstroke: s.stroke,\n\t\t\t\tspace: _ptDia * 2,\n\t\t\t\tpaths: pointsPath,\n\t\t\t\t_stroke: null,\n\t\t\t\t_fill: null,\n\t\t\t}, s.points);\n\t\t\tpoints.show   = fnOrSelf(points.show);\n\t\t\tpoints.filter = fnOrSelf(points.filter);\n\t\t\tpoints.fill   = fnOrSelf(points.fill);\n\t\t\tpoints.stroke = fnOrSelf(points.stroke);\n\t\t\tpoints.paths  = fnOrSelf(points.paths);\n\t\t\tpoints.pxAlign = s.pxAlign;\n\t\t}\n\n\t\tif (showLegend) {\n\t\t\tlet rowCells = initLegendRow(s, i);\n\t\t\tlegendRows.splice(i, 0, rowCells[0]);\n\t\t\tlegendCells.splice(i, 0, rowCells[1]);\n\t\t\tlegend.values.push(null);\t// NULL_LEGEND_VALS not yet avil here :(\n\t\t}\n\n\t\tif (cursor.show) {\n\t\t\tactiveIdxs.splice(i, 0, null);\n\n\t\t\tlet pt = initCursorPt(s, i);\n\t\t\tpt && cursorPts.splice(i, 0, pt);\n\t\t}\n\n\t\tfire(\"addSeries\", i);\n\t}\n\n\tfunction addSeries(opts, si) {\n\t\tsi = si == null ? series.length : si;\n\n\t\topts = mode == 1 ? setDefault(opts, si, xSeriesOpts, ySeriesOpts) : setDefault(opts, si, null, xySeriesOpts);\n\n\t\tseries.splice(si, 0, opts);\n\t\tinitSeries(series[si], si);\n\t}\n\n\tself.addSeries = addSeries;\n\n\tfunction delSeries(i) {\n\t\tseries.splice(i, 1);\n\n\t\tif (showLegend) {\n\t\t\tlegend.values.splice(i, 1);\n\n\t\t\tlegendCells.splice(i, 1);\n\t\t\tlet tr = legendRows.splice(i, 1)[0];\n\t\t\toffMouse(null, tr.firstChild);\n\t\t\ttr.remove();\n\t\t}\n\n\t\tif (cursor.show) {\n\t\t\tactiveIdxs.splice(i, 1);\n\n\t\t\tcursorPts.length > 1 && cursorPts.splice(i, 1)[0].remove();\n\t\t}\n\n\t\t// TODO: de-init no-longer-needed scales?\n\n\t\tfire(\"delSeries\", i);\n\t}\n\n\tself.delSeries = delSeries;\n\n\tconst sidesWithAxes = [false, false, false, false];\n\n\tfunction initAxis(axis, i) {\n\t\taxis._show = axis.show;\n\n\t\tif (axis.show) {\n\t\t\tlet isVt = axis.side % 2;\n\n\t\t\tlet sc = scales[axis.scale];\n\n\t\t\t// this can occur if all series specify non-default scales\n\t\t\tif (sc == null) {\n\t\t\t\taxis.scale = isVt ? series[1].scale : xScaleKey;\n\t\t\t\tsc = scales[axis.scale];\n\t\t\t}\n\n\t\t\t// also set defaults for incrs & values based on axis distr\n\t\t\tlet isTime = sc.time;\n\n\t\t\taxis.size   = fnOrSelf(axis.size);\n\t\t\taxis.space  = fnOrSelf(axis.space);\n\t\t\taxis.rotate = fnOrSelf(axis.rotate);\n\t\t\taxis.incrs  = fnOrSelf(axis.incrs  || (          sc.distr == 2 ? wholeIncrs : (isTime ? (ms == 1 ? timeIncrsMs : timeIncrsS) : numIncrs)));\n\t\t\taxis.splits = fnOrSelf(axis.splits || (isTime && sc.distr == 1 ? _timeAxisSplits : sc.distr == 3 ? logAxisSplits : sc.distr == 4 ? asinhAxisSplits : numAxisSplits));\n\n\t\t\taxis.stroke        = fnOrSelf(axis.stroke);\n\t\t\taxis.grid.stroke   = fnOrSelf(axis.grid.stroke);\n\t\t\taxis.ticks.stroke  = fnOrSelf(axis.ticks.stroke);\n\t\t\taxis.border.stroke = fnOrSelf(axis.border.stroke);\n\n\t\t\tlet av = axis.values;\n\n\t\t\taxis.values = (\n\t\t\t\t// static array of tick values\n\t\t\t\tisArr(av) && !isArr(av[0]) ? fnOrSelf(av) :\n\t\t\t\t// temporal\n\t\t\t\tisTime ? (\n\t\t\t\t\t// config array of fmtDate string tpls\n\t\t\t\t\tisArr(av) ?\n\t\t\t\t\t\ttimeAxisVals(_tzDate, timeAxisStamps(av, _fmtDate)) :\n\t\t\t\t\t// fmtDate string tpl\n\t\t\t\t\tisStr(av) ?\n\t\t\t\t\t\ttimeAxisVal(_tzDate, av) :\n\t\t\t\t\tav || _timeAxisVals\n\t\t\t\t) : av || numAxisVals\n\t\t\t);\n\n\t\t\taxis.filter = fnOrSelf(axis.filter || (          sc.distr >= 3 && sc.log == 10 ? log10AxisValsFilt : retArg1));\n\n\t\t\taxis.font      = pxRatioFont(axis.font);\n\t\t\taxis.labelFont = pxRatioFont(axis.labelFont);\n\n\t\t\taxis._size   = axis.size(self, null, i, 0);\n\n\t\t\taxis._space  =\n\t\t\taxis._rotate =\n\t\t\taxis._incrs  =\n\t\t\taxis._found  =\t// foundIncrSpace\n\t\t\taxis._splits =\n\t\t\taxis._values = null;\n\n\t\t\tif (axis._size > 0) {\n\t\t\t\tsidesWithAxes[i] = true;\n\t\t\t\taxis._el = placeDiv(AXIS, wrap);\n\t\t\t}\n\n\t\t\t// debug\n\t\t//\taxis._el.style.background = \"#\"  + Math.floor(Math.random()*16777215).toString(16) + '80';\n\t\t}\n\t}\n\n\tfunction autoPadSide(self, side, sidesWithAxes, cycleNum) {\n\t\tlet [hasTopAxis, hasRgtAxis, hasBtmAxis, hasLftAxis] = sidesWithAxes;\n\n\t\tlet ori = side % 2;\n\t\tlet size = 0;\n\n\t\tif (ori == 0 && (hasLftAxis || hasRgtAxis))\n\t\t\tsize = (side == 0 && !hasTopAxis || side == 2 && !hasBtmAxis ? round(xAxisOpts.size / 3) : 0);\n\t\tif (ori == 1 && (hasTopAxis || hasBtmAxis))\n\t\t\tsize = (side == 1 && !hasRgtAxis || side == 3 && !hasLftAxis ? round(yAxisOpts.size / 2) : 0);\n\n\t\treturn size;\n\t}\n\n\tconst padding = self.padding = (opts.padding || [autoPadSide,autoPadSide,autoPadSide,autoPadSide]).map(p => fnOrSelf(ifNull(p, autoPadSide)));\n\tconst _padding = self._padding = padding.map((p, i) => p(self, i, sidesWithAxes, 0));\n\n\tlet dataLen;\n\n\t// rendered data window\n\tlet i0 = null;\n\tlet i1 = null;\n\tconst idxs = mode == 1 ? series[0].idxs : null;\n\n\tlet data0 = null;\n\n\tlet viaAutoScaleX = false;\n\n\tfunction setData(_data, _resetScales) {\n\t\tdata = _data == null ? [] : copy(_data, fastIsObj);\n\n\t\tif (mode == 2) {\n\t\t\tdataLen = 0;\n\t\t\tfor (let i = 1; i < series.length; i++)\n\t\t\t\tdataLen += data[i][0].length;\n\t\t\tself.data = data = _data;\n\t\t}\n\t\telse {\n\t\t\tif (data[0] == null)\n\t\t\t\tdata[0] = [];\n\n\t\t\tself.data = data.slice();\n\n\t\t\tdata0 = data[0];\n\t\t\tdataLen = data0.length;\n\n\t\t\tif (xScaleDistr == 2) {\n\t\t\t\tdata[0] = Array(dataLen);\n\t\t\t\tfor (let i = 0; i < dataLen; i++)\n\t\t\t\t\tdata[0][i] = i;\n\t\t\t}\n\t\t}\n\n\t\tself._data = data;\n\n\t\tresetYSeries(true);\n\n\t\tfire(\"setData\");\n\n\t\t// forces x axis tick values to re-generate when neither x scale nor y scale changes\n\t\t// in ordinal mode, scale range is by index, so will not change if new data has same length, but tick values are from data\n\t\tif (xScaleDistr == 2) {\n\t\t\tshouldConvergeSize = true;\n\n\t\t\t/* or somewhat cheaper, and uglier:\n\t\t\tif (ready) {\n\t\t\t\t// logic extracted from axesCalc()\n\t\t\t\tlet i = 0;\n\t\t\t\tlet axis = axes[i];\n\t\t\t\tlet _splits = axis._splits.map(i => data0[i]);\n\t\t\t\tlet [_incr, _space] = axis._found;\n\t\t\t\tlet incr = data0[_splits[1]] - data0[_splits[0]];\n\t\t\t\taxis._values = axis.values(self, axis.filter(self, _splits, i, _space, incr), i, _space, incr);\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tif (_resetScales !== false) {\n\t\t\tlet xsc = scaleX;\n\n\t\t\tif (xsc.auto(self, viaAutoScaleX))\n\t\t\t\tautoScaleX();\n\t\t\telse\n\t\t\t\t_setScale(xScaleKey, xsc.min, xsc.max);\n\n\t\t\tshouldSetCursor = cursor.left >= 0;\n\t\t\tshouldSetLegend = true;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tself.setData = setData;\n\n\tfunction autoScaleX() {\n\t\tviaAutoScaleX = true;\n\n\t\tlet _min, _max;\n\n\t\tif (mode == 1) {\n\t\t\tif (dataLen > 0) {\n\t\t\t\ti0 = idxs[0] = 0;\n\t\t\t\ti1 = idxs[1] = dataLen - 1;\n\n\t\t\t\t_min = data[0][i0];\n\t\t\t\t_max = data[0][i1];\n\n\t\t\t\tif (xScaleDistr == 2) {\n\t\t\t\t\t_min = i0;\n\t\t\t\t\t_max = i1;\n\t\t\t\t}\n\t\t\t\telse if (dataLen == 1) {\n\t\t\t\t\tif (xScaleDistr == 3)\n\t\t\t\t\t\t[_min, _max] = rangeLog(_min, _min, scaleX.log, false);\n\t\t\t\t\telse if (xScaleDistr == 4)\n\t\t\t\t\t\t[_min, _max] = rangeAsinh(_min, _min, scaleX.log, false);\n\t\t\t\t\telse if (scaleX.time)\n\t\t\t\t\t\t_max = _min + round(86400 / ms);\n\t\t\t\t\telse\n\t\t\t\t\t\t[_min, _max] = rangeNum(_min, _max, rangePad, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ti0 = idxs[0] = _min = null;\n\t\t\t\ti1 = idxs[1] = _max = null;\n\t\t\t}\n\t\t}\n\n\t\t_setScale(xScaleKey, _min, _max);\n\t}\n\n\tlet ctxStroke, ctxFill, ctxWidth, ctxDash, ctxJoin, ctxCap, ctxFont, ctxAlign, ctxBaseline;\n\tlet ctxAlpha;\n\n\tfunction setCtxStyle(stroke, width, dash, cap, fill, join) {\n\t\tstroke ??= transparent;\n\t\tdash   ??= EMPTY_ARR;\n\t\tcap    ??= \"butt\"; // (\u203F|\u203F)\n\t\tfill   ??= transparent;\n\t\tjoin   ??= \"round\";\n\n\t\tif (stroke != ctxStroke)\n\t\t\tctx.strokeStyle = ctxStroke = stroke;\n\t\tif (fill != ctxFill)\n\t\t\tctx.fillStyle = ctxFill = fill;\n\t\tif (width != ctxWidth)\n\t\t\tctx.lineWidth = ctxWidth = width;\n\t\tif (join != ctxJoin)\n\t\t\tctx.lineJoin = ctxJoin = join;\n\t\tif (cap != ctxCap)\n\t\t\tctx.lineCap = ctxCap = cap;\n\t\tif (dash != ctxDash)\n\t\t\tctx.setLineDash(ctxDash = dash);\n\t}\n\n\tfunction setFontStyle(font, fill, align, baseline) {\n\t\tif (fill != ctxFill)\n\t\t\tctx.fillStyle = ctxFill = fill;\n\t\tif (font != ctxFont)\n\t\t\tctx.font = ctxFont = font;\n\t\tif (align != ctxAlign)\n\t\t\tctx.textAlign = ctxAlign = align;\n\t\tif (baseline != ctxBaseline)\n\t\t\tctx.textBaseline = ctxBaseline = baseline;\n\t}\n\n\tfunction accScale(wsc, psc, facet, data, sorted = 0) {\n\t\tif (data.length > 0 && wsc.auto(self, viaAutoScaleX) && (psc == null || psc.min == null)) {\n\t\t\tlet _i0 = ifNull(i0, 0);\n\t\t\tlet _i1 = ifNull(i1, data.length - 1);\n\n\t\t\t// only run getMinMax() for invalidated series data, else reuse\n\t\t\tlet minMax = facet.min == null ? (wsc.distr == 3 ? getMinMaxLog(data, _i0, _i1) : getMinMax(data, _i0, _i1, sorted)) : [facet.min, facet.max];\n\n\t\t\t// initial min/max\n\t\t\twsc.min = min(wsc.min, facet.min = minMax[0]);\n\t\t\twsc.max = max(wsc.max, facet.max = minMax[1]);\n\t\t}\n\t}\n\n\tfunction setScales() {\n\t//\tlog(\"setScales()\", arguments);\n\n\t\t// wip scales\n\t\tlet wipScales = copy(scales, fastIsObj);\n\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\t\t\tlet psc = pendScales[k];\n\n\t\t\tif (psc != null && psc.min != null) {\n\t\t\t\tassign(wsc, psc);\n\n\t\t\t\t// explicitly setting the x-scale invalidates everything (acts as redraw)\n\t\t\t\tif (k == xScaleKey)\n\t\t\t\t\tresetYSeries(true);\n\t\t\t}\n\t\t\telse if (k != xScaleKey || mode == 2) {\n\t\t\t\tif (dataLen == 0 && wsc.from == null) {\n\t\t\t\t\tlet minMax = wsc.range(self, null, null, k);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twsc.min = inf;\n\t\t\t\t\twsc.max = -inf;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataLen > 0) {\n\t\t\t// pre-range y-scales from y series' data values\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (mode == 1) {\n\t\t\t\t\tlet k = s.scale;\n\t\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\t\tif (i == 0) {\n\t\t\t\t\t\tlet minMax = wsc.range(self, wsc.min, wsc.max, k);\n\n\t\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\t\twsc.max = minMax[1];\n\n\t\t\t\t\t\ti0 = closestIdx(wsc.min, data[0]);\n\t\t\t\t\t\ti1 = closestIdx(wsc.max, data[0]);\n\n\t\t\t\t\t\t// don't try to contract same or adjacent idxs\n\t\t\t\t\t\tif (i1 - i0 > 1) {\n\t\t\t\t\t\t\t// closest indices can be outside of view\n\t\t\t\t\t\t\tif (data[0][i0] < wsc.min)\n\t\t\t\t\t\t\t\ti0++;\n\t\t\t\t\t\t\tif (data[0][i1] > wsc.max)\n\t\t\t\t\t\t\t\ti1--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ts.min = data0[i0];\n\t\t\t\t\t\ts.max = data0[i1];\n\t\t\t\t\t}\n\t\t\t\t\telse if (s.show && s.auto)\n\t\t\t\t\t\taccScale(wsc, psc, s, data[i], s.sorted);\n\n\t\t\t\t\ts.idxs[0] = i0;\n\t\t\t\t\ts.idxs[1] = i1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tif (s.show && s.auto) {\n\t\t\t\t\t\t\t// TODO: only handles, assumes and requires facets[0] / 'x' scale, and facets[1] / 'y' scale\n\t\t\t\t\t\t\tlet [ xFacet, yFacet ] = s.facets;\n\t\t\t\t\t\t\tlet xScaleKey = xFacet.scale;\n\t\t\t\t\t\t\tlet yScaleKey = yFacet.scale;\n\t\t\t\t\t\t\tlet [ xData, yData ] = data[i];\n\n\t\t\t\t\t\t\taccScale(wipScales[xScaleKey], pendScales[xScaleKey], xFacet, xData, xFacet.sorted);\n\t\t\t\t\t\t\taccScale(wipScales[yScaleKey], pendScales[yScaleKey], yFacet, yData, yFacet.sorted);\n\n\t\t\t\t\t\t\t// temp\n\t\t\t\t\t\t\ts.min = yFacet.min;\n\t\t\t\t\t\t\ts.max = yFacet.max;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// range independent scales\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\tif (wsc.from == null && (psc == null || psc.min == null)) {\n\t\t\t\t\tlet minMax = wsc.range(\n\t\t\t\t\t\tself,\n\t\t\t\t\t\twsc.min ==  inf ? null : wsc.min,\n\t\t\t\t\t\twsc.max == -inf ? null : wsc.max,\n\t\t\t\t\t\tk\n\t\t\t\t\t);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// range dependent scales\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\n\t\t\tif (wsc.from != null) {\n\t\t\t\tlet base = wipScales[wsc.from];\n\n\t\t\t\tif (base.min == null)\n\t\t\t\t\twsc.min = wsc.max = null;\n\t\t\t\telse {\n\t\t\t\t\tlet minMax = wsc.range(self, base.min, base.max, k);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet changed = {};\n\t\tlet anyChanged = false;\n\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\t\t\tlet sc = scales[k];\n\n\t\t\tif (sc.min != wsc.min || sc.max != wsc.max) {\n\t\t\t\tsc.min = wsc.min;\n\t\t\t\tsc.max = wsc.max;\n\n\t\t\t\tlet distr = sc.distr;\n\n\t\t\t\tsc._min = distr == 3 ? log10(sc.min) : distr == 4 ? asinh(sc.min, sc.asinh) : sc.min;\n\t\t\t\tsc._max = distr == 3 ? log10(sc.max) : distr == 4 ? asinh(sc.max, sc.asinh) : sc.max;\n\n\t\t\t\tchanged[k] = anyChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (anyChanged) {\n\t\t\t// invalidate paths of all series on changed scales\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (mode == 2) {\n\t\t\t\t\tif (i > 0 && changed.y)\n\t\t\t\t\t\ts._paths = null;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (changed[s.scale])\n\t\t\t\t\t\ts._paths = null;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (let k in changed) {\n\t\t\t\tshouldConvergeSize = true;\n\t\t\t\tfire(\"setScale\", k);\n\t\t\t}\n\n\t\t\tif (cursor.show && cursor.left >= 0)\n\t\t\t\tshouldSetCursor = shouldSetLegend = true;\n\t\t}\n\n\t\tfor (let k in pendScales)\n\t\t\tpendScales[k] = null;\n\t}\n\n\t// grabs the nearest indices with y data outside of x-scale limits\n\tfunction getOuterIdxs(ydata) {\n\t\tlet _i0 = clamp(i0 - 1, 0, dataLen - 1);\n\t\tlet _i1 = clamp(i1 + 1, 0, dataLen - 1);\n\n\t\twhile (ydata[_i0] == null && _i0 > 0)\n\t\t\t_i0--;\n\n\t\twhile (ydata[_i1] == null && _i1 < dataLen - 1)\n\t\t\t_i1++;\n\n\t\treturn [_i0, _i1];\n\t}\n\n\tfunction drawSeries() {\n\t\tif (dataLen > 0) {\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (i > 0 && s.show && s._paths == null) {\n\t\t\t\t\tlet _idxs = mode == 2 ? [0, data[i][0].length - 1] : getOuterIdxs(data[i]);\n\t\t\t\t\ts._paths = s.paths(self, i, _idxs[0], _idxs[1]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tif (ctxAlpha != s.alpha)\n\t\t\t\t\t\tctx.globalAlpha = ctxAlpha = s.alpha;\n\n\t\t\t\t\t{\n\t\t\t\t\t\tcacheStrokeFill(i, false);\n\t\t\t\t\t\ts._paths && drawPath(i, false);\n\t\t\t\t\t}\n\n\t\t\t\t\t{\n\t\t\t\t\t\tcacheStrokeFill(i, true);\n\n\t\t\t\t\t\tlet _gaps = s._paths ? s._paths.gaps : null;\n\n\t\t\t\t\t\tlet show = s.points.show(self, i, i0, i1, _gaps);\n\t\t\t\t\t\tlet idxs = s.points.filter(self, i, show, _gaps);\n\n\t\t\t\t\t\tif (show || idxs) {\n\t\t\t\t\t\t\ts.points._paths = s.points.paths(self, i, i0, i1, idxs);\n\t\t\t\t\t\t\tdrawPath(i, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ctxAlpha != 1)\n\t\t\t\t\t\tctx.globalAlpha = ctxAlpha = 1;\n\n\t\t\t\t\tfire(\"drawSeries\", i);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction cacheStrokeFill(si, _points) {\n\t\tlet s = _points ? series[si].points : series[si];\n\n\t\ts._stroke = s.stroke(self, si);\n\t\ts._fill   = s.fill(self, si);\n\t}\n\n\tfunction drawPath(si, _points) {\n\t\tlet s = _points ? series[si].points : series[si];\n\n\t\tlet strokeStyle = s._stroke;\n\t\tlet fillStyle   = s._fill;\n\n\t\tlet { stroke, fill, clip: gapsClip, flags } = s._paths;\n\t\tlet boundsClip = null;\n\t\tlet width = roundDec(s.width * pxRatio, 3);\n\t\tlet offset = (width % 2) / 2;\n\n\t\tif (_points && fillStyle == null)\n\t\t\tfillStyle = width > 0 ? \"#fff\" : strokeStyle;\n\n\t\tlet _pxAlign = s.pxAlign == 1;\n\n\t\t_pxAlign && ctx.translate(offset, offset);\n\n\t\tif (!_points) {\n\t\t\tlet lft = plotLft,\n\t\t\t\ttop = plotTop,\n\t\t\t\twid = plotWid,\n\t\t\t\thgt = plotHgt;\n\n\t\t\tlet halfWid = width * pxRatio / 2;\n\n\t\t\tif (s.min == 0)\n\t\t\t\thgt += halfWid;\n\n\t\t\tif (s.max == 0) {\n\t\t\t\ttop -= halfWid;\n\t\t\t\thgt += halfWid;\n\t\t\t}\n\n\t\t\tboundsClip = new Path2D();\n\t\t\tboundsClip.rect(lft, top, wid, hgt);\n\t\t}\n\n\t\t// the points pathbuilder's gapsClip is its boundsClip, since points dont need gaps clipping, and bounds depend on point size\n\t\tif (_points)\n\t\t\tstrokeFill(strokeStyle, width, s.dash, s.cap, fillStyle, stroke, fill, flags, gapsClip);\n\t\telse\n\t\t\tfillStroke(si, strokeStyle, width, s.dash, s.cap, fillStyle, stroke, fill, flags, boundsClip, gapsClip);\n\n\t\t_pxAlign && ctx.translate(-offset, -offset);\n\t}\n\n\tfunction fillStroke(si, strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip) {\n\t\tlet didStrokeFill = false;\n\n\t\t// for all bands where this series is the top edge, create upwards clips using the bottom edges\n\t\t// and apply clips + fill with band fill or dfltFill\n\t\tbands.forEach((b, bi) => {\n\t\t\t// isUpperEdge?\n\t\t\tif (b.series[0] == si) {\n\t\t\t\tlet lowerEdge = series[b.series[1]];\n\t\t\t\tlet lowerData = data[b.series[1]];\n\n\t\t\t\tlet bandClip = (lowerEdge._paths || EMPTY_OBJ).band;\n\n\t\t\t\tif (isArr(bandClip))\n\t\t\t\t\tbandClip = b.dir == 1 ? bandClip[0] : bandClip[1];\n\n\t\t\t\tlet gapsClip2;\n\n\t\t\t\tlet _fillStyle = null;\n\n\t\t\t\t// hasLowerEdge?\n\t\t\t\tif (lowerEdge.show && bandClip && hasData(lowerData, i0, i1)) {\n\t\t\t\t\t_fillStyle = b.fill(self, bi) || fillStyle;\n\t\t\t\t\tgapsClip2 = lowerEdge._paths.clip;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbandClip = null;\n\n\t\t\t\tstrokeFill(strokeStyle, lineWidth, lineDash, lineCap, _fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip, gapsClip2, bandClip);\n\n\t\t\t\tdidStrokeFill = true;\n\t\t\t}\n\t\t});\n\n\t\tif (!didStrokeFill)\n\t\t\tstrokeFill(strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip);\n\t}\n\n\tconst CLIP_FILL_STROKE = BAND_CLIP_FILL | BAND_CLIP_STROKE;\n\n\tfunction strokeFill(strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip, gapsClip2, bandClip) {\n\t\tsetCtxStyle(strokeStyle, lineWidth, lineDash, lineCap, fillStyle);\n\n\t\tif (boundsClip || gapsClip || bandClip) {\n\t\t\tctx.save();\n\t\t\tboundsClip && ctx.clip(boundsClip);\n\t\t\tgapsClip && ctx.clip(gapsClip);\n\t\t}\n\n\t\tif (bandClip) {\n\t\t\tif ((flags & CLIP_FILL_STROKE) == CLIP_FILL_STROKE) {\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tgapsClip2 && ctx.clip(gapsClip2);\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t\telse if (flags & BAND_CLIP_STROKE) {\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t\telse if (flags & BAND_CLIP_FILL) {\n\t\t\t\tctx.save();\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tgapsClip2 && ctx.clip(gapsClip2);\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tctx.restore();\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdoFill(fillStyle, fillPath);\n\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t}\n\n\t\tif (boundsClip || gapsClip || bandClip)\n\t\t\tctx.restore();\n\t}\n\n\tfunction doStroke(strokeStyle, strokePath, lineWidth) {\n\t\tif (lineWidth > 0) {\n\t\t\tif (strokePath instanceof Map) {\n\t\t\t\tstrokePath.forEach((strokePath, strokeStyle) => {\n\t\t\t\t\tctx.strokeStyle = ctxStroke = strokeStyle;\n\t\t\t\t\tctx.stroke(strokePath);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t\tstrokePath != null && strokeStyle && ctx.stroke(strokePath);\n\t\t}\n\t}\n\n\tfunction doFill(fillStyle, fillPath) {\n\t\tif (fillPath instanceof Map) {\n\t\t\tfillPath.forEach((fillPath, fillStyle) => {\n\t\t\t\tctx.fillStyle = ctxFill = fillStyle;\n\t\t\t\tctx.fill(fillPath);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t\tfillPath != null && fillStyle && ctx.fill(fillPath);\n\t}\n\n\tfunction getIncrSpace(axisIdx, min, max, fullDim) {\n\t\tlet axis = axes[axisIdx];\n\n\t\tlet incrSpace;\n\n\t\tif (fullDim <= 0)\n\t\t\tincrSpace = [0, 0];\n\t\telse {\n\t\t\tlet minSpace = axis._space = axis.space(self, axisIdx, min, max, fullDim);\n\t\t\tlet incrs    = axis._incrs = axis.incrs(self, axisIdx, min, max, fullDim, minSpace);\n\t\t\tincrSpace    = findIncr(min, max, incrs, fullDim, minSpace);\n\t\t}\n\n\t\treturn (axis._found = incrSpace);\n\t}\n\n\tfunction drawOrthoLines(offs, filts, ori, side, pos0, len, width, stroke, dash, cap) {\n\t\tlet offset = (width % 2) / 2;\n\n\t\tpxAlign == 1 && ctx.translate(offset, offset);\n\n\t\tsetCtxStyle(stroke, width, dash, cap, stroke);\n\n\t\tctx.beginPath();\n\n\t\tlet x0, y0, x1, y1, pos1 = pos0 + (side == 0 || side == 3 ? -len : len);\n\n\t\tif (ori == 0) {\n\t\t\ty0 = pos0;\n\t\t\ty1 = pos1;\n\t\t}\n\t\telse {\n\t\t\tx0 = pos0;\n\t\t\tx1 = pos1;\n\t\t}\n\n\t\tfor (let i = 0; i < offs.length; i++) {\n\t\t\tif (filts[i] != null) {\n\t\t\t\tif (ori == 0)\n\t\t\t\t\tx0 = x1 = offs[i];\n\t\t\t\telse\n\t\t\t\t\ty0 = y1 = offs[i];\n\n\t\t\t\tctx.moveTo(x0, y0);\n\t\t\t\tctx.lineTo(x1, y1);\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\n\t\tpxAlign == 1 && ctx.translate(-offset, -offset);\n\t}\n\n\tfunction axesCalc(cycleNum) {\n\t//\tlog(\"axesCalc()\", arguments);\n\n\t\tlet converged = true;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (!axis.show)\n\t\t\t\treturn;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\tif (scale.min == null) {\n\t\t\t\tif (axis._show) {\n\t\t\t\t\tconverged = false;\n\t\t\t\t\taxis._show = false;\n\t\t\t\t\tresetYSeries(false);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!axis._show) {\n\t\t\t\t\tconverged = false;\n\t\t\t\t\taxis._show = true;\n\t\t\t\t\tresetYSeries(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet {min, max} = scale;\t\t// \t\t// should this toggle them ._show = false\n\n\t\t\tlet [_incr, _space] = getIncrSpace(i, min, max, ori == 0 ? plotWidCss : plotHgtCss);\n\n\t\t\tif (_space == 0)\n\t\t\t\treturn;\n\n\t\t\t// if we're using index positions, force first tick to match passed index\n\t\t\tlet forceMin = scale.distr == 2;\n\n\t\t\tlet _splits = axis._splits = axis.splits(self, i, min, max, _incr, _space, forceMin);\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet splits = scale.distr == 2 ? _splits.map(i => data0[i]) : _splits;\n\t\t\tlet incr   = scale.distr == 2 ? data0[_splits[1]] - data0[_splits[0]] : _incr;\n\n\t\t\tlet values = axis._values = axis.values(self, axis.filter(self, splits, i, _space, incr), i, _space, incr);\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\taxis._rotate = side == 2 ? axis.rotate(self, values, i, _space) : 0;\n\n\t\t\tlet oldSize = axis._size;\n\n\t\t\taxis._size = ceil(axis.size(self, values, i, cycleNum));\n\n\t\t\tif (oldSize != null && axis._size != oldSize)\t\t\t// ready && ?\n\t\t\t\tconverged = false;\n\t\t});\n\n\t\treturn converged;\n\t}\n\n\tfunction paddingCalc(cycleNum) {\n\t\tlet converged = true;\n\n\t\tpadding.forEach((p, i) => {\n\t\t\tlet _p = p(self, i, sidesWithAxes, cycleNum);\n\n\t\t\tif (_p != _padding[i])\n\t\t\t\tconverged = false;\n\n\t\t\t_padding[i] = _p;\n\t\t});\n\n\t\treturn converged;\n\t}\n\n\tfunction drawAxesGrid() {\n\t\tfor (let i = 0; i < axes.length; i++) {\n\t\t\tlet axis = axes[i];\n\n\t\t\tif (!axis.show || !axis._show)\n\t\t\t\tcontinue;\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet x, y;\n\n\t\t\tlet fillStyle = axis.stroke(self, i);\n\n\t\t\tlet shiftDir = side == 0 || side == 3 ? -1 : 1;\n\n\t\t\t// axis label\n\t\t\tif (axis.label) {\n\t\t\t\tlet shiftAmt = axis.labelGap * shiftDir;\n\t\t\t\tlet baseLpos = round((axis._lpos + shiftAmt) * pxRatio);\n\n\t\t\t\tsetFontStyle(axis.labelFont[0], fillStyle, \"center\", side == 2 ? TOP : BOTTOM);\n\n\t\t\t\tctx.save();\n\n\t\t\t\tif (ori == 1) {\n\t\t\t\t\tx = y = 0;\n\n\t\t\t\t\tctx.translate(\n\t\t\t\t\t\tbaseLpos,\n\t\t\t\t\t\tround(plotTop + plotHgt / 2),\n\t\t\t\t\t);\n\t\t\t\t\tctx.rotate((side == 3 ? -PI : PI) / 2);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = round(plotLft + plotWid / 2);\n\t\t\t\t\ty = baseLpos;\n\t\t\t\t}\n\n\t\t\t\tctx.fillText(axis.label, x, y);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\tlet [_incr, _space] = axis._found;\n\n\t\t\tif (_space == 0)\n\t\t\t\tcontinue;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\tlet plotDim = ori == 0 ? plotWid : plotHgt;\n\t\t\tlet plotOff = ori == 0 ? plotLft : plotTop;\n\n\t\t\tlet axisGap = round(axis.gap * pxRatio);\n\n\t\t\tlet _splits = axis._splits;\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet splits = scale.distr == 2 ? _splits.map(i => data0[i]) : _splits;\n\t\t\tlet incr   = scale.distr == 2 ? data0[_splits[1]] - data0[_splits[0]] : _incr;\n\n\t\t\tlet ticks = axis.ticks;\n\t\t\tlet border = axis.border;\n\t\t\tlet tickSize = ticks.show ? round(ticks.size * pxRatio) : 0;\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\tlet angle = axis._rotate * -PI/180;\n\n\t\t\tlet basePos  = pxRound(axis._pos * pxRatio);\n\t\t\tlet shiftAmt = (tickSize + axisGap) * shiftDir;\n\t\t\tlet finalPos = basePos + shiftAmt;\n\t\t\t    y        = ori == 0 ? finalPos : 0;\n\t\t\t    x        = ori == 1 ? finalPos : 0;\n\n\t\t\tlet font         = axis.font[0];\n\t\t\tlet textAlign    = axis.align == 1 ? LEFT :\n\t\t\t                   axis.align == 2 ? RIGHT :\n\t\t\t                   angle > 0 ? LEFT :\n\t\t\t                   angle < 0 ? RIGHT :\n\t\t\t                   ori == 0 ? \"center\" : side == 3 ? RIGHT : LEFT;\n\t\t\tlet textBaseline = angle ||\n\t\t\t                   ori == 1 ? \"middle\" : side == 2 ? TOP   : BOTTOM;\n\n\t\t\tsetFontStyle(font, fillStyle, textAlign, textBaseline);\n\n\t\t\tlet lineHeight = axis.font[1] * lineMult;\n\n\t\t\tlet canOffs = _splits.map(val => pxRound(getPos(val, scale, plotDim, plotOff)));\n\n\t\t\tlet _values = axis._values;\n\n\t\t\tfor (let i = 0; i < _values.length; i++) {\n\t\t\t\tlet val = _values[i];\n\n\t\t\t\tif (val != null) {\n\t\t\t\t\tif (ori == 0)\n\t\t\t\t\t\tx = canOffs[i];\n\t\t\t\t\telse\n\t\t\t\t\t\ty = canOffs[i];\n\n\t\t\t\t\tval = \"\" + val;\n\n\t\t\t\t\tlet _parts = val.indexOf(\"\\n\") == -1 ? [val] : val.split(/\\n/gm);\n\n\t\t\t\t\tfor (let j = 0; j < _parts.length; j++) {\n\t\t\t\t\t\tlet text = _parts[j];\n\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(x, y + j * lineHeight); // can this be replaced with position math?\n\t\t\t\t\t\t\tctx.rotate(angle); // can this be done once?\n\t\t\t\t\t\t\tctx.fillText(text, 0, 0);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tctx.fillText(text, x, y + j * lineHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ticks\n\t\t\tif (ticks.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tticks.filter(self, splits, i, _space, incr),\n\t\t\t\t\tori,\n\t\t\t\t\tside,\n\t\t\t\t\tbasePos,\n\t\t\t\t\ttickSize,\n\t\t\t\t\troundDec(ticks.width * pxRatio, 3),\n\t\t\t\t\tticks.stroke(self, i),\n\t\t\t\t\tticks.dash,\n\t\t\t\t\tticks.cap,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// grid\n\t\t\tlet grid = axis.grid;\n\n\t\t\tif (grid.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tgrid.filter(self, splits, i, _space, incr),\n\t\t\t\t\tori,\n\t\t\t\t\tori == 0 ? 2 : 1,\n\t\t\t\t\tori == 0 ? plotTop : plotLft,\n\t\t\t\t\tori == 0 ? plotHgt : plotWid,\n\t\t\t\t\troundDec(grid.width * pxRatio, 3),\n\t\t\t\t\tgrid.stroke(self, i),\n\t\t\t\t\tgrid.dash,\n\t\t\t\t\tgrid.cap,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (border.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\t[basePos],\n\t\t\t\t\t[1],\n\t\t\t\t\tori == 0 ? 1 : 0,\n\t\t\t\t\tori == 0 ? 1 : 2,\n\t\t\t\t\tori == 1 ? plotTop : plotLft,\n\t\t\t\t\tori == 1 ? plotHgt : plotWid,\n\t\t\t\t\troundDec(border.width * pxRatio, 3),\n\t\t\t\t\tborder.stroke(self, i),\n\t\t\t\t\tborder.dash,\n\t\t\t\t\tborder.cap,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfire(\"drawAxes\");\n\t}\n\n\tfunction resetYSeries(minMax) {\n\t//\tlog(\"resetYSeries()\", arguments);\n\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\ts._paths = null;\n\n\t\t\t\tif (minMax) {\n\t\t\t\t\tif (mode == 1) {\n\t\t\t\t\t\ts.min = null;\n\t\t\t\t\t\ts.max = null;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ts.facets.forEach(f => {\n\t\t\t\t\t\t\tf.min = null;\n\t\t\t\t\t\t\tf.max = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tlet queuedCommit = false;\n\n\tfunction commit() {\n\t\tif (!queuedCommit) {\n\t\t\tmicroTask(_commit);\n\t\t\tqueuedCommit = true;\n\t\t}\n\t}\n\n\tfunction _commit() {\n\t//\tlog(\"_commit()\", arguments);\n\n\t\tif (shouldSetScales) {\n\t\t\tsetScales();\n\t\t\tshouldSetScales = false;\n\t\t}\n\n\t\tif (shouldConvergeSize) {\n\t\t\tconvergeSize();\n\t\t\tshouldConvergeSize = false;\n\t\t}\n\n\t\tif (shouldSetSize) {\n\t\t\tsetStylePx(under, LEFT,   plotLftCss);\n\t\t\tsetStylePx(under, TOP,    plotTopCss);\n\t\t\tsetStylePx(under, WIDTH,  plotWidCss);\n\t\t\tsetStylePx(under, HEIGHT, plotHgtCss);\n\n\t\t\tsetStylePx(over, LEFT,    plotLftCss);\n\t\t\tsetStylePx(over, TOP,     plotTopCss);\n\t\t\tsetStylePx(over, WIDTH,   plotWidCss);\n\t\t\tsetStylePx(over, HEIGHT,  plotHgtCss);\n\n\t\t\tsetStylePx(wrap, WIDTH,   fullWidCss);\n\t\t\tsetStylePx(wrap, HEIGHT,  fullHgtCss);\n\n\t\t\t// NOTE: mutating this during print preview in Chrome forces transparent\n\t\t\t// canvas pixels to white, even when followed up with clearRect() below\n\t\t\tcan.width  = round(fullWidCss * pxRatio);\n\t\t\tcan.height = round(fullHgtCss * pxRatio);\n\n\t\t\taxes.forEach(({ _el, _show, _size, _pos, side }) => {\n\t\t\t\tif (_el != null) {\n\t\t\t\t\tif (_show) {\n\t\t\t\t\t\tlet posOffset = (side === 3 || side === 0 ? _size : 0);\n\t\t\t\t\t\tlet isVt = side % 2 == 1;\n\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"left\"   : \"top\",    _pos - posOffset);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"width\"  : \"height\", _size);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"top\"    : \"left\",   isVt ? plotTopCss : plotLftCss);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"height\" : \"width\",  isVt ? plotHgtCss : plotWidCss);\n\n\t\t\t\t\t\tremClass(_el, OFF);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\taddClass(_el, OFF);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// invalidate ctx style cache\n\t\t\tctxStroke = ctxFill = ctxWidth = ctxJoin = ctxCap = ctxFont = ctxAlign = ctxBaseline = ctxDash = null;\n\t\t\tctxAlpha = 1;\n\n\t\t\tsyncRect(true);\n\n\t\t\tfire(\"setSize\");\n\n\t\t\tshouldSetSize = false;\n\t\t}\n\n\t\tif (fullWidCss > 0 && fullHgtCss > 0) {\n\t\t\tctx.clearRect(0, 0, can.width, can.height);\n\t\t\tfire(\"drawClear\");\n\t\t\tdrawOrder.forEach(fn => fn());\n\t\t\tfire(\"draw\");\n\t\t}\n\n\t\tif (select.show && shouldSetSelect) {\n\t\t\tsetSelect(select);\n\t\t\tshouldSetSelect = false;\n\t\t}\n\n\t\tif (cursor.show && shouldSetCursor) {\n\t\t\tupdateCursor(null, true, false);\n\t\t\tshouldSetCursor = false;\n\t\t}\n\n\t\tif (legend.show && legend.live && shouldSetLegend) {\n\t\t\tsetLegend();\n\t\t\tshouldSetLegend = false; // redundant currently\n\t\t}\n\n\t\tif (!ready) {\n\t\t\tready = true;\n\t\t\tself.status = 1;\n\n\t\t\tfire(\"ready\");\n\t\t}\n\n\t\tviaAutoScaleX = false;\n\n\t\tqueuedCommit = false;\n\t}\n\n\tself.redraw = (rebuildPaths, recalcAxes) => {\n\t\tshouldConvergeSize = recalcAxes || false;\n\n\t\tif (rebuildPaths !== false)\n\t\t\t_setScale(xScaleKey, scaleX.min, scaleX.max);\n\t\telse\n\t\t\tcommit();\n\t};\n\n\t// redraw() => setScale('x', scales.x.min, scales.x.max);\n\n\t// explicit, never re-ranged (is this actually true? for x and y)\n\tfunction setScale(key, opts) {\n\t\tlet sc = scales[key];\n\n\t\tif (sc.from == null) {\n\t\t\tif (dataLen == 0) {\n\t\t\t\tlet minMax = sc.range(self, opts.min, opts.max, key);\n\t\t\t\topts.min = minMax[0];\n\t\t\t\topts.max = minMax[1];\n\t\t\t}\n\n\t\t\tif (opts.min > opts.max) {\n\t\t\t\tlet _min = opts.min;\n\t\t\t\topts.min = opts.max;\n\t\t\t\topts.max = _min;\n\t\t\t}\n\n\t\t\tif (dataLen > 1 && opts.min != null && opts.max != null && opts.max - opts.min < 1e-16)\n\t\t\t\treturn;\n\n\t\t\tif (key == xScaleKey) {\n\t\t\t\tif (sc.distr == 2 && dataLen > 0) {\n\t\t\t\t\topts.min = closestIdx(opts.min, data[0]);\n\t\t\t\t\topts.max = closestIdx(opts.max, data[0]);\n\n\t\t\t\t\tif (opts.min == opts.max)\n\t\t\t\t\t\topts.max++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t//\tlog(\"setScale()\", arguments);\n\n\t\t\tpendScales[key] = opts;\n\n\t\t\tshouldSetScales = true;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tself.setScale = setScale;\n\n//\tINTERACTION\n\n\tlet xCursor;\n\tlet yCursor;\n\tlet vCursor;\n\tlet hCursor;\n\n\t// starting position before cursor.move\n\tlet rawMouseLeft0;\n\tlet rawMouseTop0;\n\n\t// starting position\n\tlet mouseLeft0;\n\tlet mouseTop0;\n\n\t// current position before cursor.move\n\tlet rawMouseLeft1;\n\tlet rawMouseTop1;\n\n\t// current position\n\tlet mouseLeft1;\n\tlet mouseTop1;\n\n\tlet dragging = false;\n\n\tconst drag = cursor.drag;\n\n\tlet dragX = drag.x;\n\tlet dragY = drag.y;\n\n\tif (cursor.show) {\n\t\tif (cursor.x)\n\t\t\txCursor = placeDiv(CURSOR_X, over);\n\t\tif (cursor.y)\n\t\t\tyCursor = placeDiv(CURSOR_Y, over);\n\n\t\tif (scaleX.ori == 0) {\n\t\t\tvCursor = xCursor;\n\t\t\thCursor = yCursor;\n\t\t}\n\t\telse {\n\t\t\tvCursor = yCursor;\n\t\t\thCursor = xCursor;\n\t\t}\n\n\t\tmouseLeft1 = cursor.left;\n\t\tmouseTop1 = cursor.top;\n\t}\n\n\tconst select = self.select = assign({\n\t\tshow:   true,\n\t\tover:   true,\n\t\tleft:   0,\n\t\twidth:  0,\n\t\ttop:    0,\n\t\theight: 0,\n\t}, opts.select);\n\n\tconst selectDiv = select.show ? placeDiv(SELECT, select.over ? over : under) : null;\n\n\tfunction setSelect(opts, _fire) {\n\t\tif (select.show) {\n\t\t\tfor (let prop in opts) {\n\t\t\t\tselect[prop] = opts[prop];\n\n\t\t\t\tif (prop in _hideProps)\n\t\t\t\t\tsetStylePx(selectDiv, prop, opts[prop]);\n\t\t\t}\n\n\t\t\t_fire !== false && fire(\"setSelect\");\n\t\t}\n\t}\n\n\tself.setSelect = setSelect;\n\n\tfunction toggleDOM(i, onOff) {\n\t\tlet s = series[i];\n\t\tlet label = showLegend ? legendRows[i] : null;\n\n\t\tif (s.show)\n\t\t\tlabel && remClass(label, OFF);\n\t\telse {\n\t\t\tlabel && addClass(label, OFF);\n\t\t\tcursorPts.length > 1 && elTrans(cursorPts[i], -10, -10, plotWidCss, plotHgtCss);\n\t\t}\n\t}\n\n\tfunction _setScale(key, min, max) {\n\t\tsetScale(key, {min, max});\n\t}\n\n\tfunction setSeries(i, opts, _fire, _pub) {\n\t//\tlog(\"setSeries()\", arguments);\n\n\t\tif (opts.focus != null)\n\t\t\tsetFocus(i);\n\n\t\tif (opts.show != null) {\n\t\t\tseries.forEach((s, si) => {\n\t\t\t\tif (si > 0 && (i == si || i == null)) {\n\t\t\t\t\ts.show = opts.show;\n\t\t\t\t\ttoggleDOM(si, opts.show);\n\n\t\t\t\t\t_setScale(mode == 2 ? s.facets[1].scale : s.scale, null, null);\n\t\t\t\t\tcommit();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t_fire !== false && fire(\"setSeries\", i, opts);\n\n\t\t_pub && pubSync(\"setSeries\", self, i, opts);\n\t}\n\n\tself.setSeries = setSeries;\n\n\tfunction setBand(bi, opts) {\n\t\tassign(bands[bi], opts);\n\t}\n\n\tfunction addBand(opts, bi) {\n\t\topts.fill = fnOrSelf(opts.fill || null);\n\t\topts.dir = ifNull(opts.dir, -1);\n\t\tbi = bi == null ? bands.length : bi;\n\t\tbands.splice(bi, 0, opts);\n\t}\n\n\tfunction delBand(bi) {\n\t\tif (bi == null)\n\t\t\tbands.length = 0;\n\t\telse\n\t\t\tbands.splice(bi, 1);\n\t}\n\n\tself.addBand = addBand;\n\tself.setBand = setBand;\n\tself.delBand = delBand;\n\n\tfunction setAlpha(i, value) {\n\t\tseries[i].alpha = value;\n\n\t\tif (cursor.show && cursorPts[i])\n\t\t\tcursorPts[i].style.opacity = value;\n\n\t\tif (showLegend && legendRows[i])\n\t\t\tlegendRows[i].style.opacity = value;\n\t}\n\n\t// y-distance\n\tlet closestDist;\n\tlet closestSeries;\n\tlet focusedSeries;\n\tconst FOCUS_TRUE  = {focus: true};\n\n\tfunction setFocus(i) {\n\t\tif (i != focusedSeries) {\n\t\t//\tlog(\"setFocus()\", arguments);\n\n\t\t\tlet allFocused = i == null;\n\n\t\t\tlet _setAlpha = focus.alpha != 1;\n\n\t\t\tseries.forEach((s, i2) => {\n\t\t\t\tlet isFocused = allFocused || i2 == 0 || i2 == i;\n\t\t\t\ts._focus = allFocused ? null : isFocused;\n\t\t\t\t_setAlpha && setAlpha(i2, isFocused ? 1 : focus.alpha);\n\t\t\t});\n\n\t\t\tfocusedSeries = i;\n\t\t\t_setAlpha && commit();\n\t\t}\n\t}\n\n\tif (showLegend && cursorFocus) {\n\t\ton(mouseleave, legendEl, e => {\n\t\t\tif (cursor._lock)\n\t\t\t\treturn;\n\n\t\t\tif (focusedSeries != null)\n\t\t\t\tsetSeries(null, FOCUS_TRUE, true, syncOpts.setSeries);\n\t\t});\n\t}\n\n\tfunction posToVal(pos, scale, can) {\n\t\tlet sc = scales[scale];\n\n\t\tif (can)\n\t\t\tpos = pos / pxRatio - (sc.ori == 1 ? plotTopCss : plotLftCss);\n\n\t\tlet dim = plotWidCss;\n\n\t\tif (sc.ori == 1) {\n\t\t\tdim = plotHgtCss;\n\t\t\tpos = dim - pos;\n\t\t}\n\n\t\tif (sc.dir == -1)\n\t\t\tpos = dim - pos;\n\n\t\tlet _min = sc._min,\n\t\t\t_max = sc._max,\n\t\t\tpct = pos / dim;\n\n\t\tlet sv = _min + (_max - _min) * pct;\n\n\t\tlet distr = sc.distr;\n\n\t\treturn (\n\t\t\tdistr == 3 ? pow(10, sv) :\n\t\t\tdistr == 4 ? sinh(sv, sc.asinh) :\n\t\t\tsv\n\t\t);\n\t}\n\n\tfunction closestIdxFromXpos(pos, can) {\n\t\tlet v = posToVal(pos, xScaleKey, can);\n\t\treturn closestIdx(v, data[0], i0, i1);\n\t}\n\n\tself.valToIdx = val => closestIdx(val, data[0]);\n\tself.posToIdx = closestIdxFromXpos;\n\tself.posToVal = posToVal;\n\tself.valToPos = (val, scale, can) => (\n\t\tscales[scale].ori == 0 ?\n\t\tgetHPos(val, scales[scale],\n\t\t\tcan ? plotWid : plotWidCss,\n\t\t\tcan ? plotLft : 0,\n\t\t) :\n\t\tgetVPos(val, scales[scale],\n\t\t\tcan ? plotHgt : plotHgtCss,\n\t\t\tcan ? plotTop : 0,\n\t\t)\n\t);\n\n\t// defers calling expensive functions\n\tfunction batch(fn) {\n\t\tfn(self);\n\t\tcommit();\n\t}\n\n\tself.batch = batch;\n\n\t(self.setCursor = (opts, _fire, _pub) => {\n\t\tmouseLeft1 = opts.left;\n\t\tmouseTop1 = opts.top;\n\t//\tassign(cursor, opts);\n\t\tupdateCursor(null, _fire, _pub);\n\t});\n\n\tfunction setSelH(off, dim) {\n\t\tsetStylePx(selectDiv, LEFT,  select.left = off);\n\t\tsetStylePx(selectDiv, WIDTH, select.width = dim);\n\t}\n\n\tfunction setSelV(off, dim) {\n\t\tsetStylePx(selectDiv, TOP,    select.top = off);\n\t\tsetStylePx(selectDiv, HEIGHT, select.height = dim);\n\t}\n\n\tlet setSelX = scaleX.ori == 0 ? setSelH : setSelV;\n\tlet setSelY = scaleX.ori == 1 ? setSelH : setSelV;\n\n\tfunction syncLegend() {\n\t\tif (showLegend && legend.live) {\n\t\t\tfor (let i = mode == 2 ? 1 : 0; i < series.length; i++) {\n\t\t\t\tif (i == 0 && multiValLegend)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet vals = legend.values[i];\n\n\t\t\t\tlet j = 0;\n\n\t\t\t\tfor (let k in vals)\n\t\t\t\t\tlegendCells[i][j++].firstChild.nodeValue = vals[k];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setLegend(opts, _fire) {\n\t\tif (opts != null) {\n\t\t\tif (opts.idxs) {\n\t\t\t\topts.idxs.forEach((didx, sidx) => {\n\t\t\t\t\tactiveIdxs[sidx] = didx;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (!isUndef(opts.idx))\n\t\t\t\tactiveIdxs.fill(opts.idx);\n\n\t\t\tlegend.idx = activeIdxs[0];\n\t\t}\n\n\t\tfor (let sidx = 0; sidx < series.length; sidx++) {\n\t\t\tif (sidx > 0 || mode == 1 && !multiValLegend)\n\t\t\t\tsetLegendValues(sidx, activeIdxs[sidx]);\n\t\t}\n\n\t\tif (showLegend && legend.live)\n\t\t\tsyncLegend();\n\n\t\tshouldSetLegend = false;\n\n\t\t_fire !== false && fire(\"setLegend\");\n\t}\n\n\tself.setLegend = setLegend;\n\n\tfunction setLegendValues(sidx, idx) {\n\t\tlet s = series[sidx];\n\t\tlet src = sidx == 0 && xScaleDistr == 2 ? data0 : data[sidx];\n\t\tlet val;\n\n\t\tif (multiValLegend)\n\t\t\tval = s.values(self, sidx, idx) ?? NULL_LEGEND_VALUES;\n\t\telse {\n\t\t\tval = s.value(self, idx == null ? null : src[idx], sidx, idx);\n\t\t\tval = val == null ? NULL_LEGEND_VALUES : {_: val};\n\t\t}\n\n\t\tlegend.values[sidx] = val;\n\t}\n\n\tfunction updateCursor(src, _fire, _pub) {\n\t//\tts == null && log(\"updateCursor()\", arguments);\n\n\t\trawMouseLeft1 = mouseLeft1;\n\t\trawMouseTop1 = mouseTop1;\n\n\t\t[mouseLeft1, mouseTop1] = cursor.move(self, mouseLeft1, mouseTop1);\n\n\t\tif (cursor.show) {\n\t\t\tvCursor && elTrans(vCursor, round(mouseLeft1), 0, plotWidCss, plotHgtCss);\n\t\t\thCursor && elTrans(hCursor, 0, round(mouseTop1), plotWidCss, plotHgtCss);\n\t\t}\n\n\t\tlet idx;\n\n\t\t// when zooming to an x scale range between datapoints the binary search\n\t\t// for nearest min/max indices results in this condition. cheap hack :D\n\t\tlet noDataInRange = i0 > i1; // works for mode 1 only\n\n\t\tclosestDist = inf;\n\n\t\t// TODO: extract\n\t\tlet xDim = scaleX.ori == 0 ? plotWidCss : plotHgtCss;\n\t\tlet yDim = scaleX.ori == 1 ? plotWidCss : plotHgtCss;\n\n\t\t// if cursor hidden, hide points & clear legend vals\n\t\tif (mouseLeft1 < 0 || dataLen == 0 || noDataInRange) {\n\t\t\tidx = null;\n\n\t\t\tfor (let i = 0; i < series.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tcursorPts.length > 1 && elTrans(cursorPts[i], -10, -10, plotWidCss, plotHgtCss);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cursorFocus)\n\t\t\t\tsetSeries(null, FOCUS_TRUE, true, src == null && syncOpts.setSeries);\n\n\t\t\tif (legend.live) {\n\t\t\t\tactiveIdxs.fill(idx);\n\t\t\t\tshouldSetLegend = true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t//\tlet pctY = 1 - (y / rect.height);\n\n\t\t\tlet mouseXPos, valAtPosX, xPos;\n\n\t\t\tif (mode == 1) {\n\t\t\t\tmouseXPos = scaleX.ori == 0 ? mouseLeft1 : mouseTop1;\n\t\t\t\tvalAtPosX = posToVal(mouseXPos, xScaleKey);\n\t\t\t\tidx = closestIdx(valAtPosX, data[0], i0, i1);\n\t\t\t\txPos = valToPosX(data[0][idx], scaleX, xDim, 0);\n\t\t\t}\n\n\t\t\tfor (let i = mode == 2 ? 1 : 0; i < series.length; i++) {\n\t\t\t\tlet s = series[i];\n\n\t\t\t\tlet idx1  = activeIdxs[i];\n\t\t\t\tlet yVal1 = mode == 1 ? data[i][idx1] : data[i][1][idx1];\n\n\t\t\t\tlet idx2  = cursor.dataIdx(self, i, idx, valAtPosX);\n\t\t\t\tlet yVal2 = mode == 1 ? data[i][idx2] : data[i][1][idx2];\n\n\t\t\t\tshouldSetLegend = shouldSetLegend || yVal2 != yVal1 || idx2 != idx1;\n\n\t\t\t\tactiveIdxs[i] = idx2;\n\n\t\t\t\tlet xPos2 = incrRoundUp(idx2 == idx ? xPos : valToPosX(mode == 1 ? data[0][idx2] : data[i][0][idx2], scaleX, xDim, 0), 1);\n\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tlet yPos = yVal2 == null ? -10 : incrRoundUp(valToPosY(yVal2, mode == 1 ? scales[s.scale] : scales[s.facets[1].scale], yDim, 0), 1);\n\n\t\t\t\t\tif (cursorFocus && yPos >= 0 && mode == 1) {\n\t\t\t\t\t\tlet dist = abs(yPos - mouseTop1);\n\t\t\t\t\t\tlet bias = focus.bias;\n\n\t\t\t\t\t\tif (bias != 0) {\n\t\t\t\t\t\t\tlet mouseYPos = scaleX.ori == 1 ? mouseLeft1 : mouseTop1;\n\t\t\t\t\t\t\tlet mouseYVal = posToVal(mouseYPos, s.scale);\n\n\t\t\t\t\t\t\tlet seriesYValSign = yVal2     >= 0 ? 1 : -1;\n\t\t\t\t\t\t\tlet mouseYValSign  = mouseYVal >= 0 ? 1 : -1;\n\n\t\t\t\t\t\t\t// with a focus bias, we will never cross zero when prox testing\n\t\t\t\t\t\t\t// it's either closest towards zero, or closest away from zero\n\t\t\t\t\t\t\tif (mouseYValSign == seriesYValSign) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tdist < closestDist\n\t\t\t\t\t\t\t\t\t&& (\n\t\t\t\t\t\t\t\t\t\tmouseYValSign == 1 ?\n\t\t\t\t\t\t\t\t\t\t\t(bias == 1 ? yVal2 >= mouseYVal : yVal2 <= mouseYVal) :  // >= 0\n\t\t\t\t\t\t\t\t\t\t\t(bias == 1 ? yVal2 <= mouseYVal : yVal2 >= mouseYVal)    //  < 0\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tclosestDist = dist;\n\t\t\t\t\t\t\t\t\tclosestSeries = i;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (dist < closestDist) {\n\t\t\t\t\t\t\t\tclosestDist = dist;\n\t\t\t\t\t\t\t\tclosestSeries = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet hPos, vPos;\n\n\t\t\t\t\tif (scaleX.ori == 0) {\n\t\t\t\t\t\thPos = xPos2;\n\t\t\t\t\t\tvPos = yPos;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thPos = yPos;\n\t\t\t\t\t\tvPos = xPos2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (shouldSetLegend && cursorPts.length > 1) {\n\t\t\t\t\t\telColor(cursorPts[i], cursor.points.fill(self, i), cursor.points.stroke(self, i));\n\n\t\t\t\t\t\tlet ptWid, ptHgt, ptLft, ptTop,\n\t\t\t\t\t\t\tcentered = true,\n\t\t\t\t\t\t\tgetBBox = cursor.points.bbox;\n\n\t\t\t\t\t\tif (getBBox != null) {\n\t\t\t\t\t\t\tcentered = false;\n\n\t\t\t\t\t\t\tlet bbox = getBBox(self, i);\n\n\t\t\t\t\t\t\tptLft = bbox.left;\n\t\t\t\t\t\t\tptTop = bbox.top;\n\t\t\t\t\t\t\tptWid = bbox.width;\n\t\t\t\t\t\t\tptHgt = bbox.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tptLft = hPos;\n\t\t\t\t\t\t\tptTop = vPos;\n\t\t\t\t\t\t\tptWid = ptHgt = cursor.points.size(self, i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telSize(cursorPts[i], ptWid, ptHgt, centered);\n\t\t\t\t\t\telTrans(cursorPts[i], ptLft, ptTop, plotWidCss, plotHgtCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcursor.idx = idx;\n\t\tcursor.left = mouseLeft1;\n\t\tcursor.top = mouseTop1;\n\n\t\tif (shouldSetLegend) {\n\t\t\tlegend.idx = idx;\n\t\t\tsetLegend();\n\t\t}\n\n\t\t// nit: cursor.drag.setSelect is assumed always true\n\t\tif (select.show && dragging) {\n\t\t\tif (src != null) {\n\t\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\t\t\t\tlet [matchXKeys, matchYKeys] = syncOpts.match;\n\t\t\t\tlet [xKeySrc, yKeySrc] = src.cursor.sync.scales;\n\n\t\t\t\t// match the dragX/dragY implicitness/explicitness of src\n\t\t\t\tlet sdrag = src.cursor.drag;\n\t\t\t\tdragX = sdrag._x;\n\t\t\t\tdragY = sdrag._y;\n\n\t\t\t\tif (dragX || dragY) {\n\t\t\t\t\tlet { left, top, width, height } = src.select;\n\n\t\t\t\t\tlet sori = src.scales[xKey].ori;\n\t\t\t\t\tlet sPosToVal = src.posToVal;\n\n\t\t\t\t\tlet sOff, sDim, sc, a, b;\n\n\t\t\t\t\tlet matchingX = xKey != null && matchXKeys(xKey, xKeySrc);\n\t\t\t\t\tlet matchingY = yKey != null && matchYKeys(yKey, yKeySrc);\n\n\t\t\t\t\tif (matchingX && dragX) {\n\t\t\t\t\t\tif (sori == 0) {\n\t\t\t\t\t\t\tsOff = left;\n\t\t\t\t\t\t\tsDim = width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsOff = top;\n\t\t\t\t\t\t\tsDim = height;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsc = scales[xKey];\n\n\t\t\t\t\t\ta = valToPosX(sPosToVal(sOff, xKeySrc),        sc, xDim, 0);\n\t\t\t\t\t\tb = valToPosX(sPosToVal(sOff + sDim, xKeySrc), sc, xDim, 0);\n\n\t\t\t\t\t\tsetSelX(min(a,b), abs(b-a));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetSelX(0, xDim);\n\n\t\t\t\t\tif (matchingY && dragY) {\n\t\t\t\t\t\tif (sori == 1) {\n\t\t\t\t\t\t\tsOff = left;\n\t\t\t\t\t\t\tsDim = width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsOff = top;\n\t\t\t\t\t\t\tsDim = height;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsc = scales[yKey];\n\n\t\t\t\t\t\ta = valToPosY(sPosToVal(sOff, yKeySrc),        sc, yDim, 0);\n\t\t\t\t\t\tb = valToPosY(sPosToVal(sOff + sDim, yKeySrc), sc, yDim, 0);\n\n\t\t\t\t\t\tsetSelY(min(a,b), abs(b-a));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetSelY(0, yDim);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\thideSelect();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet rawDX = abs(rawMouseLeft1 - rawMouseLeft0);\n\t\t\t\tlet rawDY = abs(rawMouseTop1 - rawMouseTop0);\n\n\t\t\t\tif (scaleX.ori == 1) {\n\t\t\t\t\tlet _rawDX = rawDX;\n\t\t\t\t\trawDX = rawDY;\n\t\t\t\t\trawDY = _rawDX;\n\t\t\t\t}\n\n\t\t\t\tdragX = drag.x && rawDX >= drag.dist;\n\t\t\t\tdragY = drag.y && rawDY >= drag.dist;\n\n\t\t\t\tlet uni = drag.uni;\n\n\t\t\t\tif (uni != null) {\n\t\t\t\t\t// only calc drag status if they pass the dist thresh\n\t\t\t\t\tif (dragX && dragY) {\n\t\t\t\t\t\tdragX = rawDX >= uni;\n\t\t\t\t\t\tdragY = rawDY >= uni;\n\n\t\t\t\t\t\t// force unidirectionality when both are under uni limit\n\t\t\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\t\t\tif (rawDY > rawDX)\n\t\t\t\t\t\t\t\tdragY = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tdragX = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (drag.x && drag.y && (dragX || dragY))\n\t\t\t\t\t// if omni with no uni then both dragX / dragY should be true if either is true\n\t\t\t\t\tdragX = dragY = true;\n\n\t\t\t\tlet p0, p1;\n\n\t\t\t\tif (dragX) {\n\t\t\t\t\tif (scaleX.ori == 0) {\n\t\t\t\t\t\tp0 = mouseLeft0;\n\t\t\t\t\t\tp1 = mouseLeft1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp0 = mouseTop0;\n\t\t\t\t\t\tp1 = mouseTop1;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetSelX(min(p0, p1), abs(p1 - p0));\n\n\t\t\t\t\tif (!dragY)\n\t\t\t\t\t\tsetSelY(0, yDim);\n\t\t\t\t}\n\n\t\t\t\tif (dragY) {\n\t\t\t\t\tif (scaleX.ori == 1) {\n\t\t\t\t\t\tp0 = mouseLeft0;\n\t\t\t\t\t\tp1 = mouseLeft1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp0 = mouseTop0;\n\t\t\t\t\t\tp1 = mouseTop1;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetSelY(min(p0, p1), abs(p1 - p0));\n\n\t\t\t\t\tif (!dragX)\n\t\t\t\t\t\tsetSelX(0, xDim);\n\t\t\t\t}\n\n\t\t\t\t// the drag didn't pass the dist requirement\n\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\tsetSelX(0, 0);\n\t\t\t\t\tsetSelY(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdrag._x = dragX;\n\t\tdrag._y = dragY;\n\n\t\tif (src == null) {\n\t\t\tif (_pub) {\n\t\t\t\tif (syncKey != null) {\n\t\t\t\t\tlet [xSyncKey, ySyncKey] = syncOpts.scales;\n\n\t\t\t\t\tsyncOpts.values[0] = xSyncKey != null ? posToVal(scaleX.ori == 0 ? mouseLeft1 : mouseTop1, xSyncKey) : null;\n\t\t\t\t\tsyncOpts.values[1] = ySyncKey != null ? posToVal(scaleX.ori == 1 ? mouseLeft1 : mouseTop1, ySyncKey) : null;\n\t\t\t\t}\n\n\t\t\t\tpubSync(mousemove, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, idx);\n\t\t\t}\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tlet shouldPub = _pub && syncOpts.setSeries;\n\t\t\t\tlet p = focus.prox;\n\n\t\t\t\tif (focusedSeries == null) {\n\t\t\t\t\tif (closestDist <= p)\n\t\t\t\t\t\tsetSeries(closestSeries, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (closestDist > p)\n\t\t\t\t\t\tsetSeries(null, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t\telse if (closestSeries != focusedSeries)\n\t\t\t\t\t\tsetSeries(closestSeries, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_fire !== false && fire(\"setCursor\");\n\t}\n\n\tlet rect = null;\n\n\tfunction syncRect(defer) {\n\t\tif (defer === true)\n\t\t\trect = null;\n\t\telse {\n\t\t\trect = over.getBoundingClientRect();\n\t\t\tfire(\"syncRect\", rect);\n\t\t}\n\t}\n\n\tfunction mouseMove(e, src, _l, _t, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\t// Chrome on Windows has a bug which triggers a stray mousemove event after an initial mousedown event\n\t\t// when clicking into a plot as part of re-focusing the browser window.\n\t\t// we gotta ignore it to avoid triggering a phantom drag / setSelect\n\t\t// However, on touch-only devices Chrome-based browsers trigger a 0-distance mousemove before mousedown\n\t\t// so we don't ignore it when mousedown has set the dragging flag\n\t\tif (dragging && e != null && e.movementX == 0 && e.movementY == 0)\n\t\t\treturn;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, false, e != null);\n\n\t\tif (e != null)\n\t\t\tupdateCursor(null, true, true);\n\t\telse\n\t\t\tupdateCursor(src, true, false);\n\t}\n\n\tfunction cacheMouse(e, src, _l, _t, _w, _h, _i, initial, snap) {\n\t\tif (rect == null)\n\t\t\tsyncRect(false);\n\n\t\tif (e != null) {\n\t\t\t_l = e.clientX - rect.left;\n\t\t\t_t = e.clientY - rect.top;\n\t\t}\n\t\telse {\n\t\t\tif (_l < 0 || _t < 0) {\n\t\t\t\tmouseLeft1 = -10;\n\t\t\t\tmouseTop1 = -10;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\n\t\t\tlet syncOptsSrc = src.cursor.sync;\n\t\t\tlet [xValSrc, yValSrc] = syncOptsSrc.values;\n\t\t\tlet [xKeySrc, yKeySrc] = syncOptsSrc.scales;\n\t\t\tlet [matchXKeys, matchYKeys] = syncOpts.match;\n\n\t\t\tlet rotSrc = src.axes[0].side % 2 == 1;\n\n\t\t\tlet xDim = scaleX.ori == 0 ? plotWidCss : plotHgtCss,\n\t\t\t\tyDim = scaleX.ori == 1 ? plotWidCss : plotHgtCss,\n\t\t\t\t_xDim = rotSrc ? _h : _w,\n\t\t\t\t_yDim = rotSrc ? _w : _h,\n\t\t\t\t_xPos = rotSrc ? _t : _l,\n\t\t\t\t_yPos = rotSrc ? _l : _t;\n\n\t\t\tif (xKeySrc != null)\n\t\t\t\t_l = matchXKeys(xKey, xKeySrc) ? getPos(xValSrc, scales[xKey], xDim, 0) : -10;\n\t\t\telse\n\t\t\t\t_l = xDim * (_xPos/_xDim);\n\n\t\t\tif (yKeySrc != null)\n\t\t\t\t_t = matchYKeys(yKey, yKeySrc) ? getPos(yValSrc, scales[yKey], yDim, 0) : -10;\n\t\t\telse\n\t\t\t\t_t = yDim * (_yPos/_yDim);\n\n\t\t\tif (scaleX.ori == 1) {\n\t\t\t\tlet __l = _l;\n\t\t\t\t_l = _t;\n\t\t\t\t_t = __l;\n\t\t\t}\n\t\t}\n\n\t\tif (snap) {\n\t\t\tif (_l <= 1 || _l >= plotWidCss - 1)\n\t\t\t\t_l = incrRound(_l, plotWidCss);\n\n\t\t\tif (_t <= 1 || _t >= plotHgtCss - 1)\n\t\t\t\t_t = incrRound(_t, plotHgtCss);\n\t\t}\n\n\t\tif (initial) {\n\t\t\trawMouseLeft0 = _l;\n\t\t\trawMouseTop0 = _t;\n\n\t\t\t[mouseLeft0, mouseTop0] = cursor.move(self, _l, _t);\n\t\t}\n\t\telse {\n\t\t\tmouseLeft1 = _l;\n\t\t\tmouseTop1 = _t;\n\t\t}\n\t}\n\n\tconst _hideProps = {\n\t\twidth: 0,\n\t\theight: 0,\n\t\tleft: 0,\n\t\ttop: 0,\n\t};\n\n\tfunction hideSelect() {\n\t\tsetSelect(_hideProps, false);\n\t}\n\n\tfunction mouseDown(e, src, _l, _t, _w, _h, _i) {\n\t\tdragging = true;\n\t\tdragX = dragY = drag._x = drag._y = false;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, true, false);\n\n\t\tif (e != null) {\n\t\t\tonMouse(mouseup, doc, mouseUp);\n\t\t\tpubSync(mousedown, self, mouseLeft0, mouseTop0, plotWidCss, plotHgtCss, null);\n\t\t}\n\t}\n\n\tfunction mouseUp(e, src, _l, _t, _w, _h, _i) {\n\t\tdragging = drag._x = drag._y = false;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, false, true);\n\n\t\tlet { left, top, width, height } = select;\n\n\t\tlet hasSelect = width > 0 || height > 0;\n\n\t\thasSelect && setSelect(select);\n\n\t\tif (drag.setScale && hasSelect) {\n\t\t//\tif (syncKey != null) {\n\t\t//\t\tdragX = drag.x;\n\t\t//\t\tdragY = drag.y;\n\t\t//\t}\n\n\t\t\tlet xOff = left,\n\t\t\t\txDim = width,\n\t\t\t\tyOff = top,\n\t\t\t\tyDim = height;\n\n\t\t\tif (scaleX.ori == 1) {\n\t\t\t\txOff = top,\n\t\t\t\txDim = height,\n\t\t\t\tyOff = left,\n\t\t\t\tyDim = width;\n\t\t\t}\n\n\t\t\tif (dragX) {\n\t\t\t\t_setScale(xScaleKey,\n\t\t\t\t\tposToVal(xOff, xScaleKey),\n\t\t\t\t\tposToVal(xOff + xDim, xScaleKey)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (dragY) {\n\t\t\t\tfor (let k in scales) {\n\t\t\t\t\tlet sc = scales[k];\n\n\t\t\t\t\tif (k != xScaleKey && sc.from == null && sc.min != inf) {\n\t\t\t\t\t\t_setScale(k,\n\t\t\t\t\t\t\tposToVal(yOff + yDim, k),\n\t\t\t\t\t\t\tposToVal(yOff, k)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thideSelect();\n\t\t}\n\t\telse if (cursor.lock) {\n\t\t\tcursor._lock = !cursor._lock;\n\n\t\t\tif (!cursor._lock)\n\t\t\t\tupdateCursor(null, true, false);\n\t\t}\n\n\t\tif (e != null) {\n\t\t\toffMouse(mouseup, doc);\n\t\t\tpubSync(mouseup, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t\t}\n\t}\n\n\tfunction mouseLeave(e, src, _l, _t, _w, _h, _i) {\n\t\tif (!cursor._lock) {\n\t\t\tlet _dragging = dragging;\n\n\t\t\tif (dragging) {\n\t\t\t\t// handle case when mousemove aren't fired all the way to edges by browser\n\t\t\t\tlet snapH = true;\n\t\t\t\tlet snapV = true;\n\t\t\t\tlet snapProx = 10;\n\n\t\t\t\tlet dragH, dragV;\n\n\t\t\t\tif (scaleX.ori == 0) {\n\t\t\t\t\tdragH = dragX;\n\t\t\t\t\tdragV = dragY;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdragH = dragY;\n\t\t\t\t\tdragV = dragX;\n\t\t\t\t}\n\n\t\t\t\tif (dragH && dragV) {\n\t\t\t\t\t// maybe omni corner snap\n\t\t\t\t\tsnapH = mouseLeft1 <= snapProx || mouseLeft1 >= plotWidCss - snapProx;\n\t\t\t\t\tsnapV = mouseTop1  <= snapProx || mouseTop1  >= plotHgtCss - snapProx;\n\t\t\t\t}\n\n\t\t\t\tif (dragH && snapH)\n\t\t\t\t\tmouseLeft1 = mouseLeft1 < mouseLeft0 ? 0 : plotWidCss;\n\n\t\t\t\tif (dragV && snapV)\n\t\t\t\t\tmouseTop1 = mouseTop1 < mouseTop0 ? 0 : plotHgtCss;\n\n\t\t\t\tupdateCursor(null, true, true);\n\n\t\t\t\tdragging = false;\n\t\t\t}\n\n\t\t\tmouseLeft1 = -10;\n\t\t\tmouseTop1 = -10;\n\n\t\t\t// passing a non-null timestamp to force sync/mousemove event\n\t\t\tupdateCursor(null, true, true);\n\n\t\t\tif (_dragging)\n\t\t\t\tdragging = _dragging;\n\t\t}\n\t}\n\n\tfunction dblClick(e, src, _l, _t, _w, _h, _i) {\n\t\tautoScaleX();\n\n\t\thideSelect();\n\n\t\tif (e != null)\n\t\t\tpubSync(dblclick, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t}\n\n\tfunction syncPxRatio() {\n\t\taxes.forEach(syncFontSize);\n\t\t_setSize(self.width, self.height, true);\n\t}\n\n\ton(dppxchange, win, syncPxRatio);\n\n\t// internal pub/sub\n\tconst events = {};\n\n\tevents.mousedown = mouseDown;\n\tevents.mousemove = mouseMove;\n\tevents.mouseup = mouseUp;\n\tevents.dblclick = dblClick;\n\tevents[\"setSeries\"] = (e, src, idx, opts) => {\n\t\tsetSeries(idx, opts, true, false);\n\t};\n\n\tif (cursor.show) {\n\t\tonMouse(mousedown,  over, mouseDown);\n\t\tonMouse(mousemove,  over, mouseMove);\n\t\tonMouse(mouseenter, over, syncRect);\n\t\tonMouse(mouseleave, over, mouseLeave);\n\n\t\tonMouse(dblclick, over, dblClick);\n\n\t\tcursorPlots.add(self);\n\n\t\tself.syncRect = syncRect;\n\t}\n\n\t// external on/off\n\tconst hooks = self.hooks = opts.hooks || {};\n\n\tfunction fire(evName, a1, a2) {\n\t\tif (evName in hooks) {\n\t\t\thooks[evName].forEach(fn => {\n\t\t\t\tfn.call(null, self, a1, a2);\n\t\t\t});\n\t\t}\n\t}\n\n\t(opts.plugins || []).forEach(p => {\n\t\tfor (let evName in p.hooks)\n\t\t\thooks[evName] = (hooks[evName] || []).concat(p.hooks[evName]);\n\t});\n\n\tconst syncOpts = assign({\n\t\tkey: null,\n\t\tsetSeries: false,\n\t\tfilters: {\n\t\t\tpub: retTrue,\n\t\t\tsub: retTrue,\n\t\t},\n\t\tscales: [xScaleKey, series[1] ? series[1].scale : null],\n\t\tmatch: [retEq, retEq],\n\t\tvalues: [null, null],\n\t}, cursor.sync);\n\n\t(cursor.sync = syncOpts);\n\n\tconst syncKey = syncOpts.key;\n\n\tconst sync = _sync(syncKey);\n\n\tfunction pubSync(type, src, x, y, w, h, i) {\n\t\tif (syncOpts.filters.pub(type, src, x, y, w, h, i))\n\t\t\tsync.pub(type, src, x, y, w, h, i);\n\t}\n\n\tsync.sub(self);\n\n\tfunction pub(type, src, x, y, w, h, i) {\n\t\tif (syncOpts.filters.sub(type, src, x, y, w, h, i))\n\t\t\tevents[type](null, src, x, y, w, h, i);\n\t}\n\n\t(self.pub = pub);\n\n\tfunction destroy() {\n\t\tsync.unsub(self);\n\t\tcursorPlots.delete(self);\n\t\tmouseListeners.clear();\n\t\toff(dppxchange, win, syncPxRatio);\n\t\troot.remove();\n\t\tlegendEl?.remove(); // in case mounted outside of root\n\t\tfire(\"destroy\");\n\t}\n\n\tself.destroy = destroy;\n\n\tfunction _init() {\n\t\tfire(\"init\", opts, data);\n\n\t\tsetData(data || opts.data, false);\n\n\t\tif (pendScales[xScaleKey])\n\t\t\tsetScale(xScaleKey, pendScales[xScaleKey]);\n\t\telse\n\t\t\tautoScaleX();\n\n\t\tshouldSetSelect = select.show;\n\t\tshouldSetCursor = shouldSetLegend = true;\n\n\t\t_setSize(opts.width, opts.height);\n\t}\n\n\tseries.forEach(initSeries);\n\n\taxes.forEach(initAxis);\n\n\tif (then) {\n\t\tif (then instanceof HTMLElement) {\n\t\t\tthen.appendChild(root);\n\t\t\t_init();\n\t\t}\n\t\telse\n\t\t\tthen(self, _init);\n\t}\n\telse\n\t\t_init();\n\n\treturn self;\n}\n\nuPlot.assign = assign;\nuPlot.fmtNum = fmtNum;\nuPlot.rangeNum = rangeNum;\nuPlot.rangeLog = rangeLog;\nuPlot.rangeAsinh = rangeAsinh;\nuPlot.orient   = orient;\nuPlot.pxRatio = pxRatio;\n\n{\n\tuPlot.join = join;\n}\n\n{\n\tuPlot.fmtDate = fmtDate;\n\tuPlot.tzDate  = tzDate;\n}\n\n{\n\tuPlot.sync = _sync;\n}\n\n{\n\tuPlot.addGap = addGap;\n\tuPlot.clipGaps = clipGaps;\n\n\tlet paths = uPlot.paths = {\n\t\tpoints,\n\t};\n\n\t(paths.linear  = linear);\n\t(paths.stepped = stepped);\n\t(paths.bars    = bars);\n\t(paths.spline  = monotoneCubic);\n}\n\nexport { uPlot as default };\n", "import uPlot from 'uplot'\n\nlet chart = null;\n\nfunction paths(u, sidx, i0, i1) {\n  const s = u.series[sidx];\n  const xdata = u.data[0];\n  const ydata = u.data[sidx];\n  const scaleX = 'x';\n  const scaleY = s.scale;\n\n  const stroke = new Path2D();\n\n  const x_width = Math.abs((u.valToPos(xdata[0], scaleX, true) - u.valToPos(xdata[1], scaleX, true)) / 2);\n\n  stroke.moveTo(\n    Math.round(u.valToPos(xdata[0], scaleX, true)),\n    Math.round(u.valToPos(ydata[0], scaleY, true))\n  );\n\n  for (let i = i0; i < i1; i++) {\n    let x0 = Math.round(u.valToPos(xdata[i], scaleX, true));\n    let y0 = Math.round(u.valToPos(ydata[i], scaleY, true));\n    let x1 = Math.round(u.valToPos(xdata[i + 1], scaleX, true));\n    let y1 = Math.round(u.valToPos(ydata[i + 1], scaleY, true));\n\n    stroke.lineTo(x0 - x_width, y0);\n    stroke.lineTo(x1 - x_width, y0);\n\n    if (i == i1 - 1) {\n      stroke.lineTo(x1 - x_width, y1);\n      stroke.lineTo(x1, y1);\n    }\n  }\n\n  const fill = new Path2D(stroke);\n\n  let minY = Math.round(u.valToPos(u.scales[scaleY].min, scaleY, true));\n  let minX = Math.round(u.valToPos(u.scales[scaleX].min, scaleX, true));\n  let maxX = Math.round(u.valToPos(u.scales[scaleX].max, scaleX, true));\n\n  fill.lineTo(maxX, minY);\n  fill.lineTo(minX, minY);\n\n  return {\n    stroke,\n    fill,\n  };\n}\n\nfunction safe_to_fixed(number, decimals) {\n  return number && number.toFixed(decimals)\n}\n\nfunction make_opts(parent, scale) {\n  let rect = { width: parent.clientWidth, height: 600 };\n\n  let scaler = null;\n  if (scale == \"Linear\") {\n    scaler = (x) => x && x\n  } else if (scale == \"Log10\") {\n    scaler = (x) => x && Math.pow(10, x)\n  } else if (scale == \"Log2\") {\n    scaler = (x) => x && Math.pow(2, x)\n  }\n\n  return {\n    id: parent.id + \"-chart\",\n    width: rect.width,\n    height: rect.height,\n    labelSize: 10,\n    labelFont: \"bold 8px Arial\",\n    ticks: { show: false },\n    points: { show: false },\n    font: \"8px Arial\",\n    padding: [null, 30, null, 30],\n    series: [\n      { value: '{HH}:{mm}:{ss}' },\n      {\n        label: \"P99\",\n        stroke: \"rgb(155, 214, 206)\",\n        value: (self, rawValue) => safe_to_fixed(scaler(rawValue), 3) + \"ms\",\n        fill: \"rgb(155, 214, 206, 0.5 )\",\n        paths: paths,\n        scale: \"ms\"\n      },\n      {\n        label: \"P90\",\n        stroke: \"rgb(79, 169, 184)\",\n        value: (self, rawValue) => safe_to_fixed(scaler(rawValue), 3) + \"ms\",\n        fill: \"rgb(79, 169, 184, 0.5)\",\n        paths: paths,\n        scale: \"ms\"\n      },\n      {\n        label: \"P50\",\n        stroke: \"rgb(2, 88, 115)\",\n        value: (self, rawValue) => safe_to_fixed(scaler(rawValue), 3) + \"ms\",\n        fill: \"rgb(2, 88, 115, 0.5)\",\n        paths: paths,\n        scale: \"ms\"\n      },\n      {\n        label: \"count\",\n        stroke: \"rgb(30, 30, 30)\",\n        value: (self, rawValue) => scaler(rawValue) + \"cps\",\n        scale: \"calls\"\n      }\n    ],\n    axes: [\n      {\n        values: [\n          [1, \"{HH}:{mm}:{ss}\", null, null, null, null, null, null, 1],]\n      },\n      {\n        scale: \"ms\",\n        grid: { show: false },\n        values: (u, vals, space) => vals.map((val) => safe_to_fixed(scaler(val), 3) + \"ms\")\n      },\n      {\n        side: 1,\n        values: (u, vals, space) => vals.map((val) => safe_to_fixed(scaler(val), 1) + \" calls\"),\n        scale: \"calls\",\n        grid: { show: false },\n      },\n    ]\n  };\n}\n\nexport class HistoChart {\n  constructor(chartEl, data, scale) {\n    let opts = make_opts(chartEl, scale)\n    this.uplotChart = new uPlot(opts, data, chartEl);\n  }\n\n  updateData(quantile_data, scale) {\n    this.uplotChart.setData(quantile_data, scale)\n  }\n}\n\nlet scale = \"\";\n\nexport const ChartData = {\n  mounted() {\n    let chartEl = this.el.parentElement.querySelector('.chart');\n    scale = JSON.parse(chartEl.dataset.scale);\n    let quantile_data = JSON.parse(chartEl.dataset.quantile);\n    this.chart = new HistoChart(chartEl, quantile_data, scale);\n  },\n  updated() {\n    let chartEl = this.el.parentElement.querySelector('.chart');\n    let new_scale = JSON.parse(chartEl.dataset.scale);\n\n    if (scale == new_scale) {\n      let quantile_data = JSON.parse(chartEl.dataset.quantile);\n      chartEl.updateData(quantile_data, scale);\n    } else {\n      this.mounted();\n    }\n  }\n}"],
  "mappings": "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",
  "names": ["require_topbar_min", "__commonJSMin", "exports", "module", "window", "document", "repaint", "canvas", "options", "ctx", "stop", "lineGradient", "currentProgress", "showing", "progressTimerId", "fadeTimerId", "delayTimerId", "topbar", "opts", "key", "handler", "type", "elem", "loop", "to", "import_topbar", "pre", "UPLOT", "ORI_HZ", "ORI_VT", "TITLE", "WRAP", "UNDER", "OVER", "AXIS", "OFF", "SELECT", "CURSOR_X", "CURSOR_Y", "CURSOR_PT", "LEGEND", "LEGEND_LIVE", "LEGEND_INLINE", "LEGEND_THEAD", "LEGEND_SERIES", "LEGEND_MARKER", "LEGEND_LABEL", "LEGEND_VALUE", "WIDTH", "HEIGHT", "TOP", "BOTTOM", "LEFT", "RIGHT", "hexBlack", "transparent", "mousemove", "mousedown", "mouseup", "mouseenter", "mouseleave", "dblclick", "resize", "scroll", "change", "dppxchange", "LEGEND_DISP", "domEnv", "doc", "win", "nav", "pxRatio", "query", "setPxRatio", "_pxRatio", "off", "on", "addClass", "el", "c", "cl", "remClass", "setStylePx", "name", "value", "placeTag", "tag", "cls", "targ", "refEl", "placeDiv", "xformCache", "elTrans", "xPos", "yPos", "xMax", "yMax", "xform", "xformOld", "colorCache", "elColor", "background", "borderColor", "newColor", "oldColor", "sizeCache", "elSize", "newWid", "newHgt", "centered", "newSize", "oldSize", "evOpts", "evOpts2", "ev", "cb", "capt", "closestIdx", "num", "arr", "lo", "hi", "mid", "bitwise", "floor", "nonNullIdx", "data", "_i0", "_i1", "dir", "getMinMax", "sorted", "_min", "inf", "_max", "i", "min", "max", "getMinMaxLog", "rangeLog", "base", "fullMags", "minSign", "sign", "maxSign", "logFn", "log10", "log2", "growMinAbs", "ceil", "growMaxAbs", "minExp", "abs", "maxExp", "minIncr", "pow", "maxIncr", "roundDec", "incrRoundDn", "incrRoundUp", "rangeAsinh", "minMax", "rangePad", "autoRangePart", "_eqRangePart", "_eqRange", "rangeNum", "mult", "extra", "isObj", "_rangeNum", "ifNull", "lh", "rh", "hasData", "idx0", "idx1", "cfg", "cmin", "cmax", "padMin", "padMax", "hardMin", "hardMax", "softMin", "softMax", "softMinMode", "softMaxMode", "delta", "deltaMag", "scalarMax", "scalarMag", "scalarMagDelta", "nonZeroDelta", "mag", "_padMin", "_newMin", "_softMin", "minLim", "_padMax", "_newMax", "_softMax", "maxLim", "numFormatter", "fmtNum", "val", "M", "PI", "round", "sinh", "v", "linthresh", "asinh", "numIntDigits", "x", "clamp", "fnOrSelf", "noop", "retArg0", "_0", "retArg1", "_1", "retNull", "_", "retTrue", "retEq", "a", "b", "fixFloat", "incrRound", "incr", "dec", "isInt", "p", "fixedDec", "guessDec", "genIncrs", "mults", "incrs", "multDec", "exp", "expa", "_incr", "EMPTY_OBJ", "EMPTY_ARR", "nullNullTuple", "isArr", "isUndef", "isStr", "is", "fastIsObj", "TypedArray", "copy", "o", "_isObj", "out", "k", "assign", "args", "src", "key", "NULL_REMOVE", "NULL_RETAIN", "NULL_EXPAND", "nullExpand", "yVals", "nullIdxs", "alignedLen", "xi", "lastNullIdx", "nullIdx", "join", "tables", "nullModes", "xVals", "ti", "xs", "len", "xIdxs", "t", "si", "ys", "nullMode", "yVal", "alignedIdx", "microTask", "fn", "months", "days", "slice3", "str", "days3", "months3", "engNames", "zeroPad2", "int", "zeroPad3", "subs", "d", "names", "h", "fmtDate", "tpl", "parts", "R", "m", "localTz", "tzDate", "date", "tz", "date2", "onlyWhole", "allMults", "decIncrs", "oneIncrs", "wholeIncrs", "numIncrs", "NL", "yyyy", "NLyyyy", "md", "NLmd", "NLmdyy", "aa", "hmm", "hmmaa", "NLhmmaa", "ss", "genTimeStuffs", "ms", "s", "mo", "y", "timeIncrs", "_timeAxisStamps", "timeAxisSplits", "self", "axisIdx", "scaleMin", "scaleMax", "foundIncr", "foundSpace", "splits", "isYr", "isMo", "minDate", "minDateTs", "minMin", "mkDate", "minMinTs", "moIncr", "yrIncr", "split", "splitDate", "baseYear", "baseMonth", "next", "offs", "incr0", "tzOffset", "date0", "prevHour", "incrHours", "minSpace", "pctSpace", "expectedHour", "dstShift", "prevSplit", "timeIncrsMs", "_timeAxisStampsMs", "timeAxisSplitsMs", "timeIncrsS", "_timeAxisStampsS", "timeAxisSplitsS", "timeAxisStamps", "stampCfg", "timeAxisVals", "stamps", "prevYear", "prevMnth", "prevDate", "prevMins", "prevSecs", "newYear", "newMnth", "newDate", "newHour", "newMins", "newSecs", "stamp", "timeAxisVal", "dateTpl", "timeSeriesStamp", "_timeSeriesStamp", "timeSeriesVal", "seriesIdx", "dataIdx", "legendStroke", "legendFill", "legendOpts", "cursorPointShow", "pt", "size", "mar", "width", "cursorPointFill", "sp", "cursorPointStroke", "cursorPointSize", "cursorIdx", "moveTuple", "cursorMove", "mouseLeft1", "mouseTop1", "filtBtn0", "handle", "e", "passThru", "cursorOpts", "axisLines", "grid", "ticks", "border", "font", "labelFont", "lineMult", "xAxisOpts", "numSeriesLabel", "timeSeriesLabel", "xSeriesOpts", "numAxisVals", "numAxisSplits", "forceMin", "numDec", "logAxisSplits", "logBase", "asinhAxisSplits", "posSplits", "zero", "RE_ALL", "RE_12357", "RE_125", "RE_1", "log10AxisValsFilt", "axis", "scaleKey", "sc", "valToPos", "_10", "re", "numSeriesVal", "yAxisOpts", "ptDia", "dia", "seriesPointsShow", "scale", "idxs", "xData", "p0", "p1", "dim", "maxPts", "facet", "gaps", "nullGaps", "xySeriesOpts", "ySeriesOpts", "clampScale", "xScaleOpts", "yScaleOpts", "syncs", "_sync", "opts", "plot", "type", "w", "j", "BAND_CLIP_FILL", "BAND_CLIP_STROKE", "orient", "u", "mode", "series", "scales", "bbox", "dx", "dy", "sx", "sy", "l", "H", "V", "moveToH", "lineToH", "rectH", "arcH", "bezierCurveToH", "moveToV", "lineToV", "rectV", "arcV", "bezierCurveToV", "bandFillClipDirs", "fillDir", "clipDirs", "bands", "seriesFillTo", "dataMin", "dataMax", "bandFillDir", "clipBandLine", "strokePath", "clipDir", "dataX", "dataY", "scaleX", "scaleY", "valToPosX", "valToPosY", "xOff", "yOff", "xDim", "yDim", "pxRound", "lineTo", "frIdx", "toIdx", "x0", "y0", "x1", "yLimit", "clip", "clipGaps", "ori", "plotLft", "plotTop", "plotWid", "plotHgt", "rect", "prevGapEnd", "g", "addGap", "fromX", "toX", "prevGap", "findGaps", "pixelForX", "align", "fr", "to", "frPx", "toPx", "fri2", "toi2", "pxRoundGen", "pxAlign", "moveTo", "arcTo", "y1", "x2", "y2", "r", "endRad", "baseRad", "startAngle", "endAngle", "bp1x", "bp1y", "bp2x", "bp2y", "p2x", "p2y", "points", "filtIdxs", "arc", "rad", "fill", "lft", "top", "wid", "hgt", "drawPoint", "pi", "_drawAcc", "stroke", "accX", "minY", "maxY", "inY", "outY", "drawAccH", "drawAccV", "linear", "alignGaps", "pixelForY", "drawAcc", "_paths", "drawnAtX", "lftIdx", "rgtIdx", "lftX", "rgtX", "hasGap", "bandClipDir", "fillToVal", "fillToY", "stepped", "ascDesc", "extend", "left", "prevYPos", "firstXPos", "prevXPos", "firstXPosExt", "yVal1", "prevXPosExt", "fillTo", "halfStroke", "startsOffset", "endsOffset", "bars", "extraGap", "ro", "radiusFn", "gapFactor", "maxWidth", "minWidth", "disp", "_each", "dispFills", "dispStrokes", "valRadius", "baseRadius", "_dirX", "_dirY", "each", "y0Pos", "xShift", "barWid", "strokeWidth", "multiPath", "fillColors", "fillPaths", "strokeColors", "strokePaths", "color", "pct", "sizes", "colWid", "prevIdx", "minDelta", "gapWid", "band", "dataY0", "radVal", "radBase", "xVal", "btm", "barHgt", "rv", "rb", "splineInterp", "interp", "bezierCurveTo", "xCoords", "yCoords", "monotoneCubic", "_monotoneCubic", "n", "path", "ds", "dys", "dxs", "cursorPlots", "invalidateRects", "uPlot", "linearPath", "pointsPath", "setDefaults", "xo", "yo", "initY", "setDefault", "setDefaults2", "xyo", "snapNumX", "snapTimeX", "snapNumY", "snapLogY", "snapLogX", "snapAsinhY", "snapAsinhX", "findIncr", "minVal", "maxVal", "intDigits", "incrIdx", "pxRatioFont", "fontSize", "fontSizeCss", "syncFontSize", "f", "then", "getValPct", "getHPos", "getVPos", "getPos", "ready", "root", "title", "can", "ctx", "wrap", "mouseLeft0", "mouseTop0", "drag", "under", "over", "axes", "xScaleKey", "drawOrderMap", "drawAxesGrid", "drawSeries", "drawOrder", "initScale", "scaleOpts", "isTime", "rn", "rangeIsArr", "xScaleDistr", "pendScales", "_tzDate", "ts", "_fmtDate", "_timeAxisSplits", "_timeAxisVals", "_timeSeriesVal", "activeIdxs", "legend", "showLegend", "markers", "legendEl", "legendRows", "legendCells", "legendCols", "multiValLegend", "NULL_LEGEND_VALUES", "getMultiVals", "head", "son", "soff", "initLegendRow", "cells", "row", "label", "indic", "text", "onMouse", "cursor", "isolate", "setSeries", "syncOpts", "cursorFocus", "FOCUS_TRUE", "mouseListeners", "targListeners", "listener", "offMouse", "fullWidCss", "fullHgtCss", "plotWidCss", "plotHgtCss", "plotLftCss", "plotTopCss", "shouldSetScales", "shouldSetSize", "shouldConvergeSize", "shouldSetCursor", "shouldSetSelect", "shouldSetLegend", "_setSize", "height", "force", "calcSize", "resetYSeries", "commit", "calcPlotRect", "calcAxesRects", "bb", "CYCLE_LIMIT", "convergeSize", "converged", "cycleNum", "axesConverged", "axesCalc", "paddingConverged", "paddingCalc", "setSize", "hasTopAxis", "hasBtmAxis", "hasRgtAxis", "hasLftAxis", "side", "_size", "isVt", "labelSize", "fullSize", "sidesWithAxes", "_padding", "off1", "off2", "off3", "off0", "incrOffset", "focus", "cursorPts", "initCursorPt", "initSeries", "sv", "_ptDia", "rowCells", "fire", "addSeries", "delSeries", "tr", "initAxis", "av", "autoPadSide", "padding", "dataLen", "i0", "i1", "data0", "viaAutoScaleX", "setData", "_data", "_resetScales", "xsc", "autoScaleX", "_setScale", "ctxStroke", "ctxFill", "ctxWidth", "ctxDash", "ctxJoin", "ctxCap", "ctxFont", "ctxAlign", "ctxBaseline", "ctxAlpha", "setCtxStyle", "dash", "cap", "setFontStyle", "baseline", "accScale", "wsc", "psc", "setScales", "wipScales", "xFacet", "yFacet", "yScaleKey", "yData", "changed", "anyChanged", "distr", "getOuterIdxs", "ydata", "_idxs", "cacheStrokeFill", "drawPath", "_gaps", "show", "_points", "strokeStyle", "fillStyle", "gapsClip", "flags", "boundsClip", "offset", "_pxAlign", "halfWid", "strokeFill", "fillStroke", "lineWidth", "lineDash", "lineCap", "fillPath", "didStrokeFill", "bi", "lowerEdge", "lowerData", "bandClip", "gapsClip2", "_fillStyle", "CLIP_FILL_STROKE", "doFill", "doStroke", "getIncrSpace", "fullDim", "incrSpace", "drawOrthoLines", "filts", "pos0", "pos1", "_space", "_splits", "values", "_p", "shiftDir", "shiftAmt", "baseLpos", "plotDim", "plotOff", "axisGap", "tickSize", "angle", "basePos", "finalPos", "textAlign", "textBaseline", "lineHeight", "canOffs", "_values", "_parts", "queuedCommit", "_commit", "_el", "_show", "_pos", "posOffset", "syncRect", "select", "setSelect", "updateCursor", "setLegend", "rebuildPaths", "recalcAxes", "setScale", "xCursor", "yCursor", "vCursor", "hCursor", "rawMouseLeft0", "rawMouseTop0", "rawMouseLeft1", "rawMouseTop1", "dragging", "dragX", "dragY", "selectDiv", "_fire", "prop", "_hideProps", "toggleDOM", "onOff", "_pub", "setFocus", "pubSync", "setBand", "addBand", "delBand", "setAlpha", "closestDist", "closestSeries", "focusedSeries", "allFocused", "_setAlpha", "i2", "isFocused", "posToVal", "pos", "closestIdxFromXpos", "batch", "setSelH", "setSelV", "setSelX", "setSelY", "syncLegend", "vals", "didx", "sidx", "setLegendValues", "idx", "noDataInRange", "mouseXPos", "valAtPosX", "idx2", "yVal2", "xPos2", "dist", "bias", "mouseYPos", "mouseYVal", "seriesYValSign", "mouseYValSign", "hPos", "vPos", "ptWid", "ptHgt", "ptLft", "ptTop", "getBBox", "xKey", "yKey", "matchXKeys", "matchYKeys", "xKeySrc", "yKeySrc", "sdrag", "sori", "sPosToVal", "sOff", "sDim", "matchingX", "matchingY", "hideSelect", "rawDX", "rawDY", "_rawDX", "uni", "syncKey", "xSyncKey", "ySyncKey", "shouldPub", "defer", "mouseMove", "_l", "_t", "_w", "_h", "_i", "cacheMouse", "initial", "snap", "syncOptsSrc", "xValSrc", "yValSrc", "rotSrc", "_xDim", "_yDim", "_xPos", "_yPos", "__l", "mouseDown", "mouseUp", "hasSelect", "mouseLeave", "_dragging", "snapH", "snapV", "snapProx", "dragH", "dragV", "dblClick", "syncPxRatio", "events", "hooks", "evName", "a1", "a2", "sync", "pub", "destroy", "_init", "paths", "paths", "u", "sidx", "i0", "i1", "s", "xdata", "ydata", "scaleX", "scaleY", "stroke", "x_width", "i", "x0", "y0", "x1", "y1", "fill", "minY", "minX", "maxX", "safe_to_fixed", "number", "decimals", "make_opts", "parent", "scale", "rect", "scaler", "x", "self", "rawValue", "vals", "space", "val", "HistoChart", "chartEl", "data", "opts", "uPlot", "quantile_data", "ChartData", "new_scale", "socketPath", "csrfToken", "Hooks", "ChartData", "liveSocket", "topbar", "info"]
}
